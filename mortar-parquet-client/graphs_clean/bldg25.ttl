@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix constant: <http://qudt.org/vocab/constant/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix ns2: <http://buildsys.org/ontologies/bldg25#> .
@prefix ns3: <http://buildsys.org/ontologies/bldg25#bldg25.CHW.Pump1_Start/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qkdv: <http://qudt.org/vocab/dimensionvector/> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ref: <https://brickschema.org/schema/Brick/ref#> .
@prefix s223: <http://data.ashrae.org/standard223#> .
@prefix sdo: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix tag: <https://brickschema.org/schema/BrickTag#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

qudt:Statement a rdfs:Class ;
    rdfs:label "Statement" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdf:Statement .

ns2:AHU04 a brick:Air_Handler_Unit ;
    brick:feeds ns2:VAVRM206A,
        ns2:VAVRM210 ;
    brick:hasPoint ns2:bldg25.AHU.AHU04.CCV,
        ns2:bldg25.AHU.AHU04.Cooling_Valve_Output,
        ns2:bldg25.AHU.AHU04.Heating_Valve_Output,
        ns2:bldg25.AHU.AHU04.Mixed_Air_Temp,
        ns2:bldg25.AHU.AHU04.Outside_Air_Temp_Virtual,
        ns2:bldg25.AHU.AHU04.Return_Air_Temp,
        ns2:bldg25.AHU.AHU04.Supply_Air_Temp,
        ns2:bldg25.AHU.AHU04.Supply_Air_Temp_Setpoint,
        ns2:bldg25.AHU.AHU04.Zone_Air_Temp ;
    brick:isFedBy ns2:chiller .

ns2:bldg25 a brick:Building ;
    brick:area [ brick:hasUnit unit:FT2 ;
            brick:value 19351 ] .

ns2:floor2 a brick:Floor ;
    brick:hasPart ns2:RM206A_room,
        ns2:RM210_room .

qudt:BaseDimensionMagnitude a owl:Class ;
    rdfs:label "Base Dimension Magnitude" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI,
        "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A <em>Dimension</em> expresses a magnitude for a base quantiy kind such as mass, length and time.</p>
<p class="lm-para">DEPRECATED - each exponent is expressed as a property. Keep until a validaiton of this has been done.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:hasBaseQuantityKind ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:float ;
            owl:onProperty qudt:vectorMagnitude ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:int ;
            owl:onProperty qudt:hasBaseQuantityKind ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:int ;
            owl:onProperty qudt:vectorMagnitude ],
        qudt:Concept .

qudt:BigEndian a qudt:EndianType ;
    rdfs:label "Big Endian" ;
    dtype:literal "big" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:BinaryPrefix a owl:Class ;
    rdfs:label "Binary Prefix" ;
    rdfs:comment "A <em>Binary Prefix</em> is a prefix for multiples of units in data processing, data transmission, and digital information, notably the bit and the byte, to indicate multiplication by a power of 2." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Prefix .

qudt:CT_UNCOUNTABLE a qudt:CardinalityType ;
    rdfs:label "Uncountable Cardinality Type" ;
    dcterms:description "Any set with cardinality greater than that of the natural numbers, or \\(| X | \\; >  \\; | \\mathbb N | \\),  for example \\(| R| \\; =  \\;  c  \\; > |\\mathbb N |\\), is said to be uncountable."^^qudt:LatexString ;
    qudt:literal "uncountable" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Citation a owl:Class ;
    rdfs:label "Citation" ;
    rdfs:comment "Provides a simple way of making citations."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dcterms:description ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:url ],
        qudt:Concept .

qudt:ConstantValue a owl:Class ;
    rdfs:label "Constant value" ;
    rdfs:comment "Used to specify the values of a constant."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:exactConstant ],
        qudt:QuantityValue .

qudt:CountingUnit a owl:Class ;
    rdfs:label "Counting Unit" ;
    rdfs:comment "Used for all units that express counts. Examples are Atomic Number, Number, Number per Year, Percent and Sample per Second."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit .

qudt:CurrencyUnit a owl:Class ;
    rdfs:label "Currency Unit" ;
    rdfs:comment "Currency Units have their own subclass of unit because: (a) they have additonal properites such as 'country' and (b) their URIs do not conform to the same rules as other units."^^rdf:HTML,
        "Used for all units that express currency."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit .

qudt:DecimalPrefix a owl:Class ;
    rdfs:label "Decimal Prefix" ;
    rdfs:comment "A <em>Decimal Prefix</em> is a prefix for multiples of units that are powers of 10." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Prefix .

qudt:DerivedUnit a owl:Class ;
    rdfs:label "Derived Unit" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Category:SI_derived_units"^^xsd:anyURI ;
    rdfs:comment "A DerivedUnit is a type specification for units that are derived from other units."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Unit .

qudt:Discipline a owl:Class ;
    rdfs:label "Discipline" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:EnumeratedQuantity a qudt:AspectClass ;
    rdfs:label "Enumerated Quantity" ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:EnumeratedValue ;
            owl:onProperty qudt:enumeratedValue ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Enumeration ;
            owl:onProperty qudt:enumeration ],
        qudt:Concept .

qudt:EnumerationScale a owl:Class ;
    rdfs:label "Enumeration scale" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Scale,
        dtype:Enumeration .

qudt:ISO8601-UTCDateTime-BasicFormat a qudt:DateTimeStringEncodingType ;
    rdfs:label "ISO 8601 UTC Date Time - Basic Format" ;
    qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}.[0-9]+Z",
        "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:LittleEndian a qudt:EndianType ;
    rdfs:label "Little Endian" ;
    dtype:literal "little" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:LogarithmicUnit a owl:Class ;
    rdfs:label "Logarithmic Unit" ;
    rdfs:comment "Logarithmic units are abstract mathematical units that can be used to express any quantities (physical or mathematical) that are defined on a logarithmic scale, that is, as being proportional to the value of a logarithm function. Examples of logarithmic units include common units of information and entropy, such as the bit, and the byte, as well as units of relative signal strength magnitude such as the decibel."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit .

qudt:NIST_SP811_Comment a owl:Class ;
    rdfs:label "NIST SP~811 Comment" ;
    dc:description "National Institute of Standards and Technology (NIST) Special Publication 811 Comments on some quantities and their units" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Comment .

qudt:PlaneAngleUnit a owl:Class ;
    rdfs:label "Plane Angle Unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:AngleUnit .

qudt:QuantityKindDimensionVector_CGS-EMU a owl:Class ;
    rdfs:label "CGS EMU Dimension vector" ;
    rdfs:comment "A <em>CGS EMU Dimension Vector</em> is used to specify the dimensions for EMU C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-ESU a owl:Class ;
    rdfs:label "CGS ESU Dimension vector" ;
    rdfs:comment "A <em>CGS ESU Dimension Vector</em> is used to specify the dimensions for ESU C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-GAUSS a owl:Class ;
    rdfs:label "CGS GAUSS Dimension vector" ;
    rdfs:comment "A <em>CGS GAUSS Dimension Vector</em> is used to specify the dimensions for Gaussioan C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-LH a owl:Class ;
    rdfs:label "CGS LH Dimension vector" ;
    rdfs:comment "A <em>CGS LH Dimension Vector</em> is used to specify the dimensions for Lorentz-Heaviside C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_ISO a owl:Class ;
    rdfs:label "ISO Dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_Imperial a owl:Class ;
    rdfs:label "Imperial dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityType a owl:Class ;
    rdfs:label "Quantity type" ;
    dcterms:description "\\(\\textit{Quantity Type}\\) is an enumeration of quanity kinds. It specializes \\(\\boxed{dtype:EnumeratedValue}\\) by constrinaing \\(\\boxed{dtype:value}\\) to instances of \\(\\boxed{qudt:QuantityKind}\\)."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty dtype:value ],
        qudt:EnumeratedValue .

qudt:ScalarDatatype a owl:Class ;
    rdfs:label "Scalar Datatype" ;
    dcterms:description "Scalar data types are those that have a single value. The permissible values are defined over a domain that may be integers, float, character or boolean. Often a scalar data type is referred to as a primitive data type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom rdfs:Datatype ;
            owl:onProperty qudt:rdfsDatatype ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bits ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bytes ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:length ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:maxExclusive ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:maxInclusive ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:minExclusive ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:minInclusive ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:rdfsDatatype ],
        qudt:Datatype .

qudt:ShortSignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Short Signed Integer Encoding" ;
    qudt:bytes 2 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SolidAngleUnit a owl:Class ;
    rdfs:label "Solid Angle Unit" ;
    dcterms:description "The solid angle subtended by a surface S is defined as the surface area of a unit sphere covered by the surface S's projection onto the sphere. A solid angle is related to the surface of a sphere in the same way an ordinary angle is related to the circumference of a circle. Since the total surface area of the unit sphere is 4*pi, the measure of solid angle will always be between 0 and 4*pi." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:AngleUnit .

qudt:StructuredDatatype a owl:Class ;
    rdfs:label "Structured Data Type" ;
    dcterms:description "A \"Structured Datatype\", in contrast to scalar data types, is used to characterize classes of more complex data structures, such as linked or indexed lists, trees, ordered trees, and multi-dimensional file formats." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:elementType ],
        qudt:Datatype .

qudt:Symbol a owl:Class ;
    rdfs:label "Symbol" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:UCUMci a rdfs:Datatype ;
    rdfs:label "case-insensitive UCUM code" ;
    qudt:deprecated true ;
    rdfs:comment "Lexical pattern for the case-insensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21-\\x60,\\x7b-\\x7e]+" ] ) .

qudt:UCUMci-term a rdfs:Datatype ;
    rdfs:label "case-insensitive UCUM term" ;
    qudt:deprecated true ;
    rdfs:comment "Lexical pattern for the terminal symbols in the case-insensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x60,\\x7c,\\x7e]+" ] ) .

qudt:UTF16-StringEncoding a qudt:StringEncodingType ;
    rdfs:label "UTF-16 String" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UTF8-StringEncoding a qudt:StringEncodingType ;
    rdfs:label "UTF-8 Encoding" ;
    qudt:bytes 8 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UserQuantityKind a owl:Class ;
    rdfs:label "User Quantity Kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:hasQuantityKind ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:hasQuantityKind ],
        qudt:AbstractQuantityKind .

qudt:Wikipedia a qudt:Organization ;
    rdfs:label "Wikipedia" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:acronym a owl:DatatypeProperty ;
    rdfs:label "acronym" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:allowedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "allowed unit of system" ;
    dcterms:description "This property relates a unit of measure with a unit system that does not define the unit, but allows its use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
    dcterms:isReplacedBy qudt:applicableSystem ;
    qudt:deprecated true ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isUnitOfSystem ;
    owl:inverseOf qudt:hasAllowedUnit .

qudt:applicablePlanckUnit a owl:ObjectProperty ;
    rdfs:label "applicable Planck unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:belongsToSystemOfQuantities a owl:ObjectProperty ;
    rdfs:label "belongs to system of quantities" ;
    rdfs:domain qudt:QuantityKind ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:SystemOfQuantityKinds .

qudt:categorizedAs a owl:ObjectProperty ;
    rdfs:label "categorized as" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:citation a owl:DatatypeProperty ;
    rdfs:label "citation" ;
    qudt:plainTextDescription "Used to provide an annotation for an informative reference." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:code a owl:DatatypeProperty ;
    rdfs:label "code" ;
    dcterms:description "A code is a string that uniquely identifies a QUDT concept. The use of this property has been deprecated."^^rdf:HTML ;
    qudt:deprecated true ;
    rdfs:domain qudt:Concept ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:coherentUnitSystem a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "coherent unit system" ;
    dcterms:description "<p>A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. In such a coherent system, no numerical factor other than the number 1 ever occurs in the expressions for the derived units in terms of the base units. For example, the \\(newton\\) and the \\(joule\\). These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per (1) second per (1) second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per (1) second per (1) second, and the work done by 1 dyne acting over 1 centimetre. So \\(1\\,newton = 10^5 dyne\\), \\(1 joule = 10^7 erg\\), making each of the four compatible in a decimal sense within its respective other system, but not coherent therein.</p>"^^qudt:LatexString ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Coherence_(units_of_measurement)"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnitSystem .

qudt:conversionCoefficient a owl:DatatypeProperty ;
    rdfs:label "conversion coefficient" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:double .

qudt:currencyCode a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "currency code" ;
    dcterms:description "Alphabetic Currency Code as defined by ISO 4217. For example, US Dollar has the code 'USD'."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string ;
    rdfs:seeAlso "https://en.wikipedia.org/wiki/ISO_4217"^^xsd:anyURI .

qudt:currencyExponent a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "currency exponent" ;
    dcterms:description "The currency exponent indicates the number of decimal places between a major currency unit and its minor currency unit. For example, the US dollar is the major currency unit of the United States, and the US cent is the minor currency unit. Since one cent is 1/100 of a dollar, the US dollar has a currency exponent of 2. However, the Japanese Yen has no minor currency units, so the yen has a currency exponent of 0."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:integer .

qudt:currencyNumber a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "currency number" ;
    dcterms:description "Numeric currency Code as defined by ISO 4217. For example, US Dollar has the number 840."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:positiveInteger ;
    rdfs:seeAlso "https://en.wikipedia.org/wiki/ISO_4217"^^xsd:anyURI .

qudt:denominatorDimensionVector a owl:ObjectProperty ;
    rdfs:label "denominator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector .

qudt:dimensionExponent a owl:DatatypeProperty ;
    rdfs:label "dimension exponent" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:elementKind a owl:ObjectProperty ;
    rdfs:label "element kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:exactMatch a owl:ObjectProperty ;
    rdfs:label "exact match" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf owl:sameAs .

qudt:fieldCode a owl:DatatypeProperty ;
    rdfs:label "field code" ;
    qudt:plainTextDescription "A field code is a generic property for representing unique codes that make up other identifers. For example each QuantityKind class caries a domain code as its field code." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:figure a owl:ObjectProperty ;
    rdfs:label "figure" ;
    dcterms:description "Provides a link to an image."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Figure .

qudt:floatPercentage a rdfs:Datatype ;
    rdfs:label "float percentage" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:float ;
    owl:equivalentClass [ a rdfs:Datatype ;
            owl:onDatatype xsd:float ;
            owl:withRestrictions ( [ xsd:minInclusive "0.0"^^xsd:float ] [ xsd:maxInclusive "100.0"^^xsd:float ] ) ] .

qudt:guidance a owl:DatatypeProperty ;
    rdfs:label "guidance" ;
    rdfs:domain qudt:Concept ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range rdf:HTML .

qudt:hasDenominatorPart a owl:ObjectProperty ;
    rdfs:label "has quantity kind dimension vector denominator part" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasDimension a owl:ObjectProperty ;
    rdfs:label "has dimension" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasDimensionExpression a owl:ObjectProperty ;
    rdfs:label "dimension expression" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasNonCoherentUnit a qudt:deprecatedProperty,
        owl:ObjectProperty ;
    rdfs:label "has non-coherent unit" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit ;
    owl:inverseOf qudt:coherentUnitOfSystem .

qudt:hasNumeratorPart a owl:ObjectProperty ;
    rdfs:label "has quantity kind dimension vector numerator part" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasPrefixUnit a owl:ObjectProperty ;
    rdfs:label "prefix unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit .

qudt:hasQuantity a owl:ObjectProperty ;
    rdfs:label "has quantity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Quantity .

qudt:hasReferenceQuantityKind a owl:ObjectProperty ;
    rdfs:label "has reference quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasVocabulary a owl:ObjectProperty ;
    rdfs:label "has vocabulary" ;
    qudt:plainTextDescription "Used to relate a class to one or more graphs where vocabularies for the class are defined." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range owl:Ontology .

qudt:integerPercentage a rdfs:Datatype ;
    rdfs:label "integer percentage" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:integer ;
    owl:equivalentClass [ a rdfs:Datatype ;
            rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
            owl:onDatatype xsd:integer ;
            owl:withRestrictions ( [ xsd:minInclusive 0 ] [ xsd:maxInclusive 100 ] ) ] .

qudt:isDimensionInSystem a owl:ObjectProperty ;
    rdfs:label "is dimension in system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:isMetricUnit a owl:DatatypeProperty ;
    rdfs:label "is metric unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:negativeDeltaLimit a owl:DatatypeProperty ;
    rdfs:label "negative delta limit" ;
    dcterms:description "A negative change limit between consecutive sample values for a parameter. The Negative Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:numeratorDimensionVector a owl:ObjectProperty ;
    rdfs:label "numerator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector .

qudt:numericValue a owl:DatatypeProperty ;
    rdfs:label "numeric value" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:NumericUnion .

qudt:omUnit a owl:ObjectProperty ;
    rdfs:label "om unit" ;
    rdfs:domain qudt:Unit ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:onlineReference a owl:DatatypeProperty ;
    rdfs:label "online reference" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:outOfScope a owl:DatatypeProperty ;
    rdfs:label "out of scope" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:positiveDeltaLimit a owl:DatatypeProperty ;
    rdfs:label "Positive delta limit" ;
    dcterms:description "A positive change limit between consecutive sample values for a parameter. The Positive Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:prefix a owl:ObjectProperty ;
    rdfs:label "prefix" ;
    rdfs:comment "Associates a unit with the appropriate prefix, if any." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Prefix .

qudt:quantity a owl:ObjectProperty ;
    rdfs:label "quantity" ;
    dcterms:description "a property to relate an observable thing with a quantity (qud:Quantity)"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:reference a owl:ObjectProperty ;
    rdfs:label "reference" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:referenceUnit a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "reference unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:relevantQuantityKind a owl:ObjectProperty ;
    rdfs:label "relevant quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKind .

qudt:relevantUnit a owl:ObjectProperty ;
    rdfs:label "Relevant Unit" ;
    rdfs:comment "This property is used for qudt:Discipline instances to identify the Unit instances that are used within a given discipline." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit .

qudt:systemDefinition a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "system definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:systemDimension a owl:ObjectProperty ;
    rdfs:label "system dimension" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ucumCaseInsensitiveCode a owl:AnnotationProperty ;
    rdfs:label "ucum case-insensitive code" ;
    dcterms:description "<em>ucumCode</em> associates a QUDT unit with a UCUM case-insensitive code."^^rdf:HTML ;
    qudt:deprecated true ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:ucumCode .

qudt:ucumCaseSensitiveCode a owl:AnnotationProperty ;
    rdfs:label "ucum case-sensitive code" ;
    dcterms:description "<em>ucumCode</em> associates a QUDT unit with with a UCUM case-sensitive code."^^rdf:HTML ;
    qudt:deprecated true ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:ucumCode .

qudt:valueQuantity a owl:ObjectProperty ;
    rdfs:label "value for quantity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:quantityValue .

qudt:valueUnion a rdfs:Datatype ;
    rdfs:label "value union" ;
    dcterms:description "A datatype that is the union of numeric xsd data types. \"numericUnion\" is equivalent to the xsd specification that uses an xsd:union of memberTypes=\"xsd:decimal xsd:double xsd:float xsd:integer\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:equivalentClass [ a owl:Class ;
            owl:unionOf ( xsd:anySimpleType dtype:EnumeratedValue ) ] .

quantitykind:AbsoluteActivity a qudt:QuantityKind ;
    rdfs:label "Absolute Activity"@en ;
    dcterms:description "The \"Absolute Activity\" is the exponential of the ratio of the chemical potential to \\(RT\\) where \\(R\\) is the gas constant and \\(T\\) the thermodynamic temperature."^^qudt:LatexString ;
    qudt:applicableUnit unit:BQ-SEC-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/A00019.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda_B = e^{\\frac{\\mu_B}{RT}}\\), where \\(\\mu_B\\) is the chemical potential of substance \\(B\\), \\(R\\) is the molar gas constant, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda_B\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseVolume .

quantitykind:AbsorbedDose a qudt:QuantityKind ;
    rdfs:label "Absorbed Dose"@en ;
    dcterms:description "\"Absorbed Dose\" (also known as Total Ionizing Dose, TID) is a measure of the energy deposited in a medium by ionizing radiation. It is equal to the energy deposited per unit mass of medium, and so has the unit \\(J/kg\\), which is given the special name Gray (\\(Gy\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAY,
        unit:MicroGRAY,
        unit:MilliGRAY,
        unit:MilliRAD_R,
        unit:RAD_R ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Absorbed_dose"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absorbed_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D = \\frac{d\\bar{\\varepsilon}}{dm}\\), where \\(d\\bar{\\varepsilon}\\) is the mean energy imparted by ionizing radiation to an element of irradiated matter with the mass \\(dm\\)."^^qudt:LatexString ;
    qudt:symbol "D" ;
    rdfs:comment "Note that the absorbed dose is not a good indicator of the likely biological effect. 1 Gy of alpha radiation would be much more biologically damaging than 1 Gy of photon radiation for example. Appropriate weighting factors can be applied reflecting the different relative biological effects to find the equivalent dose. The risk of stoctic effects due to radiation exposure can be quantified using the effective dose, which is a weighted average of the equivalent dose to each organ depending upon its radiosensitivity. When ionising radiation is used to treat cancer, the doctor will usually prescribe the radiotherapy treatment in Gy. When risk from ionising radiation is being discussed, a related unit, the Sievert is used." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:AbsorbedDoseRate a qudt:QuantityKind ;
    rdfs:label "Absorbed Dose Rate"@en ;
    qudt:applicableUnit unit:ERG-PER-GM-SEC,
        unit:GRAY-PER-SEC,
        unit:W-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:informativeReference "http://www.answers.com/topic/absorbed-dose-rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{D} = \\frac{dD}{dt}\\), where \\(dD\\) is the increment of absorbed dose during time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{D}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Absorbed Dose Rate\" is the absorbed dose of ionizing radiation imparted at a given location per unit of time (second, minute, hour, or day)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Absorptance a qudt:QuantityKind ;
    rdfs:label "Absorptance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absorbance"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Absorptance"^^xsd:anyURI,
        "https://www.researchgate.net/post/Absorptance_or_absorbance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha = \\frac{\\Phi_a}{\\Phi_m}\\), where \\(\\Phi_a\\) is the absorbed radiant flux or the absorbed luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Absorptance is the ratio of the radiation absorbed by a surface to that incident upon it. Also known as absorbance." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AccelerationOfGravity a qudt:QuantityKind ;
    rdfs:label "Acceleration Of Gravity"@en ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:plainTextDescription "The acceleration of freely falling bodies under the influence of terrestrial gravity, equal to approximately 9.81 meters (32 feet) per second per second." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:AcceptorDensity a qudt:QuantityKind ;
    rdfs:label "Acceptor Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Acceptor Density\" is the number per volume of acceptor levels." ;
    qudt:symbol "n_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:Acidity a qudt:QuantityKind ;
    rdfs:label "Acidity"@en ;
    qudt:applicableUnit unit:PH ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Acid"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/PH"^^xsd:anyURI ;
    qudt:plaintextDescription "Chemicals or substances having a pH less than 7 are said to be acidic; lower pH means higher acidity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PH .

quantitykind:Action a qudt:QuantityKind ;
    rdfs:label "Action"@en ;
    qudt:applicableUnit unit:AttoJ-SEC,
        unit:J-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Action_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S = \\int Ldt\\), where \\(L\\) is the Lagrange function and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription """An action is usually an integral over time. But for action pertaining to fields, it may be integrated over spatial variables as well. In some cases, the action is integrated along the path followed by the physical system.  If the action is represented as an integral over time, taken a the path of the system between the initial time and the final time of the development of the system.
The evolution of a physical system between two states is determined by requiring the action be minimized or, more generally, be stationary for small perturbations about the true evolution. This requirement leads to differential equations that describe the true evolution. Conversely, an action principle is a method for reformulating differential equations of motion for a physical system as an equivalent integral equation. Although several variants have been defined (see below), the most commonly used action principle is Hamilton's principle.""" ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ActionTime a qudt:QuantityKind ;
    rdfs:label "Action Time"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:comment "Action Time (sec) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ActiveEnergy a qudt:QuantityKind ;
    rdfs:label "Active Energy"@en ;
    qudt:abbreviation "active-energy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=601-01-19"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(W = \\int_{t_1}^{t_2} p dt\\), where \\(p\\) is instantaneous power and the integral interval is the time interval from \\(t_1\\) to \\(t_2\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Active Energy\" is the electrical energy transformable into some other form of energy." ;
    qudt:symbol "W" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InstantaneousPower ;
    skos:broader quantitykind:Energy .

quantitykind:Activity a qudt:QuantityKind ;
    rdfs:label "Activity"@en ;
    dcterms:description "\"Activity\" is the number of decays per unit time of a radioactive sample, the term used to characterise the number of nuclei which disintegrate in a radioactive substance per unit time. Activity is usually measured in Becquerels (\\(Bq\\)), where 1 \\(Bq\\) is 1 disintegration per second, in honor of the scientist Henri Becquerel."^^qudt:LatexString ;
    qudt:applicableUnit unit:BQ,
        unit:Ci,
        unit:GigaBQ,
        unit:KiloBQ,
        unit:KiloCi,
        unit:MegaBQ,
        unit:MicroBQ,
        unit:MicroCi,
        unit:MilliBQ,
        unit:MilliCi,
        unit:NanoBQ ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Radioactive_decay"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_number"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Radioactive_decay"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Radioactive_decay#Radioactive_decay_rates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(A = Z + N\\), where \\(Z\\) is the atomic number and \\(N\\) is the neutron number.

Variation \\(dN\\) of spontaneous number of nuclei \\(N\\) in a particular energy state, in a sample of radionuclide, due to spontaneous nuclear transitions from this state during an infinitesimal time interval, divided by its duration \\(dt\\), thus \\(A = -\\frac{dN}{dt}\\)."""^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:StochasticProcess .

quantitykind:ActivityCoefficient a qudt:QuantityKind ;
    rdfs:label "Activity Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Activity_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f_B = \\frac{\\lambda_B}{(\\lambda_B^*x_B)}\\), where \\(\\lambda_B\\) the absolute activity of substance \\(B\\), \\(\\lambda_B^*\\) is the absolute activity of the pure substance \\(B\\) at the same temperature and pressure, and \\(x_B\\) is the amount-of-substance fraction of substance \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "An \"Activity Coefficient\" is a factor used in thermodynamics to account for deviations from ideal behaviour in a mixture of chemical substances. In an ideal mixture, the interactions between each pair of chemical species are the same (or more formally, the enthalpy change of solution is zero) and, as a result, properties of the mixtures can be expressed directly in terms of simple concentrations or partial pressures of the substances present e.g. Raoult's law. Deviations from ideality are accommodated by modifying the concentration by an activity coefficient. " ;
    qudt:symbol "f_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ActivityThresholds a qudt:QuantityKind ;
    rdfs:label "Activity Thresholds"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_t}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Activity Thresholds\" are thresholds of sensitivity for radioactivity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Adaptation a qudt:QuantityKind ;
    rdfs:label "Adaptation"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Neural_adaptation#Visual"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Adaptation\" is the recovery of visual ability following exposure to light (dark adaptation)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AlphaDisintegrationEnergy a qudt:QuantityKind ;
    rdfs:label "Alpha Disintegration Energy"@en ;
    dcterms:description "The \"Alpha Disintegration Energy\" is the sum of the kinetic energy of the \\(\\alpha\\)-particle produced in the disintegration process and the recoil energy of the product atom in the reference frame in which the emitting nucleus is at rest before its disintegration."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:latexSymbol "\\(Q_a\\)"^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Alpha Disintegration Energy\" is the sum of the kinetic energy of the alpha-particle produced in the disintegration process and the recoil energy of the product atom in the reference frame in which the emitting nucleus is at rest before its disintegration." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:Altitude a qudt:QuantityKind ;
    rdfs:label "Altitude"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Altitude"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Altitude or height is defined based on the context in which it is used (aviation, geometry, geographical survey, sport, and more). As a general definition, altitude is a distance measurement, usually in the vertical or \"up\" direction, between a reference datum and a point or object. The reference datum also often varies according to the context. [Wikipedia]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:AmbientPressure a qudt:QuantityKind ;
    rdfs:label "Ambient Pressure"@en ;
    dcterms:description """The ambient pressure on an object is the pressure of the surrounding medium, such as a gas or liquid, which comes into contact with the object.
The SI unit of pressure is the pascal (Pa), which is a very small unit relative to atmospheric pressure on Earth, so kilopascals (\\(kPa\\)) are more commonly used in this context. """^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "p_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:AmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Amount of Substance"@en ;
    dcterms:description "\"Amount of Substance\" is a standards-defined quantity that measures the size of an ensemble of elementary entities, such as atoms, molecules, electrons, and other particles. It is sometimes referred to as chemical amount. The International System of Units (SI) defines the amount of substance to be proportional to the number of elementary entities present. The SI unit for amount of substance is \\(mole\\). It has the unit symbol \\(mol\\). The mole is defined as the amount of substance that contains an equal number of elementary entities as there are atoms in 0.012kg of the isotope carbon-12. This number is called Avogadro's number and has the value \\(6.02214179(30) \\times 10^{23}\\). The only other unit of amount of substance in current use is the \\(pound-mole\\) with the symbol \\(lb-mol\\), which is sometimes used in chemical engineering in the United States. One \\(pound-mole\\) is exactly \\(453.59237 mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiMOL,
        unit:FemtoMOL,
        unit:IU,
        unit:KiloMOL,
        unit:MOL,
        unit:MicroMOL,
        unit:MilliMOL,
        unit:NanoMOL,
        unit:PicoMOL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Amount_of_substance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_of_substance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstanceConcentrationOfB a qudt:QuantityKind ;
    rdfs:label "Amount of Substance of Concentration of B"@en ;
    qudt:applicableUnit unit:MOL-PER-M3 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_of_substance_concentration"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B = \\frac{n_B}{V}\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Amount of Substance of Concentration of B\" is defined as the amount of a constituent divided by the volume of the mixture." ;
    qudt:symbol "C_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstanceFractionOfB a qudt:QuantityKind ;
    rdfs:label "Amount of Substance of Fraction of B"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x_B = \\frac{n_B}{n}\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(n\\) is the total amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Amount of Substance of Fraction of B\" is defined as tthe amount of a constituent divided by the total amount of all constituents in a mixture." ;
    qudt:symbol "X_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstancePerUnitMassPressure a qudt:QuantityKind ;
    rdfs:label "Molar Mass variation due to Pressure"@en ;
    qudt:applicableUnit unit:MOL-PER-KiloGM-PA ;
    qudt:hasDimensionVector qkdv:A1E0L1I0M-2H0T2D0 ;
    qudt:plainTextDescription "The \"Variation of Molar Mass\" of a gas as a function of pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngleOfAttack a qudt:QuantityKind ;
    rdfs:label "Angle Of Attack"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Angle of attack  is the angle between the oncoming air or relative wind and a reference line on the airplane or wing." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:AngleOfOpticalRotation a qudt:QuantityKind ;
    rdfs:label "Angle of Optical Rotation"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Optical_rotation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Angle of Optical Rotation\" is the angle through which plane-polarized light is rotated clockwise, as seen when facing the light source, in passing through an optically active medium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:AngularAcceleration a qudt:QuantityKind ;
    rdfs:label "Angular Acceleration"@en ;
    dcterms:description "Angular acceleration is the rate of change of angular velocity over time. Measurement of the change made in the rate of change of an angle that a spinning object undergoes per unit time. It is a vector quantity.  Also called Rotational acceleration. In SI units, it is measured in radians per second squared (\\(rad/s^2\\)), and is usually denoted by the Greek letter alpha."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-SEC2,
        unit:RAD-PER-SEC2,
        unit:REV-PER-SEC2 ;
    qudt:baseCGSUnitDimensions "U/T^2" ;
    qudt:baseSIUnitDimensions "\\(/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_acceleration"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseSquareTime .

quantitykind:AngularDistance a qudt:QuantityKind ;
    rdfs:label "Angular Distance"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Angular distance travelled by orbiting vehicle measured from the azimuth of closest approach." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:AngularMomentumPerAngle a qudt:QuantityKind ;
    rdfs:label "Angular Momentum per Angle"@en ;
    qudt:applicableUnit unit:N-M-SEC-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ApogeeRadius a qudt:QuantityKind ;
    rdfs:label "Apogee Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Apogee radius of an elliptical orbit" ;
    qudt:symbol "r_2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Radius .

quantitykind:AreaAngle a qudt:QuantityKind ;
    rdfs:label "Area Angle"@en ;
    qudt:applicableUnit unit:M2-SR ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaTemperature a qudt:QuantityKind ;
    rdfs:label "Area Temperature"@en ;
    qudt:applicableUnit unit:FT2-DEG_F,
        unit:M2-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Area Thermal Expansion"@en ;
    qudt:applicableUnit unit:M2-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/area_thermal_expansion"^^xsd:anyURI ;
    qudt:plainTextDescription "When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaTime a qudt:QuantityKind ;
    rdfs:label "Area Time"@en ;
    qudt:applicableUnit unit:CentiM2-MIN,
        unit:CentiM2-SEC,
        unit:HR-FT2,
        unit:SEC-FT2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaTimeTemperature a qudt:QuantityKind ;
    rdfs:label "Area Time Temperature"@en ;
    qudt:applicableUnit unit:FT2-HR-DEG_F,
        unit:FT2-SEC-DEG_F ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreicHeatFlowRate a qudt:QuantityKind ;
    rdfs:label "Aeric Heat Flow Rate"@en ;
    qudt:abbreviation "heat-flow-rate" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rate_of_heat_flow"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = \\frac{\\Phi}{A}\\), where \\(\\Phi\\) is heat flow rate and \\(A\\) is area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Density of heat flow rate." ;
    qudt:symbol "φ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:closeMatch <http://dbpedia.org/resource/Heat_transfer> .

quantitykind:Asset a qudt:QuantityKind ;
    rdfs:label "Asset"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "An Asset is an economic resource owned by a business or company. Simply stated, assets are things of value that can be readily converted into cash (although cash itself is also considered an asset)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AtmosphericHydroxylationRate a qudt:QuantityKind ;
    rdfs:label "Atmospheric Hydroxylation Rate"@en ;
    qudt:applicableUnit unit:CentiM3-PER-MOL-SEC ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T-1D0 ;
    qudt:plainTextDescription "A second order reaction rate constant that is a specific second order reaction rate constant that governs the kinetics of an atmospheric, gas-phase reaction between hydroxyl radicals and an organic chemical." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SecondOrderReactionRateConstant .

quantitykind:AtomScatteringFactor a qudt:QuantityKind ;
    rdfs:label "Atom Scattering Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://reference.iucr.org/dictionary/Atomic_scattering_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f = \\frac{E_a}{E_e}\\), where \\(E_a\\) is the radiation amplitude scattered by the atom and \\(E_e\\) is the radiation ampliture scattered by a single electron."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Atom Scattering Factor\" is measure of the scattering power of an isolated atom." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AtomicAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Atomic Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_a = -\\frac{\\mu}{n}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(n\\) is the number density of the atoms in the substance."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Atomic Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per the number of atoms in the substance." ;
    qudt:symbol "μₐ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area ;
    skos:closeMatch quantitykind:MolarAttenuationCoefficient .

quantitykind:AtomicCharge a qudt:QuantityKind ;
    rdfs:label "Atomic Charge"@en ;
    qudt:applicableUnit unit:A-HR,
        unit:A-SEC,
        unit:AttoC,
        unit:C,
        unit:C_Ab,
        unit:C_Stat,
        unit:CentiC,
        unit:DecaC,
        unit:DeciC,
        unit:E,
        unit:ElementaryCharge,
        unit:ExaC,
        unit:F,
        unit:FR,
        unit:FemtoC,
        unit:GigaC,
        unit:HectoC,
        unit:KiloA-HR,
        unit:KiloC,
        unit:MegaC,
        unit:MicroC,
        unit:MilliA-HR,
        unit:MilliC,
        unit:NanoC,
        unit:PetaC,
        unit:PicoC,
        unit:PlanckCharge,
        unit:TeraC,
        unit:YoctoC,
        unit:YottaC,
        unit:ZeptoC,
        unit:ZettaC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:informativeReference "http://www.answers.com/topic/atomic-charge"^^xsd:anyURI ;
    qudt:plainTextDescription "The electric charge of an ion, equal to the number of electrons the atom has gained or lost in its ionization multiplied by the charge on one electron." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCharge .

quantitykind:AtomicMass a qudt:QuantityKind ;
    rdfs:label "Atomic Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Atomic Mass\" is the mass of a specific isotope, most often expressed in unified atomic mass units." ;
    qudt:symbol "m_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:AtomicNumber a qudt:QuantityKind ;
    rdfs:label "Atomic Number"@en ;
    qudt:applicableUnit unit:Z ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_number"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Atomic Number\", also known as the proton number, is the number of protons found in the nucleus of an atom and therefore identical to the charge number of the nucleus. A nuclide is a species of atom with specified numbers of protons and neutrons. Nuclides with the same value of Z but different values of N are called isotopes of an element. The ordinal number of an element in the periodic table is equal to the atomic number. The atomic number equals the charge of the nucleus in units of the elementary charge." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Count .

quantitykind:AttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F(x) = Ae^{-\\alpha x} \\cos{[\\beta (x - x_0)]}\\), then \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The attenuation coefficient is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter. A large attenuation coefficient means that the beam is quickly \"attenuated\" (weakened) as it passes through the medium, and a small attenuation coefficient means that the medium is relatively transparent to the beam. The Attenuation Coefficient is also called linear attenuation coefficient, narrow beam attenuation coefficient, or absorption coefficient." ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AuditoryThresholds a qudt:QuantityKind ;
    rdfs:label "Auditory Thresholds"@en ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_a}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Auditory Thresholds\" is the thresholds of sensitivity to auditory signals and other input to the ear or the sense of hearing." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SoundPowerLevel .

quantitykind:AuxillaryMagneticField a qudt:QuantityKind ;
    rdfs:label "Auxillary Magnetic Field"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:AT-PER-IN,
        unit:AT-PER-M,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM,
        unit:OERSTED ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:latexSymbol "H"^^qudt:LatexString ;
    qudt:plainTextDescription "Magnetic Fields surround magnetic materials and electric currents and are detected by the force they exert on other magnetic materials and moving electric charges. The electric and magnetic fields are two interrelated aspects of a single object, called the electromagnetic field. A pure electric field in one reference frame is observed as a combination of both an electric field and a magnetic field in a moving reference frame. The Auxillary Magnetic Field, H characterizes how the true Magnetic Field B influences the organization of magnetic dipoles in a given medium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFieldStrength_H .

quantitykind:AverageEnergyLossPerElementaryChargeProduced a qudt:QuantityKind ;
    rdfs:label "Average Energy Loss per Elementary Charge Produced"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:latexDefinition "\\(W_i = \\frac{E_k}{N_i}\\), where \\(E_k\\) is the initial kinetic energy of an ionizing charged particle and \\(N_i\\) is the total ionization produced by that particle."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Average Energy Loss per Elementary Charge Produced\" is also referred to as average energy loss per ion pair formed." ;
    qudt:symbol "W_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:AverageHeadEndPressure a qudt:QuantityKind ;
    rdfs:label "Average Head End Pressure"@en ;
    qudt:abbreviation "AHEP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:HeadEndPressure .

quantitykind:AverageLogarithmicEnergyDecrement a qudt:QuantityKind ;
    rdfs:label "Average Logarithmic Energy Decrement"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://everything2.com/title/Average+logarithmic+energy+decrement+per+collision"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Average Logarithmic Energy Decrement\" is a measure of the amount of energy a neutron loses upon colliding with various nuclei. It is the average value of the increase in lethargy in elastic collisions between neutrons and nuclei whose kinetic energy is negligible compared with that of the neutrons." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AverageSpecificImpulse a qudt:QuantityKind ;
    rdfs:label "Average Specific Impulse"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:comment "Avg Specific Impulse (lbf-sec/lbm) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificImpulse .

quantitykind:AverageVacuumThrust a qudt:QuantityKind ;
    rdfs:label "Average Vacuum Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "AVT" ;
    skos:broader quantitykind:VacuumThrust .

quantitykind:Basicity a qudt:QuantityKind ;
    rdfs:label "Acidity"@en ;
    qudt:applicableUnit unit:PH ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Base_(chemistry)"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/PH"^^xsd:anyURI ;
    qudt:plaintextDescription "Chemicals or substances having a pH higher than 7 are said to be basic; higher pH means higher basicity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PH .

quantitykind:BendingMomentOfForce a qudt:QuantityKind ;
    rdfs:label "Bending Moment of Force"@en ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:KiloGM_F-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torque"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bending_moment"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M_b = M \\cdot e_Q\\), where \\(M\\) is the momentof force and \\(e_Q\\) is a unit vector directed along a \\(Q-axis\\) with respect to which the torque is considered."^^qudt:LatexString ;
    qudt:plainTextDescription "A bending moment exists in a structural element when a moment is applied to the element so that the element bends. It is the component of moment of force perpendicular to the longitudinal axis of a beam or a shaft." ;
    qudt:symbol "M_b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Torque .

quantitykind:BetaDisintegrationEnergy a qudt:QuantityKind ;
    rdfs:label "Beta Disintegration Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Decay_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Beta Disintegration Energy\" is the  energy released by a beta particle radioactive decay. It is the sum of the maximum beta-particle kinetic energy and the recoil energy of the atom produced in the reference frame in which the emitting nucleus is at rest before its disintegration." ;
    qudt:symbol "Qᵦ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:BevelGearPitchAngle a qudt:QuantityKind ;
    rdfs:label "Bevel Gear Pitch Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Pitch angle in bevel gears is the angle between an element of a pitch cone and its axis. In external and internal bevel gears, the pitch angles are respectively less than and greater than 90 degrees." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:BindingFraction a qudt:QuantityKind ;
    rdfs:label "Binding Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/binding+fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b = \\frac{B_r}{A}\\), where \\(B_r\\) is the relative mass defect and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Binding Fraction\" is the ratio of the binding energy of a nucleus to the atomic mass number." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BioconcentrationFactor a qudt:QuantityKind ;
    rdfs:label "Bioconcentration Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The bioconcentration factor is the ratio of the concentration of a chemical substance in biota over the concentration of the same chemical substance in water. It is related to the octanol-water partition coefficient." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:BiodegredationHalfLife a qudt:QuantityKind ;
    rdfs:label "Biodegredation Half Life"@en ;
    qudt:applicableUnit unit:DAY ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "A time that quantifies how long it takes to reduce a substance's concentration by 50% from any concentration point in time in a water or soil environment by either bacteria or another living organism." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:BodyMassIndex a qudt:QuantityKind ;
    rdfs:label "Body Mass Index"@en ;
    dcterms:description "\\(\\textit{Body Mass Index}\\), BMI, is an index of weight for height, calculated as: \\(BMI = \\frac{M_{body}}{H^2}\\), where \\(M_{body}\\) is body mass in kg, and \\(H\\) is height in metres. The BMI has been used as a guideline for defining whether a person is overweight because it minimizes the effect of height, but it does not take into consideration other important factors, such as age and body build. The BMI has also been used as an indicator of obesity on the assumption that the higher the index, the greater the level of body fat."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198631477.001.0001/acref-9780198631477-e-254"^^xsd:anyURI ;
    qudt:symbol "BMI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "BMI" .

quantitykind:BoilingPoint a qudt:QuantityKind ;
    rdfs:label "Boiling Point Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:plainTextDescription "A temperature that is the one at which a substance will change its physical state from a liquid to a gas.  It is also the temperature where the liquid and gaseous forms of a pure substance can exist in equilibrium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:BraggAngle a qudt:QuantityKind ;
    rdfs:label "Bragg Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://reference.iucr.org/dictionary/Bragg_angle"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(2d\\sin{\\vartheta} = n\\lambda \\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\vartheta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Bragg Angle\" describes the condition for a plane wave to be diffracted from a family of lattice planes, the angle between the wavevector of the incident plane wave, and the lattice planes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:Breadth a qudt:QuantityKind ;
    rdfs:label "Breadth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Length"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wiktionary.org/wiki/breadth"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Breadth\" is the extent or measure of how broad or wide something is." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:BucklingFactor a qudt:QuantityKind ;
    rdfs:label "Buckling Factor"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:BulkModulus a qudt:QuantityKind ;
    rdfs:label "Bulk Modulus"@en ;
    qudt:applicableUnit unit:PA,
        unit:PicoPA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bulk_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K = \\frac{p}{\\vartheta}\\), where \\(p\\) is pressure and \\(\\vartheta\\) is volume strain."^^qudt:LatexString ;
    qudt:plainTextDescription "The bulk modulus of a substance measures the substance's resistance to uniform compression. It is defined as the ratio of the infinitesimal pressure increase to the resulting relative decrease of the volume." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BurgersVector a qudt:QuantityKind ;
    rdfs:label "Burgers Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Burgers_vector"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Burgers Vector\" is the vector characterizing a dislocation, i.e. the closing vector in a Burgers circuit encircling a dislocation line." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:BurnTime a qudt:QuantityKind ;
    rdfs:label "Burn Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:symbol "t" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:CENTER-OF-GRAVITY_X a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the X axis"@en ;
    dcterms:isReplacedBy quantitykind:CenterOfGravity_X ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-GRAVITY_Y a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the Y axis"@en ;
    dcterms:isReplacedBy quantitykind:CenterOfGravity_Y ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-GRAVITY_Z a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the Z axis"@en ;
    dcterms:isReplacedBy quantitykind:CenterOfGravity_Z ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-MASS a qudt:QuantityKind ;
    rdfs:label "Center of Mass (CoM)"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "The point at which the distributed mass of a composite body can be acted upon by a force without inducing any rotation of the composite body." ;
    qudt:symbol "R" ;
    qudt:url "http://en.wikipedia.org/wiki/Center_of_mass"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "COM" ;
    skos:broader quantitykind:PositionVector .

quantitykind:CONTRACT-END-ITEM-SPECIFICATION-MASS a qudt:QuantityKind ;
    rdfs:label "Contract End Item (CEI) Specification Mass."@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Contractual mass requirement of a delivered item. Note that The term 'control mass' is sometimes utilized as a limit in lieu of CEI mass when a CEI mass does not exist. The term 'Interface Control Document Mass' is another alternative for specifying a contractual mass requirement." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "CEI" ;
    skos:broader quantitykind:Mass .

quantitykind:CONTROL-MASS a qudt:QuantityKind ;
    rdfs:label "Control Mass."@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The upper design gross mass limit of a system at a specified mission event against which margins are calculated after accounting for basic masses of flight hardware, MGA, and uncertainties. It may include propellants, crew, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Capacitance a qudt:QuantityKind ;
    rdfs:label "Capacitance"@en ;
    qudt:applicableUnit unit:AttoFARAD,
        unit:FARAD,
        unit:FARAD_Ab,
        unit:FARAD_Stat,
        unit:MicroFARAD,
        unit:MilliFARAD,
        unit:NanoFARAD,
        unit:PicoFARAD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Capacitance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C = Q/U\\), where \\(Q\\) is electric charge and \\(V\\) is voltage."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Capacitance\" is the ability of a body to hold an electrical charge; it is quantified as the amount of electric charge stored for a given electric potential. Capacitance is a scalar-valued quantity." ;
    qudt:symbol "C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CarrierLifetime a qudt:QuantityKind ;
    rdfs:label "Carrier LifetIme"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Carrier_lifetime"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tau, \\tau_n, \\tau_p\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Carrier LifetIme\" is a time constant for recombination or trapping of minority charge carriers in semiconductors." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:CartesianArea a qudt:QuantityKind ;
    rdfs:label "Cartesian Area"@en ;
    qudt:abbreviation "area" ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimension qudt:DIM_CGS-L2,
        qudt:DIM_USCUSTOMARY-L2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = \\int\\int dxdy\\), where \\(x\\) and \\(y\\) are cartesian coordinates."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Area\" is a quantity that expresses the extent of a two-dimensional surface or shape, or planar lamina, in the plane." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area ;
    skos:closeMatch quantitykind:Area .

quantitykind:CartesianCoordinates a qudt:QuantityKind ;
    rdfs:label "Cartesian Coordinates"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cartesian_coordinate_system"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Cartesian Coordinates\" specify each point uniquely in a plane by a pair of numerical coordinates, which are the signed distances from the point to two fixed perpendicular directed lines, measured in the same unit of length. " ;
    qudt:symbol "x, y, z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CartesianVolume a qudt:QuantityKind ;
    rdfs:label "Volume"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:FemtoL,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:NanoL,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PicoL,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V = \\int\\int\\int dxdydz\\), where \\(x\\), \\(y\\), and \\(z\\) are cartesian coordinates."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Volume\" is the quantity of three-dimensional space enclosed by some closed boundary, for example, the space that a substance (solid, liquid, gas, or plasma) or shape occupies or contains." ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:CatalyticActivity a qudt:QuantityKind ;
    rdfs:label "Catalytic Activity"@en ;
    dcterms:description "An index of the actual or potential activity of a catalyst. The catalytic activity of an enzyme or an enzyme-containing preparation is defined as the property measured by the increase in the rate of conversion of a specified chemical reaction that the enzyme produces in a specified assay system. Catalytic activity is an extensive quantity and is a property of the enzyme, not of the reaction mixture; it is thus conceptually different from rate of conversion although measured by and equidimensional with it. The unit for catalytic activity is the \\(katal\\); it may also be expressed in mol \\(s^{-1}\\). Dimensions: \\(N T^{-1}\\). Former terms such as catalytic ability, catalytic amount, and enzymic activity are no er recommended. Derived quantities are molar catalytic activity, specific catalytic activity, and catalytic activity concentration. Source(s): <a href=\"http://www.answers.com/topic/catalytic-activity-biochemistry\">www.answers.com</a>"^^qudt:LatexString ;
    qudt:applicableUnit unit:KAT,
        unit:KiloMOL-PER-HR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Catalysis"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CelsiusTemperature a qudt:QuantityKind ;
    rdfs:label "Celsius temperature"@en ;
    qudt:applicableUnit unit:DEG_R,
        unit:K,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """"Celsius Temperature", the thermodynamic temperature \\(T_0\\), is exactly \\(0.01\\)kelvin below the thermodynamic temperature of the triple point of water.
\\(t = T - T_0\\), where \\(T\\) is Thermodynamic Temperature and \\(T_0 = 273.15 K\\)."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"Celsius Temperature\", the thermodynamic temperature T_0, is exactly 0.01 kelvin below the thermodynamic temperature of the triple point of water." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ThermodynamicTemperature ;
    prov:wasDerivedFrom quantitykind:ThermodynamicTemperature .

quantitykind:CharacteristicAcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Characteristic Acoustic Impedance"@en ;
    dcterms:description "Characteristic impedance at a point in a non-dissipative medium and for a plane progressive wave, the quotient of the sound pressure \\(p\\) by the component of the sound particle velocity \\(v\\) in the direction of the wave propagation."^^qudt:LatexString ;
    qudt:applicableUnit unit:PA-SEC-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance#Characteristic_acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z_c = pc\\), where \\(p\\) is the sound pressure and \\(c\\) is the phase speed of sound."^^qudt:LatexString ;
    qudt:symbol "Z" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AcousticImpedance .

quantitykind:CharacteristicVelocity a qudt:QuantityKind ;
    rdfs:label "Characteristic Velocity"@en ;
    dcterms:description "Characteristic velocity or \\(c^{*}\\) is a measure of the combustion performance of a rocket engine independent of nozzle performance, and is used to compare different propellants and propulsion systems."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(c^{*}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ChargeNumber a qudt:QuantityKind ;
    rdfs:label "Charge Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Charge Number\", or just valance of an ion is the coefficient that, when multiplied by the elementary charge, gives the ion's charge." ;
    qudt:symbol "z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:ChemicalAffinity a qudt:QuantityKind ;
    rdfs:label "Chemical Affinity"@en ;
    qudt:applicableUnit unit:J-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_affinity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = -\\sum \\nu_b\\mu_B\\), where \\(\\nu_b\\) is the stoichiometric number of substance \\(B\\) and \\(\\mu_B\\) is the chemical potential of substance \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "In chemical physics and physical chemistry, \"Chemical Affinity\" is the electronic property by which dissimilar chemical species are capable of forming chemical compounds. Chemical affinity can also refer to the tendency of an atom or compound to combine by chemical reaction with atoms or compounds of unlike composition." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Chromaticity a qudt:QuantityKind ;
    rdfs:label "Chromaticity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Chromaticity"^^xsd:anyURI ;
    qudt:plainTextDescription "Chromaticity is an objective specification of the quality of a color regardless of its luminance" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Circulation a qudt:QuantityKind ;
    rdfs:label "Circulation"@en ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Circulation_%28fluid_dynamics%29"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(\\Gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In fluid dynamics, circulation is the line integral around a closed curve of the fluid velocity. It has dimensions of length squared over time." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime .

quantitykind:ClosestApproachRadius a qudt:QuantityKind ;
    rdfs:label "Closest Approach Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "r_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Radius .

quantitykind:Coercivity a qudt:QuantityKind ;
    rdfs:label "Coercivity"@en ;
    dcterms:description "\\(\\textit{Coercivity}\\), also referred to as \\(\\textit{Coercive Field Strength}\\), is the magnetic field strength to be applied to bring the magnetic flux density in a substance from its remaining magnetic flux density to zero. This is defined as the coercive field strength in a substance when either the magnetic flux density or the magnetic polarization and magnetization is brought from its value at magnetic saturation to zero by monotonic reduction of the applied magnetic field strength. The quantity which is brought to zero should be stated, and the appropriate symbol used: \\(H_{cB}\\), \\(H_{cJ}\\) or \\(H_{cM}\\) for the coercivity relating to the magnetic flux density, the magnetic polarization or the magnetization respectively, where \\(H_{cJ} = H_{cM}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-M ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-69"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:symbol "H_{c,B}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:CoherenceLength a qudt:QuantityKind ;
    rdfs:label "Coherence Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Coherence_length"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Coherence Length\" characterizes the distance in a superconductor over which the effect of a perturbation is appreciable." ;
    qudt:symbol "ξ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ColdReceptorThreshold a qudt:QuantityKind ;
    rdfs:label "Cold Receptor Threshold"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_c}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Cold Receptor Threshold\" is the threshold of cold-sensitive free nerve-ending." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CombinedNonEvaporativeHeatTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Combined Non Evaporative Heat Transfer Coefficient"@en ;
    qudt:applicableUnit unit:W-PER-M2-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(h = h_r + h_c + h_k\\), where \\(h_r\\) is the linear radiative heat transfer coefficient, \\(h_c\\) is the convective heat transfer coefficient, and \\(h_k\\) is the conductive heat transfer coefficient."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Combined Non Evaporative Heat Transfer Coefficient\" is the " ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CombustionChamberTemperature a qudt:QuantityKind ;
    rdfs:label "Combustion Chamber Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:symbol "T_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Compressibility a qudt:QuantityKind ;
    rdfs:label "Compressibility"@en ;
    qudt:applicableUnit unit:M2-PER-N,
        unit:PER-BAR,
        unit:PER-MILLE-PER-PSI,
        unit:PER-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\chi = -(\\frac{1}{V})\\frac{dV}{d\\rho}\\), where \\(V\\) is volume and \\(p\\) is pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\chi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Compressibility is a measure of the relative volume change of a fluid or solid as a response to a pressure (or mean stress) change." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CompressibilityFactor a qudt:QuantityKind ;
    rdfs:label "Compressibility Factor"@en ;
    dcterms:description "The compressibility factor (\\(Z\\)) is a useful thermodynamic property for modifying the ideal gas law to account for the real gas behaviour. The closer a gas is to a phase change, the larger the deviations from ideal behavior. It is simply defined as the ratio of the molar volume of a gas to the molar volume of an ideal gas at the same temperature and pressure. Values for compressibility are calculated using equations of state (EOS), such as the virial equation and van der Waals equation. The compressibility factor for specific gases can be obtained, with out calculation, from compressibility charts. These charts are created by plotting Z as a function of pressure at constant temperature."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ConductionSpeed a qudt:QuantityKind ;
    rdfs:label "Conduction Speed"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Conduction Speed\" is the speed of impulses in nerve fibers." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Speed .

quantitykind:ConductiveHeatTransferRate a qudt:QuantityKind ;
    rdfs:label "Conductive Heat Transfer Rate"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_k\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Conductive Heat Transfer Rate\" is proportional to temperature gradient and area of contact." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ConvectiveHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Convective Heat Transfer"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_transfer#Convection"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Convective Heat Transfer\" is convective heat transfer coefficient multiplied by temperature difference and exchange area. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CouplingFactor a qudt:QuantityKind ;
    rdfs:label "Coupling Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=161-03-18"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "For inductive coupling between two inductive elements, \\(k = \\frac{\\left | L_{mn} \\right |}{\\sqrt{L_m L_n}}\\), where \\(L_m\\) and \\(L_n\\) are their self inductances, and \\(L_{mn}\\) is their mutual inductance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Coupling Factor\" is the ratio of an electromagnetic quantity, usually voltage or current, appearing at a specified location of a given circuit to the corresponding quantity at a specified location in the circuit from which energy is transferred by coupling." ;
    qudt:symbol "k" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Cross-sectional Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:CubicElectricDipoleMomentPerSquareEnergy a qudt:QuantityKind ;
    rdfs:label "Cubic Electric Dipole Moment per Square Energy"@en ;
    dcterms:isReplacedBy quantitykind:ElectricDipoleMoment_CubicPerEnergy_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E3L-1I0M-2H0T7D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CubicExpansionCoefficient a qudt:QuantityKind ;
    rdfs:label "Cubic Expansion Coefficient"@en ;
    qudt:applicableUnit unit:PER-K,
        unit:PPM-PER-K,
        unit:PPTM-PER-K ;
    qudt:expression "\\(cubic-exp-coef\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_V = \\frac{1}{V} \\; \\frac{dV}{dT}\\), where \\(V\\) is \\(volume\\) and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_v\\)"^^qudt:LatexString ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H1T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ExpansionRatio .

quantitykind:CurrencyPerFlight a qudt:QuantityKind ;
    rdfs:label "Currency Per Flight"@en ;
    qudt:applicableUnit unit:MegaDOLLAR_US-PER-FLIGHT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:CurrentLinkage a qudt:QuantityKind ;
    rdfs:label "Current Linkage"@en ;
    qudt:applicableUnit unit:A ;
    qudt:expression "\\(current-linkage\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-60"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Current Linkage\" is the net electric current through a surface delimited by a closed loop." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CurvatureFromRadius a qudt:QuantityKind ;
    rdfs:label "Curvature"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curvature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\kappa = \\frac{1}{\\rho}\\), where \\(\\rho\\) is the radius of the curvature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In mathematics \"Curvature\" is the amount by which a geometric object deviates from being flat, or straight in the case of a line, but this is defined in different ways depending on the context." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:Curvature .

quantitykind:CyclotronAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Larmor Angular Frequency"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_cyclotron_resonance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega_c = \\frac{\\left | q \\right |}{m}B\\), where \\(q\\) is the electric charge, \\(m\\) is its mass, and \\(B\\) is the magnetic flux density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Cyclotron Angular Frequency\" describes angular momentum vector precession about the external field axis with an angular frequency." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularFrequency .

quantitykind:DELTA-V a qudt:QuantityKind ;
    rdfs:label "Delta-V"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(\\bigtriangleup v\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The change in translational velocity including all losses for a propulsive system or module. Delta-V losses include, but are not limited to, gravity losses and steering losses." ;
    qudt:url "http://en.wikipedia.org/wiki/Delta-v"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:DRY-MASS a qudt:QuantityKind ;
    rdfs:label "Dry Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Mass of a system without the propellants, pressurants, reserve or residual fluids, personnel and personnel provisions, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:DataRate a qudt:QuantityKind ;
    rdfs:label "Data Rate"@en ;
    qudt:applicableUnit unit:BIT-PER-SEC,
        unit:GigaBIT-PER-SEC,
        unit:KiloBIT-PER-SEC,
        unit:KiloBYTE-PER-SEC,
        unit:MegaBIT-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Data_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:plainTextDescription "The frequency derived from the period of time required to transmit one bit. This represents the amount of data transferred per second by a communications channel or a computing or storage device. Data rate is measured in units of bits per second (written \"b/s\" or \"bps\"), bytes per second (Bps), or baud. When applied to data rate, the multiplier prefixes \"kilo-\", \"mega-\", \"giga-\", etc. (and their abbreviations, \"k\", \"M\", \"G\", etc.) always denote powers of 1000. For example, 64 kbps is 64,000 bits per second. This contrasts with units of storage which use different prefixes to denote multiplication by powers of 1024, for example 1 kibibit = 1024 bits." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InformationFlowRate .

quantitykind:Debye-WallerFactor a qudt:QuantityKind ;
    rdfs:label "Debye-Waller Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Debye–Waller_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = R - R_0\\), where \\(R\\) is the particle position vector and \\(R_0\\) is the equilibrium position vector of a particle."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye-Waller Factor\" (DWF), named after Peter Debye and Ivar Waller, is used in condensed matter physics to describe the attenuation of x-ray scattering or coherent neutron scattering caused by thermal motion. Also, a factor by which the intensity of a diffraction line is reduced because of the lattice vibrations." ;
    qudt:symbol "D, B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DebyeAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Debye Angular Frequency"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://lamp.tu-graz.ac.at/~hadley/ss1/phonons/table/dosdebye.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\omega_b\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye Angular Frequency\" is the cut-off angular frequency in the Debye model of the vibrational spectrum of a solid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularFrequency .

quantitykind:DebyeAngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Debye Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Debye Angular Wavenumber\" is the cut-off angular wavenumber in the Debye model of the vibrational spectrum of a solid." ;
    qudt:symbol "q_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:DebyeTemperature a qudt:QuantityKind ;
    rdfs:label "Debye Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Debye_model"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Theta_D = \\frac{\\hbar\\omega_D}{k}\\), where \\(k\\) is the Boltzmann constant, \\(\\hbar\\) is the reduced Planck constant, and \\(\\omega_D\\) is the Debye angular frequency."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Theta_D\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye Temperature\" is the temperature at which the highest-frequency mode (and hence all modes) are excited." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DecayConstant a qudt:QuantityKind ;
    rdfs:label "Decay Constant"@en ;
    qudt:applicableUnit unit:KiloCi ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exponential_decay"^^xsd:anyURI,
        "http://www.britannica.com/EBchecked/topic/154945/decay-constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "Relative variation \\(\\frac{dN}{N}\\) of the number \\(N\\) of atoms or nuclei in a system, due to spontaneous emission from these atoms or nuclei during an infinitesimal time interval, divided by its duration \\(dt\\), thus \\(\\lambda = -\\frac{1}{N}\\frac{dN}{dt}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Decay Constant\" is the proportionality between the size of a population of radioactive atoms and the rate at which the population decreases because of radioactive decay." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseTime .

quantitykind:DegreeOfDissociation a qudt:QuantityKind ;
    rdfs:label "Degree of Dissociation"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Faraday_constant"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissociation_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Degree of Dissociation\" is the fraction of original solute molecules that have dissociated." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityInCombustionChamber a qudt:QuantityKind ;
    rdfs:label "Density In Combustion Chamber"@en ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:latexSymbol "\\(\\rho_c\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityOfStates a qudt:QuantityKind ;
    rdfs:label "Density of states"@en ;
    qudt:applicableUnit unit:SEC-PER-RAD-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density_of_states"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Density of States\" is the number of vibrational modes in an infinitesimal interval of angular frequency divided by the range of that interval and by volume." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityOfTheExhaustGases a qudt:QuantityKind ;
    rdfs:label "Density Of The Exhaust Gases"@en ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ-PER-GAL,
        unit:OZ-PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Density .

quantitykind:Depth a qudt:QuantityKind ;
    rdfs:label "Depth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Depth typically refers to the vertical measure of length from the surface of a liquid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Diameter a qudt:QuantityKind ;
    rdfs:label "Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Diameter"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Diameter"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = 2r\\), where \\(r\\) is the radius of the circle."^^qudt:LatexString ;
    qudt:plainTextDescription "In classical geometry, the \"Diameter\" of a circle is any straight line segment that passes through the center of the circle and whose endpoints lie on the circle. " ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DiffusionArea a qudt:QuantityKind ;
    rdfs:label "Diffusion Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/diffusion+area"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Diffusion Area\" in an infinite homogenous medium, is one-sixth of the mean square distance between the point where a neutron enters a specified class and the point where it leaves that class." ;
    qudt:symbol "L^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:DiffusionCoefficient a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_diffusivity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B \\left \\langle \\nu_B \\right \\rangle = -D grad C_B\\), where \\(C_B\\) the local molecular concentration of substance \\(B\\) in the mixture and \\(\\left \\langle \\nu_B \\right \\rangle\\) is the local average velocity of the molecules of \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Diffusion Coefficient\" is a proportionality constant between the molar flux due to molecular diffusion and the gradient in the concentration of the species (or the driving force for diffusion). Diffusivity is encountered in Fick's law and numerous other equations of physical chemistry." ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DiffusionCoefficientForFluenceRate a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient for Fluence Rate"@en ;
    qudt:abbreviation "m" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_diffusivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_\\varphi = -\\frac{J_x}{\\frac{\\partial d\\varphi}{\\partial dx}}\\), where \\(J_x\\) is the \\(x-component\\) of the particle current and \\(\\varphi\\) is the particle fluence rate."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Diffusion Coefficient for Fluence Rate\" is a proportionality constant between the ." ;
    qudt:symbol "Dᵩ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DiffusionLength a qudt:QuantityKind ;
    rdfs:label "Diffusion Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/diffusion+length"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\sqrt{L^2}\\), where \\(L^2\\) is the diffusion area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Diffusion Length\" is the average distance traveled by a particle, or a thermal neutron in a nuclear reactor, from the point at which it is formed to the point at which it is absorbed." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Displacement a qudt:QuantityKind ;
    rdfs:label "Displacement"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement_(vector)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta r =  R_f - R_i\\), where \\(R_f\\) is the final position and \\(R_i\\) is the initial position."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Displacement\" is the shortest distance from the initial to the final position of a point P." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DisplacementVectorOfIon a qudt:QuantityKind ;
    rdfs:label "Displacement Vector of Ion"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = R - R_0\\), where \\(R\\) is the particle position vector and \\(R_0\\) is the equilibrium position vector of a particle."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Displacement Vector of Ion\" is the ." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Dissipance a qudt:QuantityKind ;
    rdfs:label "Dissipance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissipation_factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta = \\frac{P_d}{P_i}\\), where \\(P_d\\) is the dissipated sound power, and \\(P_i\\) is the incident sound power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\delta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Dissipance, or dissipation factor for sound power, is the ratio of dissipated sound power to incident sound power. The dissipation factor (DF) is a measure of loss-rate of energy of a mode of oscillation (mechanical, electrical, or electromechanical) in a dissipative system. It is the reciprocal of quality factor, which represents the quality of oscillation." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Distance a qudt:QuantityKind ;
    rdfs:label "Distance"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Distance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Distance\" is a numerical description of how far apart objects are. " ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DistanceTraveledDuringBurn a qudt:QuantityKind ;
    rdfs:label "Distance Traveled During a Burn"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DonorDensity a qudt:QuantityKind ;
    rdfs:label "Donor Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Donor Density\" is the number per volume of donor levels." ;
    qudt:symbol "n_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:DoseEquivalent a qudt:QuantityKind ;
    rdfs:label "Dose Equivalent"@en ;
    dcterms:description "\"Dose Equivalent} (former), or \\textit{Equivalent Absorbed Radiation Dose}, usually shortened to \\textit{Equivalent Dose\", is a computed average measure of the radiation absorbed by a fixed mass of biological tissue, that attempts to account for the different biological damage potential of different types of ionizing radiation. The equivalent dose to a tissue is found by multiplying the absorbed dose, in gray, by a dimensionless \"quality factor\" \\(Q\\), dependent upon radiation type, and by another dimensionless factor \\(N\\), dependent on all other pertinent factors. N depends upon the part of the body irradiated, the time and volume over which the dose was spread, even the species of the subject."^^qudt:LatexString ;
    qudt:applicableUnit unit:MicroSV,
        unit:MicroSV-PER-HR,
        unit:MilliR_man,
        unit:MilliSV,
        unit:REM,
        unit:SV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Equivalent_dose"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equivalent_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "At the point of interest in tissue, \\(H = DQ\\), where \\(D\\) is the absorbed dose and \\(Q\\) is the quality factor at that point."^^qudt:LatexString ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:DoseEquivalentQualityFactor a qudt:QuantityKind ;
    rdfs:label "Dose Equivalent Quality Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equivalent_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Dose Equivalent Quality Factor\" is a factor in the caculation and measurement of dose equivalent, by which the absorbed dose is to be weighted in order to account for different biological effectiveness of radiations, for radiation protection purposes." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DragCoefficient a qudt:QuantityKind ;
    rdfs:label "Drag Coefficient"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In fluid dynamics, the drag coefficient is a dimensionless quantity that is used to quantify the drag or resistance of an object in a fluid environment such as air or water." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:symbol "C_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DragForce a qudt:QuantityKind ;
    rdfs:label "Drag Force"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription """In fluid dynamics, drag refers to forces which act on a solid object in the direction of the relative fluid flow velocity. Unlike other resistive forces such as dry friction, which is nearly independent of velocity, drag forces depend on velocity.
Drag forces always decrease fluid velocity relative to the solid object in the fluid's path.""" ;
    qudt:symbol "D or F_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DryVolume a qudt:QuantityKind ;
    rdfs:label "Dry Volume"@en ;
    dcterms:description "Dry measures are units of volume used to measure bulk commodities which are not gas or liquid. They are typically used in agriculture, agronomy, and commodity markets to measure grain, dried beans, and dried and fresh fruit; formerly also salt pork and fish. They are also used in fishing for clams, crabs, etc. and formerly for many other substances (for example coal, cement, lime) which were typically shipped and delivered in a standardized container such as a barrel.  In the original metric system, the unit of dry volume was the stere, but this is not part of the modern metric system; the liter and the cubic meter (\\(m^{3}\\)) are now used. However, the stere is still widely used for firewood."^^qudt:LatexString ;
    qudt:applicableUnit unit:BBL_US_DRY,
        unit:BU_UK,
        unit:BU_US,
        unit:CORD,
        unit:GAL_US_DRY,
        unit:PINT_US_DRY,
        unit:PK_US_DRY,
        unit:QT_US_DRY ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dry_measure"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:DynamicFriction a qudt:QuantityKind ;
    rdfs:label "Dynamic Friction"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Kinetic (or dynamic) friction occurs when two objects are moving relative to each other and rub together (like a sled on the ground)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Friction .

quantitykind:DynamicFrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Dynamic Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{F}{N}\\), where \\(F\\) is the tangential component of the contact force and \\(N\\) is the normal component of the contact force between two sliding bodies."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Kinetic (or dynamic) friction occurs when two objects are moving relative to each other and rub together (like a sled on the ground)." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:FrictionCoefficient .

quantitykind:DynamicViscosity a qudt:QuantityKind ;
    rdfs:label "Dynamic Viscosity"@en ;
    qudt:applicableUnit unit:CentiPOISE,
        unit:KiloGM-PER-M-HR,
        unit:KiloGM-PER-M-SEC,
        unit:LB-PER-FT-HR,
        unit:LB-PER-FT-SEC,
        unit:LB_F-SEC-PER-FT2,
        unit:LB_F-SEC-PER-IN2,
        unit:MicroPOISE,
        unit:MilliPA-SEC,
        unit:PA-SEC,
        unit:POISE,
        unit:SLUG-PER-FT-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:informativeReference "http://dictionary.reference.com/browse/dynamic+viscosity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau_{xz} = \\eta\\frac{dv_x}{dz}\\), where \\(\\tau_{xz}\\) is shear stress in a fluid moving with a velocity gradient \\(\\frac{dv_x}{dz}\\) perpendicular to the plane of shear. "^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A measure of the molecular frictional resistance of a fluid as calculated using Newton's law." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Viscosity .

quantitykind:EarthClosestApproachVehicleVelocity a qudt:QuantityKind ;
    rdfs:label "Earth Closest Approach Vehicle Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "V_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:EccentricityOfOrbit a qudt:QuantityKind ;
    rdfs:label "Eccentricity Of Orbit"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\varepsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle. In a two-body problem with inverse-square-law force, every orbit is a Kepler orbit. The eccentricity of this Kepler orbit is a positive number that defines its shape." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EffectiveExhaustVelocity a qudt:QuantityKind ;
    rdfs:label "Effective Exhaustvelocity"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "The velocity of an exhaust stream after reduction by effects such as friction, non-axially directed flow, and pressure differences between the inside of the rocket and its surroundings. The effective exhaust velocity is one of two factors determining the thrust, or accelerating force, that a rocket can develop, the other factor being the quantity of reaction mass expelled from the rocket in unit time. In most cases, the effective exhaust velocity is close to the actual exhaust velocity." ;
    qudt:symbol "v_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EffectiveMass a qudt:QuantityKind ;
    rdfs:label "Effective Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Effective_mass_(solid-state_physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m^* = \\hbar^2k(\\frac{d\\varepsilon}{dk})\\), where \\(\\hbar\\) is the reduced Planck constant, \\(k\\) is the wavenumber, and \\(\\varepsilon\\) is the energy of the electron."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Effective Mass\" is used in the motional equation for electrons in solid state bodies, depending on the wavenumber and corresponding to its velocity and energy level." ;
    qudt:symbol "m^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Efficiency a qudt:QuantityKind ;
    rdfs:label "Efficiency"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\eta = \\frac{P_{out}}{P_{in}}\\), where \\(P_{out}\\) is the output power and \\(P_{in}\\) is the input power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Efficiency is the ratio of output power to input power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:EinsteinTransitionProbability a qudt:QuantityKind ;
    rdfs:label "Einstein Transition Probability"@en ;
    dcterms:description "Given two atomic states of energy \\(E_j\\) and \\(E_k\\).  Let \\(E_j > E_k\\).  Assume the atom is bathed in radiation of energy density \\(u(w)\\).  Transitions between these states can take place in three different ways. Spontaneous, induced/stimulated emission, and induced absorption. \\(A_jk\\) represents the Einstein transition probability for spontaneous emission."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://electron6.phys.utk.edu/qm2/modules/m10/einstein.htm"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\frac{-dN_j}{dt} = A_jkN_j\\), where \\(-dN_j\\) is the number of molecules spontaneously leaving the state j for the state k during a time interval of duration \\(dt\\), \\(N_j\\) is the number of molecules in the state j, and \\(E_j > E_k\\)."^^qudt:LatexString ;
    qudt:symbol "A_jkN_j" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargeLineDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Line Density"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot \\), \\(m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-M ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargeLinearDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Linear Density"@en ;
    qudt:applicableUnit unit:C-PER-M ;
    qudt:expression "\\(linear-charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_l = \\frac{dQ}{dl}\\), where \\(Q\\) is electric charge and \\(l\\) is length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_l\\)"^^qudt:LatexString,
        "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity .

quantitykind:ElectricChargePerAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Electric charge per amount of substance"@en ;
    dcterms:description "\"Electric Charge Per Amount Of Substance\" is the charge assocated with a given amount of substance. Un the ISO and SI systems this is \\(1 mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-MOL,
        unit:C_Stat-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E1L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargeVolumeDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Volume Density"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM3,
        unit:C-PER-M3,
        unit:C-PER-MilliM3,
        unit:KiloC-PER-M3,
        unit:MilliC-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricConductivity a qudt:QuantityKind ;
    rdfs:label "Electric Conductivity"@en ;
    dcterms:description "\"Electric Conductivity} or \\textit{Specific Conductance\" is a measure of a material's ability to conduct an electric current. When an electrical potential difference is placed across a conductor, its movable charges flow, giving rise to an electric current. The conductivity \\(\\sigma\\) is defined as the ratio of the electric current density \\(J\\) to the electric field \\(E\\): \\(J = \\sigma E\\). In isotropic materials, conductivity is scalar-valued, however in general, conductivity is a tensor-valued quantity."^^qudt:LatexString ;
    qudt:applicableUnit unit:A_Ab-CentiM2,
        unit:MHO,
        unit:MHO_Stat,
        unit:MicroMHO,
        unit:S_Ab,
        unit:S_Stat ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerAngle a qudt:QuantityKind ;
    rdfs:label "Electric Current per Angle"@en ;
    qudt:applicableUnit unit:A-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerUnitEnergy a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Energy"@en ;
    qudt:applicableUnit unit:A-PER-J ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerUnitTemperature a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Temperature"@en ;
    qudt:applicableUnit unit:A-PER-DEG_C ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H-1T0D0 ;
    qudt:plainTextDescription "\"Electric Current per Unit Temperature\" is used to express how a current is subject to temperature. Originally used in Wien's Law to describe phenomena related to filaments. One use today is to express how a current generator derates with temperature." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind/all> .

quantitykind:ElectricDisplacementField a qudt:QuantityKind ;
    rdfs:label "Electric Displacement Field"@en ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:ElectricFlux a qudt:QuantityKind ;
    rdfs:label "Electric Flux"@en ;
    qudt:applicableUnit unit:V-M,
        unit:V_Stat-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:expression "\\(electirc-flux\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\int_S D \\cdot e_n dA\\), over a surface \\(S\\), where \\(D\\) is electric flux density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Flux\" through an area is defined as the electric field multiplied by the area of the surface projected in a plane perpendicular to the field. Electric Flux is a scalar-valued quantity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:ElectricPolarizability a qudt:QuantityKind ;
    rdfs:label "Electric Polarizability"@en ;
    qudt:applicableUnit unit:J-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Polarizability"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_{i,j} = \\frac{\\partial p_i}{\\partial E_j}\\), where \\(p_i\\) is the cartesian component along the \\(i-axis\\) of the electric dipole moment induced by the applied electric field strength acting on the molecule, and \\(E_j\\) is the component along the \\(j-axis\\) of this electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Polarizability\" is the relative tendency of a charge distribution, like the electron cloud of an atom or molecule, to be distorted from its normal shape by an external electric field, which is applied typically by inserting the molecule in a charged parallel-plate capacitor, but may also be caused by the presence of a nearby ion or dipole." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricPropulsionPropellantMass a qudt:QuantityKind ;
    rdfs:label "Electric Propulsion Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PropellantMass .

quantitykind:ElectricQuadrupoleMoment a qudt:QuantityKind ;
    rdfs:label "Electric Quadrupole Moment"@en ;
    qudt:applicableUnit unit:C-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T1D0 ;
    qudt:plainTextDescription "The Electric Quadrupole Moment is a quantity which describes the effective shape of the ellipsoid of nuclear charge distribution. A non-zero quadrupole moment Q indicates that the charge distribution is not spherically symmetric. By convention, the value of Q is taken to be positive if the ellipsoid is prolate and negative if it is oblate. In general, the electric quadrupole moment is tensor-valued." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricSusceptibility a qudt:QuantityKind ;
    rdfs:label "Electric Susceptibility"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:expression "\\(e-susceptibility\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\chi = \\frac{P}{(\\epsilon_0 E)}\\), where \\(P\\) is electric polorization, \\(\\epsilon_0\\) is the electric constant, and \\(E\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\chi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Susceptibility\" is the ratio of electric polarization to electric field strength, normalized to the electric constant. The definition applies to an isotropic medium. For an anisotropic medium, electric susceptibility is a second order tensor." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricPolarization .

quantitykind:ElectricalPowerToMassRatio a qudt:QuantityKind ;
    rdfs:label "Electrical Power To Mass Ratio"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectrolyticConductivity a qudt:QuantityKind ;
    rdfs:label "Electrolytic Conductivity"@en ;
    qudt:applicableUnit unit:S-PER-M ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Conductivity_(electrolytic)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x = \\frac{J}{E}\\), where \\(J\\) is the electrolytic current density and \\(E\\) is the electric field strength."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electrolytic Conductivity\" of an electrolyte solution is a measure of its ability to conduct electricity." ;
    qudt:symbol "x" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticPermeabilityRatio a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Permeability Ratio"@en ;
    qudt:applicableUnit unit:PERMEABILITY_EM_REL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:plainTextDescription "The ratio of the electromagnetic permeability of a specific medium to the electromagnetic permeability of free space." ;
    qudt:qkdvDenominator qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E-2L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticWavePhaseSpeed a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Wave Phase Speed"@en ;
    qudt:applicableUnit unit:M-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-66"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c  = w/k\\) where \\(w\\) is angular velocity and \\(k\\) is angular wavenumber."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electromagnetic Wave Phase Speed\" is the ratio of angular velocity and wavenumber." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromotiveForce a qudt:QuantityKind ;
    rdfs:label "Electromotive Force"@en ;
    dcterms:description "In physics, electromotive force, or most commonly \\(emf\\) (seldom capitalized), or (occasionally) electromotance is that which tends to cause current (actual electrons and ions) to flow. More formally, \\(emf\\) is the external work expended per unit of charge to produce an electric potential difference across two open-circuited terminals. \"Electromotive Force\" is deprecated in the ISO System of Quantities."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electromotive_force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:ElectronAffinity a qudt:QuantityKind ;
    rdfs:label "Electron Affinity"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_affinity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Affinity\" is the energy difference between an electron at rest at infinity and an electron at the lowest level of the conduction band in an insulator or semiconductor. The the amount of energy released when an electron is added to a neutral atom or molecule to form a negative ion." ;
    qudt:symbol "χ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:ElectronDensity a qudt:QuantityKind ;
    rdfs:label "Electron Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_density"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Density\" is the number of electrons per volume in conduction bands. It is the measure of the probability of an electron being present at a specific location." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:ElectronMeanFreePath a qudt:QuantityKind ;
    rdfs:label "Electron Mean Free Path"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Mean Free Path\" is the mean free path of electrons." ;
    qudt:symbol "l_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ElectronRadius a qudt:QuantityKind ;
    rdfs:label "Electron Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Classical_electron_radius"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r_e = \\frac{e^2}{4\\pi m_e c_0^2}\\), where \\(e\\) is the elementary charge, \\(\\varepsilon_0\\) is the electric constant, item \\(m_e\\) is the rest mass of electrons, and \\(c_0\\) is the speed of light in vacuum."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Radius\", also known as the Lorentz radius or the Thomson scattering length, is based on a classical (i.e., non-quantum) relativistic model of the electron." ;
    qudt:symbol "r_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:EllipticalOrbitApogeeVelocity a qudt:QuantityKind ;
    rdfs:label "Elliptical Orbit Apogee Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Velocity at apogee for an elliptical orbit velocity" ;
    qudt:symbol "V_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:EllipticalOrbitPerigeeVelocity a qudt:QuantityKind ;
    rdfs:label "Elliptical Orbit Perigee Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Velocity at apogee for an elliptical orbit velocity." ;
    qudt:symbol "V_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:Emissivity a qudt:QuantityKind ;
    rdfs:label "Emissivity"@en ;
    dcterms:description "Emissivity of a material (usually written \\(\\varepsilon\\) or e) is the relative ability of its surface to emit energy by radiation."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Emissivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varepsilon = \\frac{M}{M_b}\\), where \\(M\\) is the radiant exitance of a thermal radiator and \\(M_b\\) is the radiant exitance of a blackbody at the same temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varepsilon\\)"^^qudt:LatexString ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyDensityOfStates a qudt:QuantityKind ;
    rdfs:label "Energy Density of States"@en ;
    qudt:applicableUnit unit:PER-J-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density_of_states"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho(E) = n_E(E) = \\frac{dN(E)}{dE}\\frac{1}{V}\\), where \\(N(E)\\) is the total number of states with energy less than \\(E\\), and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Energy Density of States\" refers to electrons or other entities, e.g. phonons. It can, for example, refer to amount of substance instead of volume." ;
    qudt:symbol "n_E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyExpenditure a qudt:QuantityKind ;
    rdfs:label "Energy Expenditure"@en ;
    dcterms:description """Energy expenditure is dependent on a person's sex, metabolic rate, body-mass composition, the thermic effects of food, and activity level.  The approximate energy expenditure of a man lying in bed is \\(1.0\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\). For slow walking (just over two miles per hour), \\(3.0\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\). For fast steady running (about 10 miles per hour), \\(16.3\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\).
Females expend about 10 per cent less energy than males of the same size doing a comparable activity.  For people weighing the same, individuals with a high percentage of body fat usually expend less energy than lean people, because fat is not as metabolically active as muscle."""^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198631477.001\\).0001/acref-9780198631477-e-594"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyFluence a qudt:QuantityKind ;
    rdfs:label "Energy Fluence"@en ;
    qudt:applicableUnit unit:J-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\frac{dR}{dA}\\), where \\(dR\\) describes the sum of radiant energies, exclusive of rest energy, of all particles incident on a small spherical domain, and \\(dA\\) describes the cross-sectional area of that domain."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Energy Fluence\" can be used to describe the energy delivered per unit area" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyFluenceRate a qudt:QuantityKind ;
    rdfs:label "Energy Fluence Rate"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\frac{d\\Psi}{dt}\\), where \\(d\\Psi\\) is the increment of the energy fluence during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Energy Fluence Rate\" can be used to describe the energy fluence delivered per unit time." ;
    qudt:symbol "Ψ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:EnergyImparted a qudt:QuantityKind ;
    rdfs:label "Energy Imparted"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing radiation in the matter in a given 3D domain, \\(\\varepsilon = \\sum_i \\varepsilon_i\\), where the energy deposit, \\(\\varepsilon_i\\) is the energy deposited in a single interaction \\(i\\), and is given by \\(\\varepsilon_i = \\varepsilon_{in} - \\varepsilon_{out} + Q\\), where \\(\\varepsilon_{in}\\) is the energy of the incident ionizing particle, excluding rest energy, \\(\\varepsilon_{out}\\) is the sum of the energies of all ionizing particles leaving the interaction, excluding rest energy, and \\(Q\\) is the change in the rest energies of the nucleus and of all particles involved in the interaction."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Energy Imparted\", is a physical quantity associated with the energy delivered to a particular volume of matter by all the directly and indirectly ionizing particles (i.e. charged and uncharged) entering that volume." ;
    qudt:symbol "ε" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyKinetic a qudt:QuantityKind ;
    rdfs:label "Kinetic Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kinetic_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    qudt:plainTextDescription "The kinetic energy of an object is the energy which it possesses due to its motion. It is defined as the work needed to accelerate a body of a given mass from rest to its stated velocity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyLevel a qudt:QuantityKind ;
    rdfs:label "Energy Level"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Energy Level\" is the ionization energy for an electron at the Fermi energy in the interior of a substance." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyPerAreaElectricCharge a qudt:QuantityKind ;
    rdfs:label "Energy Per Area Electric Charge"@en ;
    qudt:applicableUnit unit:V-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-3D0 ;
    qudt:plainTextDescription "\"Energy Per Area Electric Charge\" is the amount of electric energy associated with a unit of area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerMassAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Energy and work per mass amount of substance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB-MOL ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerSquareMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Energy Per Square Magnetic Flux Density"@en ;
    dcterms:isReplacedBy quantitykind:EnergyPerMagneticFluxDensity_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E2L2I0M-1H0T2D0 ;
    qudt:plainTextDescription "\"Energy Per Square Magnetic Flux Density\" is a measure of energy for a unit of magnetic flux density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EquilibriumPositionVectorOfIon a qudt:QuantityKind ;
    rdfs:label "Equilibrium Position Vector of Ion"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Equilibrium Position Vector of Ion\" is the position vector of a particle in equilibrium." ;
    qudt:symbol "R_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:EquivalentAbsorptionArea a qudt:QuantityKind ;
    rdfs:label "Equivalent absorption area"@en ;
    qudt:abbreviation "m2" ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.rockfon.co.uk/acoustics/comparing+ceilings/sound+absorption/equivalent+absorption+area"^^xsd:anyURI ;
    qudt:plainTextDescription "In a diffuse sound field, the Equivalent Absorption Area is that area of a surface having an absorption factor equal to 1, which, if diffraction effects are neglected, would, in the same diffuse sound field, absorb the same power." ;
    qudt:symbol "A" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:EvaporativeHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Evaporative Heat Transfer"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_e\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Evaporative Heat Transfer\" is " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EvaporativeHeatTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Combined Non Evaporative Heat Transfer Coefficient"@en ;
    qudt:applicableUnit unit:W-PER-M2-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Evaporative Heat Transfer Coefficient\" is the areic heat transfer coefficient multiplied by the water vapor pressure difference between skind and the environment, and by the exchange area." ;
    qudt:symbol "h_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExchangeIntegral a qudt:QuantityKind ;
    rdfs:label "Exchange Integral"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exchange_interaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Exchange Integral\" is the constituent of the interaction energy between the spins of adjacent electrons in matter arising from the overlap of electron state functions." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExhaustGasMeanMolecularWeight a qudt:QuantityKind ;
    rdfs:label "Exhaust Gas Mean Molecular Weight"@en ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExhaustGasesSpecificHeat a qudt:QuantityKind ;
    rdfs:label "Exhaust Gases Specific Heat"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB-DEG_F,
        unit:BTU_IT-PER-LB-DEG_R,
        unit:BTU_IT-PER-LB_F-DEG_F,
        unit:BTU_IT-PER-LB_F-DEG_R,
        unit:BTU_TH-PER-LB-DEG_F,
        unit:CAL_IT-PER-GM-DEG_C,
        unit:CAL_IT-PER-GM-K,
        unit:CAL_TH-PER-GM-DEG_C,
        unit:CAL_TH-PER-GM-K,
        unit:J-PER-KiloGM-K,
        unit:KiloCAL-PER-GM-DEG_C ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat of exhaust gases at constant pressure." ;
    qudt:symbol "c_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificHeatCapacity .

quantitykind:ExhaustStreamPower a qudt:QuantityKind ;
    rdfs:label "Exhaust Stream Power"@en ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:ExitPlaneCrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Exit Plane Cross-sectional Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:plainTextDescription "Cross-sectional area at exit plane of nozzle" ;
    qudt:symbol "A_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:ExitPlanePressure a qudt:QuantityKind ;
    rdfs:label "Exit Plane Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "p_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ExitPlaneTemperature a qudt:QuantityKind ;
    rdfs:label "Exit Plane Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:symbol "T_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:Exposure a qudt:QuantityKind ;
    rdfs:label "Exposure"@en ;
    qudt:applicableUnit unit:A-M2-PER-J-SEC,
        unit:C-PER-KiloGM,
        unit:HZ-PER-T,
        unit:KiloR,
        unit:MegaHZ-PER-T,
        unit:MilliC-PER-KiloGM,
        unit:MilliR,
        unit:PER-T-SEC,
        unit:R ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Exposure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exposure_%28photography%29"^^xsd:anyURI,
        "http://hps.org/publicinformation/ate/faqs/gammaandexposure.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For X-or gamma radiation, \\(X = \\frac{dQ}{dm}\\), where \\(dQ\\) is the absolute value of the mean total electric charge of the ions of the same sign produced in dry air when all the electrons and positrons liberated or created by photons in an element of air are completely stopped in air, and \\(dm\\) is the mass of that element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Exposure\" reflects the extent of ionization events taking place when air is irradiated by ionizing photons (gamma radiation and/or x rays). In photography, exposure is the amount of light allowed to fall on each area unit of a photographic medium (photographic film or image sensor) during the process of taking a photograph. Exposure is measured in lux seconds, and can be computed from exposure value (EV) and scene luminance in a specified region." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerMass .

quantitykind:ExposureRate a qudt:QuantityKind ;
    rdfs:label "Exposure Rate"@en ;
    qudt:applicableUnit unit:C-PER-KiloGM-SEC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://hps.org/publicinformation/ate/faqs/gammaandexposure.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{X} = \\frac{dX}{dt}\\), where \\(X\\) is the increment of exposure during time interval with duration \\(t\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{X}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Exposure Rate\" expresses the rate of charge production per unit mass of air and is commonly expressed in roentgens per hour (R/h) or milliroentgens per hour (mR/h)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExtentOfReaction a qudt:QuantityKind ;
    rdfs:label "Extent of Reaction"@en ;
    qudt:applicableUnit unit:CentiMOL,
        unit:FemtoMOL,
        unit:MOL,
        unit:NanoMOL,
        unit:PicoMOL ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Extent_of_reaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(dn_B = \\nu_B d\\xi\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(\\nu_B\\) is the stoichiometric number of substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In physical chemistry, the \"Extent of Reaction\" is a quantity that measures the extent in which the reaction proceeds." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FLIGHT-PERFORMANCE-RESERVE-PROPELLANT-MASS a qudt:QuantityKind ;
    rdfs:label "Flight Performance Reserve Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A quantity of propellant, at a nominal mixture ratio, along with fuel bias that is set aside from total propellant loaded to cover for statistical variations of flight hardware characteristics and environment conditions on the day of launch. The launch vehicle is designed to accommodate the maximum FPR loading." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "FPR" ;
    skos:broader quantitykind:Mass .

quantitykind:FUEL-BIAS a qudt:QuantityKind ;
    rdfs:label "Fuel Bias"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "An additional quantity of fuel to ensure depletion of high-weight oxidizer before fuel for systems with high-oxidizer mixing ratios (e.g., 6:1). This practice allows for more efficient propellant utilization. Denoted as a percentage." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:FastFissionFactor a qudt:QuantityKind ;
    rdfs:label "Fast Fission Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fast Fission Factor\" in an infinite medium, is the ratio of the mean number of neutrons produced by fission due to neutrons of all energies to the mean number of neutrons produced by fissions due to thermal neutrons only." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FermiAngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Fermi Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heavy_fermion"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "k_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:FermiEnergy a qudt:QuantityKind ;
    rdfs:label "Fermi Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fermi_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fermi Energy\" in a metal is the highest occupied energy level at zero thermodynamic temperature." ;
    qudt:symbol "E_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:FermiTemperature a qudt:QuantityKind ;
    rdfs:label "Fermi Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fermi_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(T_F = \\frac{E_F}{k}\\), where \\(E_F\\) is the Fermi energy and \\(k\\) is the Boltzmann constant."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fermi Temperature\" is the temperature associated with the Fermi energy." ;
    qudt:symbol "T_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FinalOrCurrentVehicleMass a qudt:QuantityKind ;
    rdfs:label "Final Or Current Vehicle Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:FirstMomentOfArea a qudt:QuantityKind ;
    rdfs:label "First Moment of Area"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:FemtoL,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:NanoL,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PicoL,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:plainTextDescription "The first moment of area is the summation of area times distance to an axis. It is a measure of the distribution of the area of a shape in relationship to an axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:FirstStageMassRatio a qudt:QuantityKind ;
    rdfs:label "First Stage Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "Mass ratio for the first stage of a multistage launcher." ;
    qudt:symbol "R_1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:FishBiotransformationHalfLife a qudt:QuantityKind ;
    rdfs:label "Fish Biotransformation Half Life"@en ;
    qudt:applicableUnit unit:DAY ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "A time that quantifies how long its takes to transform 50% of a substance's total concentration from any concentration point in time in fish via whole body metabolic reactions." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:FissionCoreRadiusToHeightRatio a qudt:QuantityKind ;
    rdfs:label "Fission Core Radius To Height Ratio"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "R/H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FissionFuelUtilizationFactor a qudt:QuantityKind ;
    rdfs:label "Fission Fuel Utilization Factor"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:FissionMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Fission Multiplication Factor"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The number of fission neutrons produced per absorption in the fuel." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:FlashPoint a qudt:QuantityKind ;
    rdfs:label "Flash Point Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:plainTextDescription "A temperature that is the lowest one at which the vapors of a volatile material will ignite if exposed to an ignition source.  It is frequently used to characterize fire hazards and distinguish different flammable fuels." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:FlightPathAngle a qudt:QuantityKind ;
    rdfs:label "Flight Path Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Flight path angle is defined in two different ways. To the aerodynamicist, it is the angle between the flight path vector (where the airplane is going) and the local atmosphere. To the flight crew, it is normally known as the angle between the flight path vector and the horizon, also known as the climb (or descent) angle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:Flux a qudt:QuantityKind ;
    rdfs:label "Flux"@en ;
    qudt:applicableUnit unit:NUM-PER-M2-DAY,
        unit:PER-M2-SEC,
        unit:PER-SEC-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Flux"^^xsd:anyURI ;
    qudt:plainTextDescription "Flux describes any effect that appears to pass or travel (whether it actually moves or not) through a surface or substance. [Wikipedia]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerAreaTime a qudt:QuantityKind ;
    rdfs:label "Force Per Area Time"@en ;
    qudt:applicableUnit unit:DeciBAR-PER-YR,
        unit:HectoPA-PER-HR,
        unit:LB_F-PER-IN2-SEC,
        unit:PA-PER-HR,
        unit:PA-PER-MIN,
        unit:PA-PER-SEC,
        unit:W-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Force per Electric Charge"@en ;
    dcterms:description "The electric field depicts the force exerted on other electrically charged objects by the electrically charged particle the field is surrounding. The electric field is a vector field with SI units of newtons per coulomb (\\(N C^{-1}\\)) or, equivalently, volts per metre (\\(V m^{-1}\\) ). The SI base units of the electric field are \\(kg m s^{-3} A^{-1}\\). The strength or magnitude of the field at a given point is defined as the force that would be exerted on a positive test charge of 1 coulomb placed at that point"^^qudt:LatexString ;
    qudt:applicableUnit unit:N-PER-C ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_field"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Fugacity a qudt:QuantityKind ;
    rdfs:label "Fugacity"@en ;
    qudt:applicableUnit unit:PA,
        unit:PicoPA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fugacity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tilde{p}_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fugacity\" of a real gas is an effective pressure which replaces the true mechanical pressure in accurate chemical equilibrium calculations. It is equal to the pressure of an ideal gas which has the same chemical potential as the real gas." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FundamentalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Fundamental Lattice vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fundamental Lattice vector\" are fundamental translation vectors for the crystal lattice." ;
    qudt:symbol "a_1, a_2, a_3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LatticeVector .

quantitykind:FundamentalReciprocalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Fundamental Reciprocal Lattice Vector"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reciprocal_lattice"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fundamental Reciprocal Lattice Vector\" are fundamental, or primary, translation vectors the reciprocal lattice." ;
    qudt:symbol "b_1, b_2, b_3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularReciprocalLatticeVector .

quantitykind:GFactorOfNucleus a qudt:QuantityKind ;
    rdfs:label "g-Factor of Nucleus"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Landé_g-factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = \\frac{\\mu}{I\\mu_B}\\), where \\(\\mu\\) is the magnitude of magnetic dipole moment, \\(I\\) is the nuclear angular momentum quantum number, and \\(\\mu_B\\) is the Bohr magneton."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"g-Factor of Nucleus\" is associated with the spin and magnetic moments of protons, neutrons, and many nuclei." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GROSS-LIFT-OFF-WEIGHT a qudt:QuantityKind ;
    rdfs:label "Gross Lift-Off Weight"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The sum of a rocket's inert mass and usable fluids and gases at sea level." ;
    qudt:url "http://en.wikipedia.org/wiki/Maximum_Takeoff_Weight"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Gain a qudt:QuantityKind ;
    rdfs:label "Gain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gain"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "A general term used to denote an increase in signal power or signal strength in transmission from one point to another. Gain is usually expressed in decibels and is widely used to denote transducer gain.  An increase or amplification. In radar there are two general usages of the term: (a) antenna gain, or gain factor, is the ratio of the power transmitted along the beam axis to that of an isotropic radiator transmitting the same total power; (b) receiver gain, or video gain, is the amplification given a signal by the receiver." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:GeneFamilyAbundance a qudt:QuantityKind ;
    rdfs:label "Gene Family Abundance"@en ;
    qudt:applicableUnit unit:RPK ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://learn.gencore.bio.nyu.edu/"^^xsd:anyURI ;
    qudt:plainTextDescription "The abundance of each gene family in the community. Gene families are groups of evolutionarily-related protein-coding sequences that often perform similar functions. Gene family abundance is reported in RPK (reads per kilobase) units to normalize for gene length." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:GeneralizedCoordinate a qudt:QuantityKind ;
    rdfs:label "Generalized Coordinate"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_coordinates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_i\\), where \\(q_i\\) is one of the coordinates that is used to describe the position of the system under consideration, and \\(N\\) is the lowest number of coordinates necessary to fully define the position of the system."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Coordinates refers to the parameters that describe the configuration of the system relative to some reference configuration. These parameters must uniquely define the configuration of the system relative to the reference configuration." ;
    qudt:symbol "q_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedForce a qudt:QuantityKind ;
    rdfs:label "Generalized Force"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_forces"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta A = \\sum Q_i\\delta q_i\\), where \\(A\\) is work and \\(q_i\\) is a generalized coordinate."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Forces find use in Lagrangian mechanics, where they play a role conjugate to generalized coordinates." ;
    qudt:symbol "Q_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedMomentum a qudt:QuantityKind ;
    rdfs:label "Generalized Force"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p_i = \\frac{\\partial L}{\\partial \\dot{q_i}}\\), where \\(L\\) is the Langrange function and \\(\\dot{q_i}\\) is a generalized velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Momentum, also known as the canonical or conjugate momentum, extends the concepts of both linear momentum and angular momentum. To distinguish it from generalized momentum, the product of mass and velocity is also referred to as mechanical, kinetic or kinematic momentum." ;
    qudt:symbol "p_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedVelocity a qudt:QuantityKind ;
    rdfs:label "Generalized Velocity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_coordinates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{q_i} = \\frac{dq_i}{dt}\\), where \\(q_i\\) is the generalized coordinate and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{q_i}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Velocities are the time derivatives of the generalized coordinates of the system." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GrandCanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Grand Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Xi = \\sum_{N_A, N_B, ...} Z(N_A, N_B, ...) \\cdot \\lambda_A^{N_A} \\cdot \\lambda_B^{N_B} \\cdot ...\\), where \\(Z(N_A, N_B, ...)\\) is the canonical partition function for the given number of particles \\(A, B, ...,\\), and \\(\\lambda_A, \\lambda_B, ...\\) are the absolute activities of particles \\(A, B, ...\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "An \"Grand Canonical Partition Function\" for a grand canonical ensemble, a system that can exchange both heat and particles with the environment, which has a constant temperature and a chemical potential." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CanonicalPartitionFunction .

quantitykind:GravitationalAttraction a qudt:QuantityKind ;
    rdfs:label "Gravitational Attraction"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.thefreedictionary.com/gravitational+attraction"^^xsd:anyURI ;
    qudt:plainTextDescription "The force of attraction between all masses in the universe; especially the attraction of the earth's mass for bodies near its surface; the more remote the body the less the gravity; the gravitation between two bodies is proportional to the product of their masses and inversely proportional to the square of the distance between them." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:Gravity_API a qudt:QuantityKind ;
    rdfs:label "API Gravity"@en ;
    qudt:applicableUnit unit:DEGREE_API ;
    qudt:baseSIUnitDimensions "\\(qkdv:A0E0L0I0M0H0T0D1\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/API_gravity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription """The American Petroleum Institute gravity, or API gravity, is a measure of how heavy or light a petroleum liquid is compared to water: if its API gravity is greater than 10, it is lighter and floats on water; if less than 10, it is heavier and sinks.

API gravity is thus an inverse measure of a petroleum liquid's density relative to that of water (also known as specific gravity). It is used to compare densities of petroleum liquids. For example, if one petroleum liquid is less dense than another, it has a greater API gravity. Although API gravity is mathematically a dimensionless quantity (see the formula below), it is referred to as being in 'degrees'. API gravity is graduated in degrees on a hydrometer instrument. API gravity values of most petroleum liquids fall between 10 and 70 degrees.""" ;
    qudt:qkdvDenominator qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-3I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:GroupSpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Group Speed of Sound"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c_g = \\frac{d\\omega}{dk}\\), where \\(\\omega\\) is the angular frequency and \\(k\\) is angular wavenumber."^^qudt:LatexString ;
    qudt:plainTextDescription "In a dispersive medium sound speed is a function of sound frequency, through the dispersion relation. The spatial and temporal distribution of a propagating disturbance will continually change. The group speed of sound describes the propagation of the disturbance." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpeedOfSound .

quantitykind:GrowingDegreeDay_Cereal a qudt:QuantityKind ;
    rdfs:label "Growing Degree Days (Cereals)" ;
    qudt:applicableUnit unit:DEG_C_GROWING_CEREAL-DAY ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T1D0 ;
    qudt:plainTextDescription "The sum of excess temperature over 5.5°C, where the temperature is the mean of the minimum and maximum atmospheric temperature in a day. This measure is appropriate for most cereal crops." ;
    rdfs:isDefinedBy <https://data.agrimetrics.co.uk/ontologies/qudt-extension> ;
    skos:broader quantitykind:TimeTemperature .

quantitykind:GruneisenParameter a qudt:QuantityKind ;
    rdfs:label "Gruneisen Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grüneisen_parameter"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{\\alpha_V}{x_T c_V\\rho}\\), where \\(\\alpha_V\\) is the cubic expansion coefficient, \\(x_T\\) is isothermal compressibility, \\(c_V\\) is specific heat capacity at constant volume, and \\(\\rho\\) is mass density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gruneisen Parameter\" named after Eduard Grüneisen, describes the effect that changing the volume of a crystal lattice has on its vibrational properties, and, as a consequence, the effect that changing temperature has on the size or dynamics of the lattice." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GustatoryThreshold a qudt:QuantityKind ;
    rdfs:label "Gustatory Threshold"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_g}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gustatory Threshold\" are thresholds for classes of taste that can be detected by the human mouth and thresholds of sensitivity to foods, drinks and other substances." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GyromagneticRatio a qudt:QuantityKind ;
    rdfs:label "Gyromagnetic Ratio"@en ;
    dcterms:description "\"Gyromagnetic Ratio}, also sometimes known as the magnetogyric ratio in other disciplines, of a particle or system is the ratio of its magnetic dipole moment to its angular momentum, and it is often denoted by the symbol, \\(\\gamma\\). Its SI units are radian per second per tesla (\\(rad s^{-1} \\cdot T^{1}\\)) or, equivalently, coulomb per kilogram (\\(C \\cdot kg^{-1\"\\))."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gyromagnetic_ratio"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gyromagnetic_ratio"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\gamma J\\), where \\(\\mu\\) is the magnetic dipole moment, and \\(J\\) is the total angular momentum."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Half-Life a qudt:QuantityKind ;
    rdfs:label "Half-life"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-life"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Half-Life\" is the average duration required for the decay of one half of the atoms or nuclei." ;
    qudt:symbol "T_{1/2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Half-ValueThickness a qudt:QuantityKind ;
    rdfs:label "Half-Value Thickness"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-value_layer"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Half-Value Thickness\" is the thickness of the material at which the intensity of radiation entering it is reduced by one half." ;
    qudt:symbol "d_{1/2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:HallCoefficient a qudt:QuantityKind ;
    rdfs:label "Hall Coefficient"@en ;
    qudt:applicableUnit unit:M3-PER-C ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hall_effect"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "In an isotropic conductor, the relation between electric field strength, \\(E\\), and electric current density, \\(J\\) is \\(E = \\rho J + R_H(B X J)\\), where \\(\\rho\\) is resistivity, and \\(B\\) is magnetic flux density."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Hall Coefficient\" is defined as the ratio of the induced electric field to the product of the current density and the applied magnetic field." ;
    qudt:symbol "R_H, A_H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HamiltonFunction a qudt:QuantityKind ;
    rdfs:label "Hamilton Function"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hamilton–Jacobi_equation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = \\sum p_i\\dot{q_i} - L\\), where \\(p_i\\) is a generalized momentum, \\(\\dot{q_i}\\) is a generalized velocity, and \\(L\\) is the Lagrange function."^^qudt:LatexString ;
    qudt:plainTextDescription "The Hamilton–Jacobi equation (HJE) is a necessary condition describing extremal geometry in generalizations of problems from the calculus of variations." ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HeartRate a qudt:QuantityKind ;
    rdfs:label "Heart Rate"@en ;
    qudt:applicableUnit unit:BEAT-PER-MIN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heart_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.medterms.com/script/main/art.asp?articlekey=3674"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/oi/authority.20110803100354463"^^xsd:anyURI ;
    qudt:plainTextDescription "The number of heartbeats per unit of time, usually per minute. The heart rate is based on the number of contractions of the ventricles (the lower chambers of the heart). The heart rate may be too fast (tachycardia) or too slow (bradycardia). The average adult pulse rate at rest is 60–80 per minute, but exercise, injury, illness, and emotion may produce much faster rates." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Heat a qudt:QuantityKind ;
    rdfs:label "Heat"@en ;
    qudt:abbreviation "heat" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:THM_EEC,
        unit:THM_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heat"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Heat\" is the energy transferred by a thermal process.  Heat can be measured in terms of the dynamical units of energy, as the erg, joule, etc., or in terms of the amount of energy required to produce a definite thermal change in some substance, as, for example, the energy required per degree to raise the temperature of a unit mass of water at some temperature ( calorie, Btu)." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ThermalEnergy .

quantitykind:HeatCapacityRatio a qudt:QuantityKind ;
    rdfs:label "Heat Capacity Ratio"@en ;
    dcterms:description "The heat capacity ratio, or ratio of specific heats, is the ratio of the heat capacity at constant pressure (\\(C_P\\)) to heat capacity at constant volume (\\(C_V\\)). For an ideal gas, the heat capacity is constant with temperature (\\(\\theta\\)). Accordingly we can express the enthalpy as \\(H = C_P*\\theta\\) and the internal energy as \\(U = C_V \\cdot \\theta\\). Thus, it can also be said that the heat capacity ratio is the ratio between enthalpy and internal energy."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heat_capacity_ratio"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_capacity_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H-1T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:HeatFlowRatePerUnitArea a qudt:QuantityKind ;
    rdfs:label "Heat Flow Rate per Unit Area"@en ;
    dcterms:description "\\(\\textit{Heat Flux}\\) is the heat rate per unit area. In SI units, heat flux is measured in \\(W/m^2\\). Heat rate is a scalar quantity, while heat flux is a vectorial quantity. To define the heat flux at a certain point in space, one takes the limiting case where the size of the surface becomes infinitesimally small."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_flux"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:HeatFluxDensity a qudt:QuantityKind ;
    rdfs:label "Heat Flux Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:HeatingValue a qudt:QuantityKind ;
    rdfs:label "Calorific Value"@en,
        "Energy Value"@en,
        "Heating Value"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB,
        unit:BTU_TH-PER-LB,
        unit:CAL_IT-PER-GM,
        unit:CAL_TH-PER-GM,
        unit:ERG-PER-G,
        unit:ERG-PER-GM,
        unit:J-PER-GM,
        unit:J-PER-KiloGM,
        unit:KiloCAL-PER-GM,
        unit:KiloJ-PER-KiloGM,
        unit:KiloLB_F-FT-PER-LB,
        unit:MegaJ-PER-KiloGM,
        unit:N-M-PER-KiloGM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Heat_of_combustion"^^xsd:anyURI,
        "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/link/ifcheatingvaluemeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The heating value (or energy value or calorific value) of a substance, usually a fuel or food (see food energy), is the amount of heat released during the combustion of a specified amount of it. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:Height a qudt:QuantityKind ;
    rdfs:label "Height"@en ;
    qudt:abbreviation "height" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Height"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_CGS-EMU_L,
        qudt:DIM_CGS-ESU_L,
        qudt:DIM_CGS-L,
        qudt:DIM_Planck-L,
        qudt:DIM_SI-L,
        qudt:DIM_USCUSTOMARY-L ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Height"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Height\" is the measurement of vertical distance, but has two meanings in common use. It can either indicate how \"tall\" something is, or how \"high up\" it is." ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:HenrysLawVolatilityConstant a qudt:QuantityKind ;
    rdfs:label "Henry's Law Volatility Constant"@en ;
    qudt:applicableUnit unit:ATM-M3-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:plainTextDescription "A quantity kind that is a proportionality constant that relates the partial pressure of a gas above a liquid and the concentration of the gas dissolved in the liquid.  The numerator contains the gaseous concentration and the denominator contains the liquid concentration." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HoleDensity a qudt:QuantityKind ;
    rdfs:label "Hole Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Hole Density\" is the number of holes per volume in a valence band." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:HorizontalVelocity a qudt:QuantityKind ;
    rdfs:label "Horizontal Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Component of a projectile's velocity, which acts parallel to the ground and does not lift the projectile in the air." ;
    qudt:symbol "V_{X}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:HyperfineStructureQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Hyperfine Structure Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hyperfine_structure"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Hyperfine Structure Quantum Number\" is a quantum number of an atom describing inclination of the nuclear spin with respect to a quantization axis given by the magnetic field produced by the orbital electrons." ;
    qudt:symbol "F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber .

quantitykind:INERT-MASS a qudt:QuantityKind ;
    rdfs:label "Inert Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The sum of the vehicle dry mass, residual fluids and gasses, personnel and personnel provisions, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:IgnitionIntervalTime a qudt:QuantityKind ;
    rdfs:label "Ignition interval time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:InitialExpansionRatio a qudt:QuantityKind ;
    rdfs:label "Initial Expansion Ratio"@en ;
    qudt:applicableUnit unit:PER-K,
        unit:PPM-PER-K,
        unit:PPTM-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ExpansionRatio .

quantitykind:InitialNozzleThroatDiameter a qudt:QuantityKind ;
    rdfs:label "Initial Nozzle Throat Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NozzleThroatDiameter .

quantitykind:InitialVehicleMass a qudt:QuantityKind ;
    rdfs:label "Initial Vehicle Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_{o}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:InitialVelocity a qudt:QuantityKind ;
    rdfs:label "Initial Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "The velocity of a moving body at starting; especially, the velocity of a projectile as it leaves the mouth of a firearm from which it is discharged." ;
    qudt:symbol "V_{i}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:InternalConversionFactor a qudt:QuantityKind ;
    rdfs:label "InternalConversionFactor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Internal_conversion_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"InternalConversionFactor\" describes the rate of internal conversion. It is the ratio of the number of internal conversion electrons to the number of gamma quanta emitted by the radioactive atom in a given transition." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IntinsicCarrierDensity a qudt:QuantityKind ;
    rdfs:label "Intinsic Carrier Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:latexDefinition "\\(np = n_i^2\\), where \\(n\\) is electron density and \\(p\\) is hole density."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Intinsic Carrier Density\" is proportional to electron and hole densities." ;
    qudt:symbol "n_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:InverseAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Inverse amount of substance"@en ;
    qudt:applicableUnit unit:PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseEnergy a qudt:QuantityKind ;
    rdfs:label "Inverse Energy"@en ;
    qudt:applicableUnit unit:PER-KiloV-A-HR ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseLengthTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Length Temperature"@en ;
    qudt:applicableUnit unit:PER-M-K ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseMagneticFlux a qudt:QuantityKind ;
    rdfs:label "Inverse Magnetic Flux"@en ;
    qudt:applicableUnit unit:HZ-PER-V,
        unit:PER-WB ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InversePermittivity a qudt:QuantityKind ;
    rdfs:label "Inverse Permittivity"@en ;
    qudt:applicableUnit unit:M-PER-FARAD ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareEnergy a qudt:QuantityKind ;
    rdfs:label "Inverse Square Energy"@en ;
    dcterms:isReplacedBy quantitykind:InverseEnergy_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L-4I0M-2H0T4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareMass a qudt:QuantityKind ;
    rdfs:label "Inverse Square Mass"@en ;
    dcterms:isReplacedBy quantitykind:InverseMass_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-2H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Temperature"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTimeTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Time Temperature"@en ;
    qudt:applicableUnit unit:HZ-PER-K,
        unit:MegaHZ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonConcentration a qudt:QuantityKind ;
    rdfs:label "Ion Concentration"@en ;
    qudt:exactMatch quantitykind:IonDensity ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:plainTextDescription "\"Ion Concentration\" is the number of ions per unit volume. Also known as ion density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonCurrent a qudt:QuantityKind ;
    rdfs:label "Ion Current"@en ;
    qudt:applicableUnit unit:A,
        unit:A_Ab,
        unit:A_Stat,
        unit:BIOT,
        unit:KiloA,
        unit:MegaA,
        unit:MicroA,
        unit:MilliA,
        unit:NanoA,
        unit:PicoA,
        unit:PlanckCurrent ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:plainTextDescription "An ion current is the influx and/or efflux of ions through an ion channel." ;
    qudt:symbol "j" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCurrent .

quantitykind:IonTransportNumber a qudt:QuantityKind ;
    rdfs:label "Ion Transport Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ion_transport_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(t_B = \\frac{i_B}{i}\\), where \\(i_B\\) is the electric current carried by the ion \\(B\\) and \\(i\\) is the total electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Ion Transport Number\" is a quantity which indicates the different contribution of ions to the electric current in electrolytes due to different electrical mobility." ;
    qudt:symbol "t_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:IonicCharge a qudt:QuantityKind ;
    rdfs:label "Ionic Charge"@en ;
    qudt:applicableUnit unit:A-HR,
        unit:A-SEC,
        unit:AttoC,
        unit:C,
        unit:C_Ab,
        unit:C_Stat,
        unit:CentiC,
        unit:DecaC,
        unit:DeciC,
        unit:E,
        unit:ElementaryCharge,
        unit:ExaC,
        unit:F,
        unit:FR,
        unit:FemtoC,
        unit:GigaC,
        unit:HectoC,
        unit:KiloA-HR,
        unit:KiloC,
        unit:MegaC,
        unit:MicroC,
        unit:MilliA-HR,
        unit:MilliC,
        unit:NanoC,
        unit:PetaC,
        unit:PicoC,
        unit:PlanckCharge,
        unit:TeraC,
        unit:YoctoC,
        unit:YottaC,
        unit:ZeptoC,
        unit:ZettaC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:plainTextDescription "The total charge of an ion. The charge of an electron; the charge of any ion is equal to this electron charge in magnitude, or is an integral multiple of it." ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCharge .

quantitykind:IonicStrength a qudt:QuantityKind ;
    rdfs:label "Ionic Strength"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM,
        unit:MicroMOL-PER-GM,
        unit:MilliMOL-PER-GM,
        unit:MilliMOL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionic_strength"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = \\frac{1}{2} \\sum z_i^2 b_i\\), where the summation is carried out over all ions with charge number \\(z_i\\) and molality \\(m_i\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Ionic Strength\" of a solution is a measure of the concentration of ions in that solution." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Irradiance a qudt:QuantityKind ;
    rdfs:label "Irradiance"@en ;
    qudt:abbreviation "W-PER-M2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Irradiance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the radiant flux incident on an element of the surface with area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Irradiance and Radiant Emittance are radiometry terms for the power per unit area of electromagnetic radiation at a surface. \"Irradiance\" is used when the electromagnetic radiation is incident on the surface. \"Radiant emmitance\" (or \"radiant exitance\") is used when the radiation is emerging from the surface." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:IsothermalMoistureCapacity a qudt:QuantityKind ;
    rdfs:label "Isothermal Moisture Capacity"@en ;
    dcterms:description "\"Isothermal Moisture Capacity\" is the capacity of a material to absorb moisture in the Effective Moisture Penetration Depth (EMPD) model."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciL-PER-GM,
        unit:L-PER-KiloGM,
        unit:M3-PER-KiloGM,
        unit:MilliL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:informativeReference "https://bigladdersoftware.com/epx/docs/8-4/engineering-reference/effective-moisture-penetration-depth-empd.html#empd-nomenclature"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificVolume .

quantitykind:Kerma a qudt:QuantityKind ;
    rdfs:label "Kerma"@en ;
    qudt:applicableUnit unit:GRAY ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kerma_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For indirectly ionizing (uncharged) particles, \\(K= \\frac{dE_{tr}}{dm}\\), where \\(dE_{tr}\\) is the mean sum of the initial kinetic energies of all the charged ionizing particles liberated by uncharged ionizing particles in an element of matter, and \\(dm\\) is the mass of that element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Kerma\" is the sum of the initial kinetic energies of all the charged particles liberated by uncharged ionizing radiation (i.e., indirectly ionizing radiation such as photons and neutrons) in a sample of matter, divided by the mass of the sample." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:KermaRate a qudt:QuantityKind ;
    rdfs:label "Kerma Rate"@en ;
    qudt:applicableUnit unit:GRAY-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-value_layer"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{K} = \\frac{dK}{dt}\\), where \\(K\\) is the increment of kerma during time interval with duration \\(t\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{K}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Kerma Rate\" is the kerma per unit time." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:KinematicViscosity a qudt:QuantityKind ;
    rdfs:label "Kinematic Viscosity"@en ;
    dcterms:description "The ratio of the viscosity of a liquid to its density. Viscosity is a measure of the resistance of a fluid which is being deformed by either shear stress or tensile stress. In many situations, we are concerned with the ratio of the inertial force to the viscous force (that is the Reynolds number), the former characterized by the fluid density \\(\\rho\\). This ratio is characterized by the kinematic viscosity (Greek letter \\(\\nu\\)), defined as follows:  \\(\\nu = \\mu / \\rho\\). The SI unit of \\(\\nu\\) is \\(m^{2}/s\\). The SI unit of \\(\\nu\\) is \\(kg/m^{1}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiST,
        unit:ST ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Viscosity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Viscosity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\nu = \\frac{\\eta}{\\rho}\\), where \\(\\eta\\) is dynamic viscosity and \\(\\rho\\) is mass density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\nu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime,
        quantitykind:Viscosity .

quantitykind:KineticEnergy a qudt:QuantityKind ;
    rdfs:label "Kinetic Energy"@en ;
    dcterms:description "\\(\\textit{Kinetic Energy}\\) is the energy which a body possesses as a consequence of its motion, defined as one-half the product of its mass \\(m\\) and the square of its speed \\(v\\), \\( \\frac{1}{2} mv^{2} \\). The kinetic energy per unit volume of a fluid parcel is the \\( \\frac{1}{2}  p v^{2}\\) , where \\(p\\) is the density and \\(v\\) the speed of the parcel. See potential energy. For relativistic speeds the kinetic energy is given by \\(E_k = mc^2 - m_0 c^2\\), where \\(c\\) is the velocity of light in a vacuum, \\(m_0\\) is the rest mass, and \\(m\\) is the moving mass."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kinetic_energy"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_ISO-L2MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(T = \\frac{mv^2}{2}\\), where \\(m\\) is mass and \\(v\\) is speed."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:symbol "K",
        "KE" ;
    qudt:url "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:LagrangeFunction a qudt:QuantityKind ;
    rdfs:label "Lagrange Function"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lagrangian"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=113-03-76"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L(q_i, \\dot{q_i}) = T(q_i, \\dot{q_i}) - V(q_i)\\), where \\(T\\) is kinetic energy, \\(V\\) is potential energy, \\(q_i\\) is a generalized coordinate, and \\(\\dot{q_i}\\) is a generalized velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "The Lagrange Function is a function that summarizes the dynamics of the system." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Landau-GinzburgNumber a qudt:QuantityKind ;
    rdfs:label "Landau-Ginzburg Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ginzburg–Landau_theory"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "At zero thermodynamic temperature \\(\\kappa = \\frac{\\lambda_L}{(\\varepsilon\\sqrt{2})}\\), where \\(\\lambda_L\\) is London penetration depth and \\(\\varepsilon\\) is coherence length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Landau-Ginzburg Number\", also known as the Ginzburg-Landau parameter, describes the relationship between London penetration depth and coherence length." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LandeGFactor a qudt:QuantityKind ;
    rdfs:label "Lande g-Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/G-factor_(physics)"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Landé_g-factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = \\frac{\\mu}{J\\mu_B}\\), where \\(\\mu\\) is the magnitude of magnetic dipole moment, \\(J\\) is the total angular momentum quantum number, and \\(\\mu_B\\) is the Bohr magneton."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Lande g-Factor\" is a particular example of a g-factor, namely for an electron with both spin and orbital angular momenta. It is named after Alfred Landé, who first described it in 1921." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LarmorAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Larmor Angular Frequency"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Larmor_precession#Larmor_frequency"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega_L = \\frac{e}{2m_e}B\\), where \\(e\\) is the elementary charge, \\(m_e\\) is the rest mass of electron, and \\(B\\) is the magnetic flux density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega_L\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Larmor Frequency\" describes angular momentum vector precession about the external field axis with an angular frequency." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularFrequency .

quantitykind:LatticePlaneSpacing a qudt:QuantityKind ;
    rdfs:label "Lattice Plane Spacing"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lattice Plane Spacing\" is the distance between successive lattice planes." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:LeakageFactor a qudt:QuantityKind ;
    rdfs:label "Leakage Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(leakage-factor\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=221-04-12"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = 1 - k^2\\), where \\(k\\) is the coupling factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Leakage Factor\" is the ratio of the total magnetic flux to the useful magnetic flux of a magnetic circuit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthByForce a qudt:QuantityKind ;
    rdfs:label "Length Force"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthEnergy a qudt:QuantityKind ;
    rdfs:label "Length Energy"@en ;
    qudt:applicableUnit unit:MegaEV-FemtoM ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthMass a qudt:QuantityKind ;
    rdfs:label "Length Mass"@en ;
    qudt:applicableUnit unit:GM-MilliM,
        unit:LB-IN,
        unit:M-KiloGM,
        unit:OZ-FT,
        unit:OZ-IN ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthMolarEnergy a qudt:QuantityKind ;
    rdfs:label "Length Molar Energy"@en ;
    qudt:applicableUnit unit:J-M-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthPerUnitElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Length per Unit Electric Current"@en ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthPercentage a qudt:QuantityKind ;
    rdfs:label "Length Percentage"@en ;
    dcterms:isReplacedBy quantitykind:LengthRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LengthTemperature a qudt:QuantityKind ;
    rdfs:label "Length Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-CentiM,
        unit:K-M,
        unit:M-K ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthTemperatureTime a qudt:QuantityKind ;
    rdfs:label "Length Temperature Time"@en ;
    qudt:applicableUnit unit:CentiM-SEC-DEG_C ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Lethargy a qudt:QuantityKind ;
    rdfs:label "Lethargy"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.scribd.com/doc/51548050/149/Lethargy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = \\ln(\\frac{E_0}{E})\\), where \\(E_0\\) is a reference energy."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Lethargy\" is a dimensionless logarithm of the ratio of the energy of source neutrons to the energy of neutrons after a collision." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LevelWidth a qudt:QuantityKind ;
    rdfs:label "Level Width"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/Level+Width"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Gamma = \\frac{\\hbar}{\\tau}\\), where \\(\\hbar\\) is the reduced Planck constant and \\(\\tau\\) is the mean lifetime."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Level Width\" is the uncertainty in the energy of a quantum-mechanical system having discrete energy levels in a state that is not strictly stationary. The system may be an atom, a molecule, or an atomic nucleus." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LiftCoefficient a qudt:QuantityKind ;
    rdfs:label "Lift Coefficient"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The lift coefficient is a dimensionless coefficient that relates the lift generated by a lifting body, the dynamic pressure of the fluid flow around the body, and a reference area associated with the body." ;
    qudt:symbol "C_{L}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:LiftForce a qudt:QuantityKind ;
    rdfs:label "Lift Force"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "The lift force, lifting force or simply lift is the sum of all the forces on a body that force it to move perpendicular to the direction of flow." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:LinearAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Absorption Coefficient"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha(\\lambda) = \\frac{1}{\\Phi_\\lambda(\\lambda)}\\frac{d\\Phi_\\lambda(\\lambda)}{dl}\\), where \\(\\frac{d\\Phi}{\\Phi}\\) is the relative decrease, caused by absorption, in the spectral radiant flux \\(\\Phi\\) of a collimated beam of electromagnetic radiation corresponding to the wavelength \\(\\lambda\\) during traversal of an infinitesimal layer of a medium and \\(dl\\) is the length traversed."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Linear Absorption Coefficient is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(\\mu = -\\frac{1}{J}\\frac{dJ}{dx}\\), where \\(J\\) is the magnitude of the current rate of a beam of particles parallel to the \\(x-direction\\).

Or:

\\(\\mu(\\lambda) = \\frac{1}{\\Phi_\\lambda(\\lambda)}\\frac{d\\Phi_\\lambda(\\lambda)}{dl}\\), where \\(\\frac{d\\Phi}{\\Phi}\\) is the relative decrease in the spectral radiant flux \\(\\Phi\\) of a collimated beam of electromagnetic radiation corresponding to the wavelength \\(\\lambda\\) during traversal of an infinitesimal layer of a medium and \\(dl\\) is the length traversed."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Attenuation Coefficient\", also called the attenuation coefficient,  narrow beam attenuation coefficient, or absorption coefficient, is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearCompressibility a qudt:QuantityKind ;
    rdfs:label "Linear Compressibility"@en ;
    qudt:applicableUnit unit:MicroM-PER-N ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:plainTextDescription "Linear Compressibility is a measure of the relative length change of a solid as a response to a normal force change." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearDensity a qudt:QuantityKind ;
    rdfs:label "Linear Density"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M,
        unit:KiloGM-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_l = \\frac{dm}{dl}\\), where \\(m\\) is mass and \\(l\\) is length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_l\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Linear density, linear mass density or linear mass is a measure of mass per unit of length, and it is a characteristic of strings or other one-dimensional objects." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearEnergyTransfer a qudt:QuantityKind ;
    rdfs:label "Linear Energy Transfer"@en ;
    qudt:applicableUnit unit:J-PER-M,
        unit:KiloEV-PER-MicroM,
        unit:MegaEV-PER-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Linear_energy_transfer"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_energy_transfer"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing charged particles, \\(L_\\Delta = \\frac{dE_\\Delta}{dl}\\), where \\(dE_\\Delta\\) is the mean energy lost in elctronic collisions locally to matter along a small path through the matter, minus the sum of the kinetic energies of all the electrons released with kinetic energies in excess of \\(\\Delta\\), and \\(dl\\) is the length of that path."^^qudt:LatexString ;
    qudt:latexSymbol "\\(L_\\Delta\\)"^^qudt:LatexString,
        "\\(L_\\bigtriangleup\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Energy Transfer\"  (LET) is the linear density of energy lost by a charged ionizing particle travelling through matter.Typically, this measure is used to quantify the effects of ionizing radiation on biological specimens or electronic devices." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearExpansionCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Expansion Coefficient"@en ;
    qudt:applicableUnit unit:PER-K,
        unit:PPM-PER-K,
        unit:PPTM-PER-K ;
    qudt:expression "\\(lnr-exp-coef\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_l = \\frac{1}{l} \\; \\frac{dl}{dT}\\), where \\(l\\) is \\(length\\) and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_l\\)"^^qudt:LatexString ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H1T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ExpansionRatio .

quantitykind:LinearForce a qudt:QuantityKind ;
    rdfs:label "Streckenlast"@de,
        "Linear Force"@en ;
    qudt:applicableUnit unit:DYN-PER-CentiM,
        unit:KiloGM_F-M-PER-CentiM2,
        unit:KiloLB_F-PER-FT,
        unit:LB_F-PER-FT,
        unit:LB_F-PER-IN,
        unit:MilliN-PER-M,
        unit:N-M-PER-M2,
        unit:N-PER-CentiM,
        unit:N-PER-M,
        unit:N-PER-MilliM,
        unit:PicoPA-PER-KiloM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/schema/ifcmeasureresource/lexical/ifclinearforcemeasure.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "Another name for Force Per Length, used by the Industry Foundation Classes (IFC) standard." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerLength .

quantitykind:LinearIonization a qudt:QuantityKind ;
    rdfs:label "Linear Ionization"@en ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization#Classical_ionization"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(N_{il} = \\frac{1}{e}\\frac{dQ}{dl}\\), where \\(e\\) is the elementary charge and \\(dQ\\) is the average total charge of all positive ions produced over an infinitesimal element of the path with length \\(dl\\) by an ionizing charged particle."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Ionization\"  is a description of how the ionization of an atom or molecule takes place. For example, an ion with a +2 charge can be created only from an ion with a +1 charge or a +3 charge. That is, the numerical charge of an atom or molecule must change sequentially, always moving from one number to an adjacent, or sequential, number. Using sequential ionization definition." ;
    qudt:symbol "N_{il}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearStiffness a qudt:QuantityKind ;
    rdfs:label "Streckenlast"@de,
        "Linear Force"@en ;
    qudt:applicableUnit unit:DYN-PER-CentiM,
        unit:KiloGM_F-M-PER-CentiM2,
        unit:KiloLB_F-PER-FT,
        unit:LB_F-PER-FT,
        unit:LB_F-PER-IN,
        unit:MilliN-PER-M,
        unit:N-M-PER-M2,
        unit:N-PER-CentiM,
        unit:N-PER-M,
        unit:N-PER-MilliM,
        unit:PicoPA-PER-KiloM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/schema/ifcmeasureresource/lexical/ifclinearstiffnessmeasure.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "Stiffness is the extent to which an object resists deformation in response to an applied force. Linear Stiffness is the term used in the Industry Foundation Classes (IFC) standard." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerLength .

quantitykind:LinearThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Linear Thermal Expansion"@en ;
    qudt:applicableUnit unit:CentiM-PER-K,
        unit:FT-PER-DEG_F,
        unit:IN-PER-DEG_F,
        unit:M-PER-K,
        unit:MicroM-PER-K,
        unit:MilliM-PER-K,
        unit:YD-PER-DEG_F ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/linear_thermal_expansion"^^xsd:anyURI ;
    qudt:plainTextDescription "When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion. Different coefficients of thermal expansion can be defined for a substance depending on whether the expansion is measured by: linear thermal expansion, area thermal expansion, or volumetric thermal expansion." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinkedFlux a qudt:QuantityKind ;
    rdfs:label "Linked Flux"@en ;
    dcterms:description "\"Linked Flux\" is defined as the path integral of the magnetic vector potential. This is the line integral of a magnetic vector potential \\(A\\) along a curve \\(C\\). The line vector element \\(dr\\) is the differential of position vector \\(r\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloLB_F-FT-PER-A,
        unit:KiloWB,
        unit:MX,
        unit:MilliWB,
        unit:N-M-PER-A,
        unit:UnitPole,
        unit:V_Ab-SEC,
        unit:WB ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetic_flux"^^xsd:anyURI ;
    qudt:expression "\\(linked-flux\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-24"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1800"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi_m = \\int_C A \\cdot dr\\), where \\(A\\) is magnetic vector potential and \\(dr\\) is the vector element of the curve \\(C\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString,
        "\\(\\Psi_m\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFlux .

quantitykind:LiquidVolume a qudt:QuantityKind ;
    rdfs:label "Liquid Volume"@en ;
    qudt:applicableUnit unit:CUP,
        unit:CUP_US,
        unit:CentiL,
        unit:GAL_IMP,
        unit:GAL_UK,
        unit:GAL_US,
        unit:L,
        unit:OZ_VOL_US,
        unit:PINT_US,
        unit:QT_US ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.ehow.com/facts_6371078_liquid-volume_.html"^^xsd:anyURI ;
    qudt:plainTextDescription "Liquid volume is the volume of a given amount of liquid, that is, the amount of space a liquid takes up. There are a number of different units used to measure liquid volume, but most of them fall under either the metric system of measurement or the Imperial system of measurement." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:LogOctanolAirPartitionCoefficient a qudt:QuantityKind ;
    rdfs:label "Octanol Air Partition Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "A dimensionless ratio that is the logarithm of the ratio of a compound's concentration within a two phase mixture of liquid octanol and gaseous air at equilibrium.  More simply, it is a comparison of the solubilities of the compound solute in these two immiscible substances." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LogOctanolWaterPartitionCoefficient a qudt:QuantityKind ;
    rdfs:label "Logarithm of Octanol Water Partition Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "A dimensionless ratio that is the logarithm of the ratio of a compound's concentration within a two phase mixture of octanol and water at equilibrium.  More simply, it is a comparison of the solubilities of the compound solute in these two immiscible liquids.  This property is used to measure the lipophilicity and the hydrophilicity of a substance." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LogarithmicFrequencyInterval a qudt:QuantityKind ;
    rdfs:label "Logarithmic frequency interval"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(G = \\log_{2}(f2/f1)\\), where \\(f1\\) and \\(f2 \\geq f1\\) are frequencies of two tones."^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LondonPenetrationDepth a qudt:QuantityKind ;
    rdfs:label "London Penetration Depth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/London_penetration_depth"^^xsd:anyURI ;
    qudt:latexDefinition "If an applied magnetic field is parallel to the plane surface of a semi-infinite superconductor, the field penetrates the superconductor according to the expression \\(B(x) = B(0) \\exp{(\\frac{-x}{\\lambda_L})}\\), where \\(B\\) is magnetic flux density and \\(x\\) is the distance from the surface."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"London Penetration Depth\" characterizes the distance to which a magnetic field penetrates into a superconductor and becomes equal to 1/e times that of the magnetic field at the surface of the superconductor." ;
    qudt:symbol "λₗ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Long-RangeOrderParameter a qudt:QuantityKind ;
    rdfs:label "Long-Range Order Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Long-Range Order Parameter\" is the fraction of atoms in an Ising ferromagnet having magnetic moments in one direction, minus the fraction having magnetic moments in the opposite direction." ;
    qudt:symbol "R, s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LorenzCoefficient a qudt:QuantityKind ;
    rdfs:label "Lorenz Coefficient"@en ;
    qudt:applicableUnit unit:V2-PER-K2 ;
    qudt:hasDimensionVector qkdv:A0E-2L4I0M2H-2T-6D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\frac{\\lambda}{\\sigma T}\\), where \\(\\lambda\\) is thermal conductivity, \\(\\sigma\\) is electric conductivity, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Lorenz Coefficient\" is part mof the Lorenz curve." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LossAngle a qudt:QuantityKind ;
    rdfs:label "Loss Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta = \\arctan d\\), where \\(d\\) is loss factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\delta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:LossFactor a qudt:QuantityKind ;
    rdfs:label "Loss Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\frac{1}{Q}\\), where \\(Q\\) is quality factor."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Loss Factor} is the inverse of \\textit{Quality Factor} and is the ratio of the \\textit{resistance} and modulus of \\textit{reactance\"." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:QualityFactor,
        quantitykind:Reactance,
        quantitykind:Resistance .

quantitykind:LuminousEfficacy a qudt:QuantityKind ;
    rdfs:label "Luminous Efficacy"@en ;
    qudt:applicableUnit unit:LM-PER-W ;
    qudt:expression "\\(lm/w\\)"^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_efficacy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K = \\frac{\\Phi_v}{\\Phi}\\), where \\(\\Phi_v\\) is the luminous flux and \\(\\Phi\\) is the corresponding radiant flux."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Efficacy is the ratio of luminous flux (in lumens) to power (usually measured in watts). Depending on context, the power can be either the radiant flux of the source's output, or it can be the total electric power consumed by the source." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousEmittance a qudt:QuantityKind ;
    rdfs:label "Luminous Emmitance"@en ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Luminous Emittance\" is the luminous flux per unit area emitted from a surface." ;
    qudt:symbol "M_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LuminousFluxPerArea .

quantitykind:LuminousExposure a qudt:QuantityKind ;
    rdfs:label "Luminous Exposure"@en ;
    qudt:applicableUnit unit:LUX-HR ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_energy"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Exposure_(photography)#Photometric_and_radiometric_exposure"^^xsd:anyURI ;
    qudt:plainTextDescription "Luminous Exposure is the time-integrated illuminance." ;
    qudt:symbol "H_v",
        "Hv" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousIntensityDistribution a qudt:QuantityKind ;
    rdfs:label "Ion Concentration"@en ;
    qudt:applicableUnit unit:CD-PER-LM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/link/ifcluminousintensitydistributionmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "\"Luminous Intensity Distribution\" is a measure of the luminous intensity of a light source that changes according to the direction of the ray. It is normally based on some standardized distribution light distribution curves. Usually measured in Candela/Lumen (cd/lm) or (cd/klm)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MASS-DELIVERED a qudt:QuantityKind ;
    rdfs:label "Mass Delivered"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The minimum mass a propulsive system can deliver to a specified target or location. Most mass- delivered requirements have associated Delta-V requirements, effectively specifying the path between the two points." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-GROWTH-ALLOWANCE a qudt:QuantityKind ;
    rdfs:label "Mass Growth Allowance"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A factor applied to basic mass at the lowest level of design detail available based on type and maturity of hardware according to an approved MGA depletion schedule." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MGA" ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-MARGIN a qudt:QuantityKind ;
    rdfs:label "Mass Margin"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Requirement minus predicted value. Margin is used as a metric in risk management. Positive margin mitigates the risk of mass increases from requirements maturation and implementation, underestimated predicted system, or subsystem mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-PROPERTY-UNCERTAINTY a qudt:QuantityKind ;
    rdfs:label "Mass Property Uncertainty"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Variation in predicted MP due to lack of definition, manufacturing variations, environment effects, or accuracy limitation of measuring devices." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MOMENT-OF-INERTIA_Y a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia in the Y axis"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I_{y}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:MOMENT-OF-INERTIA_Z a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia in the Z axis"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I_{z}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:MachNumber a qudt:QuantityKind ;
    rdfs:label "Mach Number"@en ;
    dcterms:description "&quot;Mach Number&quot; is a dimensionless quantity representing the speed of an object moving through air or other fluid divided by the local speed of sound. It is commonly used to represent the speed of an object when it is traveling close to or above the speed of sound. The Mach number is commonly used both with objects traveling at high speed in a fluid, and with high-speed fluid flows inside channels such as nozzles, diffusers or wind tunnels. As it is defined as a ratio of two speeds, it is a dimensionless number."^^rdf:HTML ;
    qudt:applicableUnit unit:MACH ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mach_number"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mach_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Ma = \\frac{v_o}{c_o}\\), where \\(v_0\\) is speed, and \\(c_o\\) is speed of sound."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mach Number\" is a dimensionless quantity representing the speed of an object moving through air or other fluid divided by the local speed of sound. It is commonly used to represent the speed of an object when it is traveling close to or above the speed of sound. The Mach number is commonly used both with objects traveling at high speed in a fluid, and with high-speed fluid flows inside channels such as nozzles, diffusers or wind tunnels. As it is defined as a ratio of two speeds, it is a dimensionless number." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "Ma" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio ;
    skos:closeMatch <http://dbpedia.org/resource/Mach_number> .

quantitykind:MacroscopicCrossSection a qudt:QuantityKind ;
    rdfs:label "Macroscopic Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sum = n_1\\sigma_1 + \\cdots + n_j\\sigma_j +\\), where \\(n_j\\) is the number density and \\(\\sigma_j\\) the cross-section for entities of type \\(j\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sum\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Macroscopic Cross-section\" is the sum of the cross-sections for a reaction or process of a specified type over all atoms or other entities in a given 3D domain, divided by the volume of that domain." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:MacroscopicTotalCrossSection a qudt:QuantityKind ;
    rdfs:label "Macroscopic Total Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Nuclear_cross_section"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\sum_{tot}, \\sum_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Macroscopic Total Cross-section\" is the total cross-sections for all atoms or other entities in a given 3D domain, divided by the volume of that domain." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:MadelungConstant a qudt:QuantityKind ;
    rdfs:label "Madelung Constant"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Madelung_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "For a uni-univalent ionic crystal of specified structure, the binding energy \\(V_b\\) per pair of ions is \\(V_b = \\alpha\\frac{e^2}{4\\pi \\varepsilon_0 a}\\), where \\(e\\) is the elementary charge, \\(\\varepsilon_0\\) is the electric constant, and \\(a\\) is the lattice constant which should be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Madelung Constant\" is used in determining the electrostatic potential of a single ion in a crystal by approximating the ions by point charges. It is named after Erwin Madelung, a German physicist." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticDipoleMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Dipole Moment"@en ;
    dcterms:description "\"Magnetic Dipole Moment\" is the magnetic moment of a system is a measure of the magnitude and the direction of its magnetism. Magnetic moment usually refers to its Magnetic Dipole Moment, and quantifies the contribution of the system's internal magnetism to the external dipolar magnetic field produced by the system (that is, the component of the external magnetic field that is inversely proportional to the cube of the distance to the observer). The Magnetic Dipole Moment is a vector-valued quantity. For a particle or nucleus, vector quantity causing an increment \\(\\Delta W = -\\mu \\cdot B\\) to its energy \\(W\\) in an external magnetic field with magnetic flux density \\(B\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:N-M2-PER-A,
        unit:WB-M ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-55"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "https://www.simetric.co.uk/siderived.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(E_m = -m \\cdot B\\), where \\(E_m\\) is the interaction energy of the molecule with magnetic diploe moment \\(m\\) and a magnetic field with magnetic flux density \\(B\\)

or,

\\(J_m = \\mu_0 M\\) where \\(\\mu_0\\) is the magnetic constant and \\(M\\) is Magnetization."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:symbol "J_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticFluxPerUnitLength a qudt:QuantityKind ;
    rdfs:label "Magnetic flux per unit length"@en ;
    qudt:applicableUnit unit:N-PER-A,
        unit:T-M,
        unit:V-SEC-PER-M ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "\"Magnetic Flux per Unit Length\" is a quantity in the SI and C.G.S. Systems of Quantities." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticPolarization a qudt:QuantityKind ;
    rdfs:label "Magnetic Polarization"@en ;
    dcterms:description "\\(\\textbf{Magnetic Polarization}\\) is a vector quantity equal to the product of the magnetization \\(M\\) and the magnetic constant \\(\\mu_0\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-54"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_m = \\mu_0 M\\),  where \\(\\mu_0\\) is the magentic constant and \\(M\\) is magnetization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_m\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:Magnetization .

quantitykind:MagneticReluctivity a qudt:QuantityKind ;
    rdfs:label "Magnetic Reluctivity"@en ;
    qudt:applicableUnit unit:PER-T-M ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeability_(electromagnetism)"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Length Per Unit Magnetic Flux} is the the resistance of a material to the establishment of a magnetic field in it. It is the reciprocal of \\textit{Magnetic Permeability\", the inverse of the measure of the ability of a material to support the formation of a magnetic field within itself." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectromagneticPermeability .

quantitykind:MagneticSusceptability a qudt:QuantityKind ;
    rdfs:label "Magnetic Susceptability"@en ;
    dcterms:description "\"Magnetic Susceptability\" is a scalar or tensor quantity the product of which by the magnetic constant \\(\\mu_0\\) and by the magnetic field strength \\(H\\) is equal to the magnetic polarization \\(J\\). The definition given applies to an isotropic medium. For an anisotropic medium permeability is a second order tensor."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(\\kappa = \\frac{M}{H}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-37"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\kappa = \\frac{M}{H}\\),  where \\(M\\) is magnetization,  and \\(H\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:Magnetization .

quantitykind:MagneticVectorPotential a qudt:QuantityKind ;
    rdfs:label "Magnetic Vector Potential"@en ;
    qudt:applicableUnit unit:KiloWB-PER-M,
        unit:V-SEC-PER-M,
        unit:WB-PER-M,
        unit:WB-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-23"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = \\textbf{rot} A\\), where \\(B\\) is magnetic flux density."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Vector Potential\" is the vector potential of the magnetic flux density. The magnetic vector potential is not unique since any irrotational vector field quantity can be added to a given magnetic vector potential without changing its rotation. Under static conditions the magnetic vector potential is often chosen so that its divergence is zero." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFluxDensity .

quantitykind:MagnetizationField a qudt:QuantityKind ;
    rdfs:label "Magnetization Field"@en ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:plainTextDescription "The Magnetization Field is defined as the ratio of magnetic moment per unit volume. It is a vector-valued quantity." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCurrentPerUnitLength .

quantitykind:MagnetomotiveForce a qudt:QuantityKind ;
    rdfs:label "Magnetomotive Force"@en ;
    dcterms:description "\\(\\textbf{Magnetomotive Force}\\)  (\\(mmf\\)) is the ability of an electric circuit to produce magnetic flux. Just as the ability of a battery to produce electric current is called its electromotive force or emf, mmf is taken as the work required to move a unit magnet pole from any point through any path which links the electric circuit back the same point in the presence of the magnetic force produced by the electric current in the circuit. \\(\\textbf{Magnetomotive Force}\\) is the scalar line integral of the magnetic field strength along a closed path."^^qudt:LatexString ;
    qudt:applicableUnit unit:A,
        unit:AT,
        unit:GI,
        unit:OERSTED-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetomotive_force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-60"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F_m = \\oint \\mathbf{H} \\cdot dr\\), where \\(\\mathbf{H}\\) is magnetic field strength and \\(r\\) is position vector along a given curve \\(C\\) from point \\(a\\) to point \\(b\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(F_m \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:MassAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Absorption Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:informativeReference "http://medical-dictionary.thefreedictionary.com/mass+absorption+coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a_m = \\frac{a}{\\rho}\\), where \\(a\\) is the linear absorption coefficient and \\(\\rho\\) is the mass density of the medium."^^qudt:LatexString ;
    qudt:latexSymbol "\\(a_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The mass absorption coefficient is the linear absorption coefficient divided by the density of the absorber." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Mass Amount of Substance"@en ;
    qudt:applicableUnit unit:LB-MOL ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassAmountOfSubstanceTemperature a qudt:QuantityKind ;
    rdfs:label "Mass Amount of Substance Temperature"@en ;
    qudt:applicableUnit unit:LB-MOL-DEG_F ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassConcentration a qudt:QuantityKind ;
    rdfs:label "Mass Concentration"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3,
        unit:MicroGM-PER-MilliL,
        unit:MilliGM-PER-MilliL,
        unit:NanoGM-PER-MilliL,
        unit:PicoGM-PER-MilliL ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_concentration_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_B = \\frac{m_B}{V}\\), where \\(m_B\\) is the mass of substance \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Concentration\" of substance B  is defined as the mass of a constituent  divided by the volume of the mixture ." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassConcentrationOfWater a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = m/V\\), where \\(m\\) is mass of water, irrespective of the form of aggregation, and \\(V\\) is volume. Mass concentration of water at saturation is denoted \\(w_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Concentration of Water Valour} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassConcentrationOfWaterVapour a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water Vapour"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = m/V\\), where \\(m\\) is mass of water vapour and \\(V\\) is total gas volume. Mass concentration of water vapour at saturation is denoted \\(v_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Concentration of Water} is one of a number of \\textit{Concentration\" quantities  defined by ISO 8000." ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassEnergyTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Energy Transfer Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:informativeReference "http://physics.nist.gov/PhysRefData/XrayMassCoef/chap3.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\frac{\\mu_{tr}}{\\rho} = -\\frac{1}{\\rho}\\frac{1}{R}\\frac{dR_{tr}}{dl}\\), where \\(dR_{tr}\\) is the mean energy that is transferred to kinetic energy of charged particles by interactions of the incident radiation \\(R\\) in traversing a distance \\(dl\\) in the material of density \\(\\rho\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\frac{\\mu_{tr}}{\\rho}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Energy Transfer Coefficient\" is that fraction of the mass attenuation coefficient which contributes to the production of kinetic energy in charged particles." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassExcess a qudt:QuantityKind ;
    rdfs:label "Mass Excess"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_excess"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta = m_a - Am_u\\), where \\(m_a\\) is the rest mass of the atom, \\(A\\) is its nucleon number, and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Excess\" of a nuclide is the difference between its actual mass and its mass number in atomic mass units. It is one of the predominant methods for tabulating nuclear mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassFraction a qudt:QuantityKind ;
    rdfs:label "Mass Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_fraction_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_B = \\frac{m_B}{m}\\), where \\(m_B\\) is the mass of substance \\(B\\) and \\(m\\) is the total."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Fraction\" is the fraction of one substance with mass to the mass of the total mixture ." ;
    qudt:symbol "w_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassNumber a qudt:QuantityKind ;
    rdfs:label "Mass Number"@en ;
    dcterms:description "The \"Mass Number\" (A), also called atomic mass number or nucleon number, is the total number of protons and neutrons (together known as nucleons) in an atomic nucleus. Nuclides with the same value of \\(A\\) are called isobars."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = Z + N\\), where \\(Z\\) is the atomic number and \\(N\\) is the neutron number."^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Count .

quantitykind:MassOfElectricalPowerSupply a qudt:QuantityKind ;
    rdfs:label "Mass Of Electrical Power Supply"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_{E}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassOfSolidBooster a qudt:QuantityKind ;
    rdfs:label "Mass Of Solid Booster"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_{SB}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassOfTheEarth a qudt:QuantityKind ;
    rdfs:label "Mass Of The Earth"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:latexSymbol "\\(M_{\\oplus}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Earth mass is the unit of mass equal to that of the Earth.  Earth mass is often used to describe masses of rocky terrestrial planets." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassPerArea a qudt:QuantityKind ;
    rdfs:label "Mass per Area"@en ;
    dcterms:description "The area density (also known as areal density, surface density, or superficial density) of a two-dimensional object is calculated as the mass per unit area. The SI derived unit is: kilogram per square metre  (\\(kg \\cdot m^{-2}\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:GM-PER-CentiM2,
        unit:GM-PER-M2,
        unit:KiloGM-PER-CentiM2,
        unit:KiloGM-PER-HA,
        unit:KiloGM-PER-KiloM2,
        unit:KiloGM-PER-M2,
        unit:LB-PER-FT2,
        unit:LB-PER-IN2,
        unit:MicroG-PER-CentiM2,
        unit:MilliGM-PER-CentiM2,
        unit:MilliGM-PER-HA,
        unit:MilliGM-PER-M2,
        unit:OZ-PER-FT2,
        unit:OZ-PER-YD2,
        unit:SLUG-PER-FT2,
        unit:TONNE-PER-HA,
        unit:TON_Metric-PER-HA ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac {m} {A}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Mass per Electric Charge"@en ;
    dcterms:description "The mass-to-charge ratio ratio (\\(m/Q\\)) is a physical quantity that is widely used in the electrodynamics of charged particles, for example, in electron optics and ion optics. The importance of the mass-to-charge ratio, according to classical electrodynamics, is that two particles with the same mass-to-charge ratio move in the same path in a vacuum when subjected to the same electric and magnetic fields. Its SI units are \\(kg/C\\), but it can also be measured in Thomson (\\(Th\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:T-SEC ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass-to-charge_ratio"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassPerLength a qudt:QuantityKind ;
    rdfs:label "Mass per Length"@en ;
    dcterms:description "Linear density, linear mass density or linear mass is a measure of mass per unit of length, and it is a characteristic of strings or other one-dimensional objects. The SI unit of linear density is the kilogram per metre (\\(kg/m\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:Denier,
        unit:GM-PER-KiloM,
        unit:GM-PER-M,
        unit:GM-PER-MilliM,
        unit:KiloGM-PER-M,
        unit:KiloGM-PER-MilliM,
        unit:LB-PER-FT,
        unit:LB-PER-IN,
        unit:MilliGM-PER-M,
        unit:SLUG-PER-FT,
        unit:TEX ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassPerTime a qudt:QuantityKind ;
    rdfs:label "Mass per Time"@en ;
    qudt:applicableUnit unit:KiloGM-PER-HR,
        unit:KiloGM-PER-SEC,
        unit:LB-PER-HR,
        unit:LB-PER-MIN,
        unit:N-SEC-PER-M,
        unit:NanoGM-PER-DAY,
        unit:SLUG-PER-SEC,
        unit:TON_SHORT-PER-HR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassRatioOfWaterToDryMatter a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water To Dry Matter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = m/m_d\\), where \\(m\\) is mass of water vapour and \\(m_d\\) is mass of dry matter. Mass ratio of water to dry matter at saturation is denoted \\(u_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Ratio of Water to Dry Matter} is one of a number of \\textit{Concentration Ratio\" quantities  defined by ISO 8000." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassRatioOfWaterVapourToDryGas a qudt:QuantityKind ;
    rdfs:label "Mass Ratio of Water Vapour to Dry Gas"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x = m/m_d\\), where \\(m\\) is mass of water vapour and \\(m_d\\) is mass of dry gas. Mass ratio of water vapour to dry gas  at saturation is denoted \\(x_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Ratio of Water Vapour to Dry Gas} is one of a number of \\textit{Concentration Ratio\" quantities  defined by ISO 8000." ;
    qudt:symbol "x" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassTemperature a qudt:QuantityKind ;
    rdfs:label "Mass Temperature"@en ;
    qudt:applicableUnit unit:GM-PER-DEG_C,
        unit:KiloGM-K,
        unit:LB-DEG_F,
        unit:LB-DEG_R ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassicActivity a qudt:QuantityKind ;
    rdfs:label "Massic Activity"@en ;
    qudt:applicableUnit unit:BQ-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:informativeReference "http://www.encyclo.co.uk/define/massic%20activity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Massic Activity\" is the activity divided by the total mass of the sample." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MaxExpectedOperatingThrust a qudt:QuantityKind ;
    rdfs:label "Maximum Expected Operating Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MEOT" ;
    skos:broader quantitykind:MaxOperatingThrust .

quantitykind:MaxSeaLevelThrust a qudt:QuantityKind ;
    rdfs:label "Max Sea Level Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:comment "Max Sea Level thrust (Mlbf) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:MaximumBeta-ParticleEnergy a qudt:QuantityKind ;
    rdfs:label "Maximum Beta-Particle Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Maximum Beta-Particle Energy\" is the maximum energy of the energy spectrum in a beta-particle disintegration process." ;
    qudt:symbol "Eᵦ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MaximumExpectedOperatingPressure a qudt:QuantityKind ;
    rdfs:label "Maximum Expected Operating Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MEOP" ;
    skos:broader quantitykind:Pressure .

quantitykind:MaximumOperatingPressure a qudt:QuantityKind ;
    rdfs:label "Maximum Operating Pressure"@en ;
    qudt:abbreviation "MOP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:MeanEnergyImparted a qudt:QuantityKind ;
    rdfs:label "Mean Energy Imparted"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:latexDefinition "To the matter in a given domain, \\(\\bar{\\varepsilon} = R_{in} - R_{out} + \\sum Q\\), where \\(R_{in}\\) is the radiant energy of all those charged and uncharged ionizing particles that enter the domain, \\(R_{out}\\) is the radiant energy of all those charged and uncharged ionizing particles that leave the domain, and \\(\\sum Q\\) is the sum of all changes of the rest energy of nuclei and elementary particles that occur in that domain."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Mean Energy Imparted\", is the average energy imparted to irradiated matter." ;
    qudt:symbol "ε̅" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MeanFreePath a qudt:QuantityKind ;
    rdfs:label "Mean Free Path"@en ;
    qudt:abbreviation "m" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mean_free_path"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mean Free Path\" is the average distance travelled by a moving particle (such as an atom, a molecule, a photon) between successive impacts (collisions) which modify its direction or energy or other particle properties." ;
    qudt:symbol "λ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:MeanLifetime a qudt:QuantityKind ;
    rdfs:label "Mean Lifetime"@en ;
    dcterms:description "The \"Mean Lifetime\" is the average length of time that an element remains in the set of discrete elements in a decaying quantity, \\(N(t)\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exponential_decay"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = \\frac{1}{\\lambda}\\), where \\(\\lambda\\) is the decay constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:MeanLinearRange a qudt:QuantityKind ;
    rdfs:label "Mean Linear Range"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/M03782.html"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mean Linear Range\" is, in a given material, for specified charged particles of a specified energy, the average displacement of the particles before they stop. That is, the mean totl rectified path length travelled by a particle in the course of slowing down to rest (or to some suitable cut-off energy) in a given substance under specified conditions averaged over a group of particles having the same initial energy." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:MeanMassRange a qudt:QuantityKind ;
    rdfs:label "Mean Mass Range"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M2,
        unit:LB-PER-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/M03783.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R_\\rho = R\\rho\\), where \\(R\\) is the mean linear range and \\(\\rho\\) is the mass density of the sample."^^qudt:LatexString ;
    qudt:latexSymbol "\\(R_\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mean Mass Range\" is the mean linear range multiplied by the mass density of the material." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MechanicalEnergy a qudt:QuantityKind ;
    rdfs:label "Mechanical Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mechanical_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mechanical_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = T + V\\), where \\(T\\) is kinetic energy and \\(V\\) is potential energy."^^qudt:LatexString ;
    qudt:plainTextDescription "Mechanical Energy is the sum of potential energy and kinetic energy. It is the energy associated with the motion and position of an object." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MechanicalImpedance a qudt:QuantityKind ;
    rdfs:label "Mechanical Impedance"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MechanicalMobility a qudt:QuantityKind ;
    rdfs:label "Mechanical Mobility"@en ;
    qudt:applicableUnit unit:MOHM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MechanicalSurfaceImpedance a qudt:QuantityKind ;
    rdfs:label "Mechanical surface impedance"@en ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:latexDefinition "\\(Z_m = Z_a A^2\\), where \\(A\\) is the area of the surface considered and \\(Z_a\\) is the acoustic impedance."^^qudt:LatexString ;
    qudt:plainTextDescription "Mechanical surface impedance at a surface, is the complex quotient of the total force on the surface by the component of the average sound particle velocity at the surface in the direction of the force" ;
    qudt:symbol "Z" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:comment "There are various interpretations of MechanicalSurfaceImpedance: Pressure/Velocity - https://apps.dtic.mil/sti/pdfs/ADA315595.pdf, Force / Speed - https://www.wikidata.org/wiki/Q6421317, and (Pressure / Velocity)**0.5 - https://www.sciencedirect.com/topics/engineering/mechanical-impedance. We are seeking a resolution to these differences." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MeltingPoint a qudt:QuantityKind ;
    rdfs:label "Melting Point Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:plainTextDescription "A temperature that is the one at which a substance will change its physical state from a solid to a liquid.  It is also the temperature where the solid and liquid forms of a pure substance can exist in equilibrium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:MicroCanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Micro Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Microcanonical_ensemble"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)#Grand_canonical_partition_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Omega = \\sum_r 1\\), where the sum is over all quantum states consistent with given energy. volume, external fields, and content."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Omega\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Micro Canonical Partition Function\" applies to a micro canonical ensemble, in which the system is allowed to exchange heat with the environment at fixed temperature, volume, and a fixed number of particles." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CanonicalPartitionFunction .

quantitykind:MicrobialFormation a qudt:QuantityKind ;
    rdfs:label "Microbial Formation"@en ;
    qudt:applicableUnit unit:CFU ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MigrationArea a qudt:QuantityKind ;
    rdfs:label "Migration Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/migration+area"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Migration Area\" is the sum of the slowing-down area from fission energy to thermal energy and the diffusion area for thermal neutrons." ;
    qudt:symbol "M^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:MigrationLength a qudt:QuantityKind ;
    rdfs:label "Migration Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/migration+area"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = \\sqrt{M^2}\\), where \\(M^2\\) is the migration area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Migration Length\" is the square root of the migration area." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Mobility a qudt:QuantityKind ;
    rdfs:label "Mobility"@en ;
    qudt:applicableUnit unit:M2-PER-V-SEC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T4D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_mobility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mobility\" characterizes how quickly a particle can move through a metal or semiconductor, when pulled by an electric field. The average drift speed imparted to a charged particle in a medium by an electric field, divided by the electric field strength." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MobilityRatio a qudt:QuantityKind ;
    rdfs:label "Mobility Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://baervan.nmt.edu/research_groups/reservoir_sweep_improvement/pages/clean_up/mobility.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b = \\frac{\\mu_n}{\\mu_p}\\), where \\(\\mu_n\\) and \\(\\mu_p\\) are mobilities for electrons and holes, respectively."^^qudt:LatexString ;
    qudt:plainTextDescription "\"MobilityRatio\" describes permeability of a porous material to a given phase divided by the viscosity of that phase." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ModulusOfAdmittance a qudt:QuantityKind ;
    rdfs:label "Modulus Of Admittance"@en ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absolute_value"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Admittance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-51"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Y = \\left | \\underline{Y} \\right |\\), where \\(\\underline{Y}\\) is admittance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Modulus Of Admittance\" is the absolute value of the quantity \"admittance\"." ;
    qudt:symbol "Y" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Admittance .

quantitykind:ModulusOfElasticity a qudt:QuantityKind ;
    rdfs:label "Modulus of Elasticity"@en ;
    qudt:applicableUnit unit:PA,
        unit:PicoPA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Elastic_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\frac{\\sigma}{\\varepsilon}\\), where \\(\\sigma\\) is the normal stress and \\(\\varepsilon\\) is the linear strain."^^qudt:LatexString ;
    qudt:plainTextDescription "The Modulus of Elasticity is the mathematical description of an object or substance's tendency to be deformed elastically (that is, non-permanently) when a force is applied to it." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ModulusOfImpedance a qudt:QuantityKind ;
    rdfs:label "Modulus Of Impedance"@en ;
    dcterms:description """"Modulus Of Impedance} is the absolute value of the quantity \\textit{impedance". Apparent impedance is defined more generally as

the quotient of rms voltage and rms electric current; it is often denoted by \\(Z\\)."""^^qudt:LatexString ;
    qudt:applicableUnit unit:OHM ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absolute_value"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Electrical_impedance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\left | \\underline{Z} \\right |\\), where \\(\\underline{Z}\\) is impedance."^^qudt:LatexString ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:ModulusOfLinearSubgradeReaction a qudt:QuantityKind ;
    rdfs:label "Modulus of Linear Subgrade Reaction"@en ;
    qudt:applicableUnit unit:N-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/link/ifcmodulusoflinearsubgradereactionmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "Modulus of Linear Subgrade Reaction is a measure for modulus of linear subgrade reaction, which expresses the elastic bedding of a linear structural element per length, such as for a beam. It is typically measured in N/m^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

quantitykind:ModulusOfRotationalSubgradeReaction a qudt:QuantityKind ;
    rdfs:label "Modulus of Rotational Subgrade Reaction"@en ;
    qudt:applicableUnit unit:N-M-PER-M-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/link/ifcmodulusofrotationalsubgradereactionmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "Modulus of Rotational Subgrade Reaction is a measure for modulus of rotational subgrade reaction, which expresses the rotational elastic bedding of a linear structural element per length, such as for a beam. It is typically measured in Nm/(m*rad)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerAngle .

quantitykind:ModulusOfSubgradeReaction a qudt:QuantityKind ;
    rdfs:label "Modulus of Subgrade Reaction"@en ;
    qudt:applicableUnit unit:N-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/link/ifcmodulusofsubgradereactionmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "Modulus of Subgrade Reaction is a geotechnical measure describing interaction between foundation structures and the soil. May also be known as bedding measure. Usually measured in N/m3." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MoistureDiffusivity a qudt:QuantityKind ;
    rdfs:label "Moisture Diffusivity"@en ;
    qudt:applicableUnit unit:BBL_UK_PET-PER-DAY,
        unit:BBL_UK_PET-PER-HR,
        unit:BBL_UK_PET-PER-MIN,
        unit:BBL_UK_PET-PER-SEC,
        unit:BBL_US-PER-DAY,
        unit:BBL_US-PER-MIN,
        unit:BBL_US_PET-PER-HR,
        unit:BBL_US_PET-PER-SEC,
        unit:BU_UK-PER-DAY,
        unit:BU_UK-PER-HR,
        unit:BU_UK-PER-MIN,
        unit:BU_UK-PER-SEC,
        unit:BU_US_DRY-PER-DAY,
        unit:BU_US_DRY-PER-HR,
        unit:BU_US_DRY-PER-MIN,
        unit:BU_US_DRY-PER-SEC,
        unit:CentiM3-PER-DAY,
        unit:CentiM3-PER-HR,
        unit:CentiM3-PER-MIN,
        unit:CentiM3-PER-SEC,
        unit:DeciM3-PER-DAY,
        unit:DeciM3-PER-HR,
        unit:DeciM3-PER-MIN,
        unit:DeciM3-PER-SEC,
        unit:FT3-PER-DAY,
        unit:FT3-PER-HR,
        unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_UK-PER-DAY,
        unit:GAL_UK-PER-HR,
        unit:GAL_UK-PER-MIN,
        unit:GAL_UK-PER-SEC,
        unit:GAL_US-PER-HR,
        unit:GAL_US-PER-SEC,
        unit:GI_UK-PER-DAY,
        unit:GI_UK-PER-HR,
        unit:GI_UK-PER-MIN,
        unit:GI_UK-PER-SEC,
        unit:GI_US-PER-DAY,
        unit:GI_US-PER-HR,
        unit:GI_US-PER-MIN,
        unit:GI_US-PER-SEC,
        unit:IN3-PER-HR,
        unit:IN3-PER-MIN,
        unit:IN3-PER-SEC,
        unit:KiloL-PER-HR,
        unit:L-PER-DAY,
        unit:L-PER-HR,
        unit:L-PER-MIN,
        unit:L-PER-SEC,
        unit:M3-PER-DAY,
        unit:M3-PER-HR,
        unit:M3-PER-MIN,
        unit:M3-PER-SEC,
        unit:MilliL-PER-DAY,
        unit:MilliL-PER-HR,
        unit:MilliL-PER-MIN,
        unit:MilliL-PER-SEC,
        unit:OZ_VOL_UK-PER-DAY,
        unit:OZ_VOL_UK-PER-HR,
        unit:OZ_VOL_UK-PER-MIN,
        unit:OZ_VOL_UK-PER-SEC,
        unit:OZ_VOL_US-PER-DAY,
        unit:OZ_VOL_US-PER-HR,
        unit:OZ_VOL_US-PER-MIN,
        unit:OZ_VOL_US-PER-SEC,
        unit:PINT_UK-PER-DAY,
        unit:PINT_UK-PER-HR,
        unit:PINT_UK-PER-MIN,
        unit:PINT_UK-PER-SEC,
        unit:PINT_US-PER-DAY,
        unit:PINT_US-PER-HR,
        unit:PINT_US-PER-MIN,
        unit:PINT_US-PER-SEC,
        unit:PK_UK-PER-DAY,
        unit:PK_UK-PER-HR,
        unit:PK_UK-PER-MIN,
        unit:PK_UK-PER-SEC,
        unit:PK_US_DRY-PER-DAY,
        unit:PK_US_DRY-PER-HR,
        unit:PK_US_DRY-PER-MIN,
        unit:PK_US_DRY-PER-SEC,
        unit:QT_UK-PER-DAY,
        unit:QT_UK-PER-HR,
        unit:QT_UK-PER-MIN,
        unit:QT_UK-PER-SEC,
        unit:QT_US-PER-DAY,
        unit:QT_US-PER-HR,
        unit:QT_US-PER-MIN,
        unit:QT_US-PER-SEC,
        unit:YD3-PER-DAY,
        unit:YD3-PER-HR,
        unit:YD3-PER-MIN,
        unit:YD3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:symbol "q_V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VolumeFlowRate .

quantitykind:MolalityOfSolute a qudt:QuantityKind ;
    rdfs:label "Molality of Solute"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM,
        unit:MicroMOL-PER-GM ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molality"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b_B = \\frac{n_B}{m_a}\\), where \\(n_B\\) is the amount of substance and \\(m_A\\) is the mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Molality of Solute\" of a solution is defined as the amount of substance of solute divided by the mass in kg of the solvent." ;
    qudt:symbol "b_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AmountOfSubstancePerUnitMass .

quantitykind:MolarAngularMomentum a qudt:QuantityKind ;
    rdfs:label "Molar Angular Momentum"@en ;
    qudt:applicableUnit unit:J-SEC-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-1D0 ;
    qudt:url "http://cvika.grimoar.cz/callen/callen_21.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarConductivity a qudt:QuantityKind ;
    rdfs:label "Molar Conductivity"@en ;
    qudt:applicableUnit unit:S-M2-PER-MOL ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_conductivity"^^xsd:anyURI,
        "http://encyclopedia2.thefreedictionary.com/molar+conductivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Gamma_m = \\frac{x}{c_B}\\), where \\(x\\) is the electrolytic conductivity and \\(c_B\\) is the amount-of-substance concentration."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Gamma_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Conductivity\" is the conductivity of an electrolyte solution divided by the molar concentration of the electrolyte, and so measures the efficiency with which a given electrolyte conducts electricity in solution." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Conductivity .

quantitykind:MolarEntropy a qudt:QuantityKind ;
    rdfs:label "Molar Entropy"@en ;
    qudt:applicableUnit unit:J-PER-MOL-K ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Standard_molar_entropy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_m = \\frac{S}{n}\\), where \\(S\\) is entropy and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Standard Molar Entropy\" is the entropy content of one mole of substance, under standard conditions (not standard temperature and pressure STP)." ;
    qudt:symbol "S_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarFlowRate a qudt:QuantityKind ;
    rdfs:label "Molar Flow Rate"@en ;
    qudt:applicableUnit unit:KiloMOL-PER-MIN,
        unit:KiloMOL-PER-SEC,
        unit:MOL-PER-HR,
        unit:MOL-PER-MIN,
        unit:MOL-PER-SEC ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.sciencedirect.com/topics/engineering/molar-flow-rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Molar Flow Rate is a measure of the amount of substance (the number of molecules) that passes through a given area perpendicular to the flow in a given time. Typically this area is constrained, for example a section through a pipe, but it could also apply to an open flow." ;
    qudt:symbol "q_V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Molar Heat Capacity"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-MOL-DEG_F,
        unit:J-PER-MOL-K,
        unit:KiloCAL-PER-MOL-DEG_C ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://chemistry.about.com/od/chemistryglossary/g/Molar-Heat-Capacity-Definition.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_m = \\frac{C}{n}\\), where \\(C\\) is heat capacity and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Heat Capacity\" is the amount of heat energy required to raise the temperature of 1 mole of a substance. In SI units, molar heat capacity (symbol: cn) is the amount of heat in joules required to raise 1 mole of a substance 1 Kelvin." ;
    qudt:symbol "C_m",
        "cn" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarMass a qudt:QuantityKind ;
    rdfs:label "Molar Mass"@en ;
    dcterms:description "In chemistry, the molar mass M is defined as the mass of a given substance (chemical element or chemical compound) divided by its amount of substance. It is a physical property of a given substance. The base SI unit for molar mass is \\(kg/mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:GM-PER-MOL,
        unit:KiloGM-PER-KiloMOL,
        unit:KiloGM-PER-MOL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molar_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarOpticalRotatoryPower a qudt:QuantityKind ;
    rdfs:label "Molar Optical Rotatory Power"@en ;
    qudt:applicableUnit unit:RAD-M2-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/O04313.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_n = \\alpha \\frac{A}{n}\\), where \\(\\alpha\\) is the angle of optical rotation, and \\(n\\) is the amount of substance of the optically active component in the path of a linearly polarized light beam of cross sectional area \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_n\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Molar Optical Rotatory Power\" Angle of optical rotation divided by the optical path length through the medium and by the amount concentration giving the molar optical rotatory power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarRefractivity a qudt:QuantityKind ;
    rdfs:label "Molar Refractivity"@en ;
    qudt:applicableUnit unit:CentiM3-PER-MOL,
        unit:DeciM3-PER-MOL,
        unit:L-PER-MOL,
        unit:L-PER-MicroMOL,
        unit:M3-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:plainTextDescription "A quantity kind that is a measure of the total polarizability of a mole of substance that depends on the temperature, the index of refraction and the pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarVolume a qudt:QuantityKind ;
    rdfs:label "Molar Volume"@en ;
    dcterms:description "The molar volume, symbol \\(V_m\\), is the volume occupied by one mole of a substance (chemical element or chemical compound) at a given temperature and pressure. It is equal to the molar mass (\\(M\\)) divided by the mass density (\\(\\rho\\)). It has the SI unit cubic metres per mole (\\(m^{1}/mol\\)). For ideal gases, the molar volume is given by the ideal gas equation: this is a good approximation for many common gases at standard temperature and pressure. For crystalline solids, the molar volume can be measured by X-ray crystallography."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM3-PER-MOL,
        unit:DeciM3-PER-MOL,
        unit:L-PER-MOL,
        unit:L-PER-MicroMOL,
        unit:M3-PER-MOL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molar_volume"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V_m = \\frac{V}{n}\\), where \\(V\\) is volume and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:symbol "V_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MoleFraction a qudt:QuantityKind ;
    rdfs:label "Mole Fraction"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mole_fraction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In chemistry, the mole fraction of a component in a mixture is the relative proportion of molecules belonging to the component to those in the mixture, by number of molecules. It is one way of measuring concentration." ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:MolecularConcentration a qudt:QuantityKind ;
    rdfs:label "Molecular Concentration"@en ;
    qudt:abbreviation "m^{-3}" ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimension qudt:DIM_ISO-L-3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_concentration"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B = \\frac{N_B}{V}\\), where \\(N_B\\) is the number of molecules of \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Molecular Concentration\" of substance B  is defined as the number of molecules of B  divided by the volume of the mixture " ;
    qudt:symbol "C_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:MolecularMass a qudt:QuantityKind ;
    rdfs:label "Molecular Mass"@en ;
    qudt:applicableUnit unit:Da ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molecular_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molecular_mass#Relative_molecular_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The molecular mass, or molecular weight of a chemical compound is the mass of one molecule of that compound, relative to the unified atomic mass unit, u. Molecular mass should not be confused with molar mass, which is the mass of one mole of a substance." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MolecularViscosity a qudt:QuantityKind ;
    rdfs:label "Molecular Viscosity"@en ;
    qudt:informativeReference "http://oceanworld.tamu.edu/resources/ocng_textbook/chapter08/chapter08_01.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "Molecules in a fluid close to a solid boundary sometime strike the boundary and transfer momentum to it. Molecules further from the boundary collide with molecules that have struck the boundary, further transferring the change in momentum into the interior of the fluid. This transfer of momentum is molecular viscosity. Molecules, however, travel only micrometers between collisions, and the process is very inefficient for transferring momentum even a few centimeters. Molecular viscosity is important only within a few millimeters of a boundary. The coefficient of molecular viscosity has the same value as the dynamic viscosity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Viscosity .

quantitykind:MomentumPerAngle a qudt:QuantityKind ;
    rdfs:label "Momentum per Angle"@en ;
    qudt:applicableUnit unit:N-SEC-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MorbidityRate a qudt:QuantityKind ;
    rdfs:label "Morbidity Rate"@en ;
    qudt:applicableUnit unit:CASES-PER-KiloINDIV-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:plainTextDescription "Morbidity rate is a measure of the incidence of a disease in a particular population, scaled to the size of that population, per unit of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Incidence .

quantitykind:MortalityRate a qudt:QuantityKind ;
    rdfs:label "Mortality Rate"@en ;
    qudt:applicableUnit unit:DEATHS-PER-KiloINDIV-YR,
        unit:DEATHS-PER-MegaINDIV-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Mortality_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Mortality rate, or death rate, is a measure of the number of deaths (in general, or due to a specific cause) in a particular population, scaled to the size of that population, per unit of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Incidence .

quantitykind:NOMINAL-ASCENT-PROPELLANT-MASS a qudt:QuantityKind ;
    rdfs:label "Nominal Ascent Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The amount of propellant mass within a stage that is available for impulse for use in nominal payload performance prediction. This mass excludes loaded propellant that has been set aside for off- nominal performance behavior (FPR and fuel bias)." ;
    qudt:url "http://elib.dlr.de/68314/1/IAF10-D2.3.1.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:NapierianAbsorbance a qudt:QuantityKind ;
    rdfs:label "Napierian Absorbance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://eilv.cie.co.at/term/798"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A_e(\\lambda) = -ln(\\tau(\\lambda))\\), where \\(\\tau\\) is the transmittance at a given wavelength \\(\\lambda\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Napierian Absorbance is the natural (Napierian) logarithm of the reciprocal of the spectral internal transmittance." ;
    qudt:symbol "A_e, B" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeutronDiffusionCoefficient a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/Diffusion+of+Neutrons"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_n = -\\frac{J_x}{\\frac{\\partial dn}{\\partial dx}}\\), where \\(J_x\\) is the \\(x-component\\) of the particle current and \\(n\\) is the particle number density."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Diffusion Coefficient\" is " ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeutronDiffusionLength a qudt:QuantityKind ;
    rdfs:label "Neutron Diffusion Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "The neutron diffusion length is equivalent to the relaxation length, that is, to the distance, in which the neutron flux decreases by a factor e" ;
    qudt:symbol "L_{r}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:NeutronNumber a qudt:QuantityKind ;
    rdfs:label "Neutron Number"@en ;
    dcterms:description "\"Neutron Number\", symbol \\(N\\), is the number of neutrons in a nuclide. Nuclides with the same value of \\(N\\) but different values of \\(Z\\) are called isotones. \\(N - Z\\) is called the neutron excess number."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Neutron_number"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Count .

quantitykind:NeutronYieldPerAbsorption a qudt:QuantityKind ;
    rdfs:label "Neutron Yield per Absorption"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fission_product_yield"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Neutron Yield per Absorption\" is the average number of fission neutrons, both prompt and delayed, emitted per neutron absorbed in a fissionable nuclide or in a nuclear fuel, as specified." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeutronYieldPerFission a qudt:QuantityKind ;
    rdfs:label "Neutron Yield per Fission"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fission_product_yield"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\nu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Neutron Yield per Fission\" is the average number of fission neutrons, both prompt and delayed, emitted per fission event." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Non-LeakageProbability a qudt:QuantityKind ;
    rdfs:label "Non-Leakage Probability"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Six_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Non-Leakage Probability\" is the probability that a neutron will not escape from the reactor during the slowing-down process or while it diffuses as a thermal neutron" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NonActivePower a qudt:QuantityKind ;
    rdfs:label "Non-active Power"@en ;
    qudt:applicableUnit unit:V-A ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-43"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q^{'} = \\sqrt{{\\left | \\underline{S} \\right |}^2 - P^2}\\), where \\(\\underline{S}\\) is apparent power and \\(P\\) is active power."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Non-active Power\", for a two-terminal element or a two-terminal circuit under periodic conditions, is the quantity equal to the square root of the difference of the squares of the apparent power and the active power." ;
    qudt:symbol "Q'" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ActivePower,
        quantitykind:ApparentPower .

quantitykind:NormalStress a qudt:QuantityKind ;
    rdfs:label "Normal Stress"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stress_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\frac{dF_n}{dA}\\), where \\(dF_n\\) is the normal component of force and \\(dA\\) is the area of the surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Normal stress is defined as the stress resulting from a force acting normal to a body surface. Normal stress can be caused by several loading methods, the most common being axial tension and compression, bending, and hoop stress." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Stress .

quantitykind:NormalizedDimensionlessRatio a qudt:QuantityKind ;
    rdfs:label "Positive Dimensionless Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC2/HTML/link/ifcnormalisedratiomeasure.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "A \"Normalized Dimensionless Ratio\" is a dimensionless ratio ranging from 0.0 to 1.0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:NozzleThroatCrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Cross-sectional Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:plainTextDescription "Cross-sectional area of the nozzle at the throat." ;
    qudt:symbol "A^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:NozzleThroatPressure a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "p^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:NozzleWallsThrustReaction a qudt:QuantityKind ;
    rdfs:label "Nozzle Walls Thrust Reaction"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:symbol "F_R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:NuclearQuadrupoleMoment a qudt:QuantityKind ;
    rdfs:label "Nuclear Quadrupole Moment"@en ;
    qudt:applicableUnit unit:M2,
        unit:NanoM2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_quadrupole_resonance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q = (\\frac{1}{e}) \\int (3z^2 - r^2)\\rho(x, y, z)dV\\), in the quantum state with the nuclear spin in the field direction \\((z)\\), where \\(\\rho(x, y, z)\\) is the nuclear electric charge density, \\(e\\) is the elementary charge, \\(r^2 = x^2 + y^2 + z^2\\), and \\(dV\\) is the volume element \\(dx\\) \\(dy\\) \\(dz\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Nuclear Quadrupole Moment\" is a quantity that characterizes the deviation from spherical symmetry of the electrical charge distribution in an atomic nucleus." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NuclearRadius a qudt:QuantityKind ;
    rdfs:label "Nuclear Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_nucleus"^^xsd:anyURI ;
    qudt:latexDefinition "This quantity is not exactly defined. It is given approximately for nuclei in their ground state only by \\(R = r_0 A^{\\frac{1}{3}}\\), where \\(r_0 \\approx 1.2 x 10^{-15} m\\) and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Nuclear Radius\" is the conventional radius of sphere in which the nuclear matter is included" ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:NuclearSpinQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Spin Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I^2 = \\hbar^2 I(I + 1)\\), where \\(\\hbar\\) is the Planck constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Spin Quantum Number\"  describes the spin (intrinsic angular momentum) of the electron within that orbital, and gives the projection of the spin angular momentum S along the specified axis" ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpinQuantumNumber .

quantitykind:NucleonNumber a qudt:QuantityKind ;
    rdfs:label "Nucleon number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "Number of nucleons in an atomic nucleus.A = Z+N. Nuclides with the same value of A are called isobars." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "mass-number" ;
    skos:broader quantitykind:Count .

quantitykind:NumberOfParticles a qudt:QuantityKind ;
    rdfs:label "Number of Particles"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Number of Particles\", also known as the particle number, of a thermodynamic system, conventionally indicated with the letter N, is the number of constituent particles in that system." ;
    qudt:symbol "N_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OlfactoryThreshold a qudt:QuantityKind ;
    rdfs:label "Olfactory Threshold"@en ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Odor_detection_threshold"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_o}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Olfactory Threshold\" are thresholds for the concentrations of various classes of smell that can be detected." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Concentration .

quantitykind:OrbitalAngularMomentumPerUnitMass a qudt:QuantityKind ;
    rdfs:label "Orbital Angular Momentum per Unit Mass"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:plainTextDescription "Angular momentum of the orbit per unit mass of the vehicle" ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OrbitalRadialDistance a qudt:QuantityKind ;
    rdfs:label "Orbital Radial Distance"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:OrderOfReflection a qudt:QuantityKind ;
    rdfs:label "Order of Reflection"@en ;
    dcterms:description "\"Order of Reflection\" is \\(n\\) in the Bragg's Law equation."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.answers.com/topic/order-of-reflection"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OsmoticCoefficient a qudt:QuantityKind ;
    rdfs:label "Osmotic Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Osmotic_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = -(M_A\\sum b_B)^{-1} \\ln a_A\\), where \\(M_A\\) is the molar mass of the solvent \\(A\\), \\(\\sum\\) denotes summation over all the solutes, \\(b_B\\) is the molality of solute \\(B\\), and \\(a_A\\) is the activity of solvent \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Osmotic Coefficient\" is a quantity which characterises the deviation of a solvent from ideal behavior." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OsmoticPressure a qudt:QuantityKind ;
    rdfs:label "Osmotic Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Osmotic_pressure"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = -(M_A\\sum b_B)^{-1} \\ln a_A\\), where \\(M_A\\) is the molar mass of the solvent \\(A\\), \\(\\sum\\) denotes summation over all the solutes, \\(b_B\\) is the molality of solute \\(B\\), and \\(a_A\\) is the activity of solvent \\(A\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Osmotic Pressure\" is the pressure which needs to be applied to a solution to prevent the inward flow of water across a semipermeable membrane." ;
    qudt:symbol "Π" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:OverRangeDistance a qudt:QuantityKind ;
    rdfs:label "Over-range distance"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Additional distance traveled by a rocket because Of excessive initial velocity." ;
    qudt:symbol "s_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PREDICTED-MASS a qudt:QuantityKind ;
    rdfs:label "Predicted Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Sum of the basic mass and the MGA. Current prediction of the final mass based on the current requirements and design." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:PRODUCT-OF-INERTIA_X a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the X axis"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body?s principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PRODUCT-OF-INERTIA_Y a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the Y axis"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "A measure of a body?s dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body's principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PRODUCT-OF-INERTIA_Z a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the Z axis"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body's principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PackingFraction a qudt:QuantityKind ;
    rdfs:label "Packing Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_packing_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f = \\frac{\\Delta_r}{A}\\), where \\(\\Delta_r\\) is the relative mass excess and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Packing Fraction\" is the fraction of volume in a crystal structure that is occupied by atoms." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PartialPressure a qudt:QuantityKind ;
    rdfs:label "Partial Pressure"@en ;
    qudt:abbreviation "pa" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partial_pressure"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p_B = x_B \\cdot p\\), where \\(x_B\\) is the amount-of-substance fraction of substance \\(B\\) and \\(p\\) is the total pressure."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Partial Pressure\" is the pressure that the gas would have if it alone occupied the volume of the mixture at the same temperature." ;
    qudt:symbol "p_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ParticleCurrent a qudt:QuantityKind ;
    rdfs:label "Particle Current"@en ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\int J \\cdot e_n dA = \\frac{dN}{dt}\\), where \\(e_ndA\\) is the vector surface element, \\(N\\) is the net number of particles passing over a surface, and \\(dt\\) describes the time interval."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Current\" can be used to describe the net number of particles passing through a surface in an infinitesimal time interval." ;
    qudt:symbol "J",
        "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Frequency .

quantitykind:ParticleFluence a qudt:QuantityKind ;
    rdfs:label "Particle Fluence"@en ;
    qudt:applicableUnit unit:NUM-PER-HA,
        unit:NUM-PER-KiloM2,
        unit:NUM-PER-M2,
        unit:PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi = \\frac{dN}{dA}\\), where \\(dN\\) describes the number of particles incident on a small spherical domain at a given point in space, and \\(dA\\) describes the cross-sectional area of that domain."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Fluence\" is the total number of particles that intersect a unit area in a specific time interval of interest, and has units of m–2 (number of particles per meter squared)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ParticleFluenceRate a qudt:QuantityKind ;
    rdfs:label "Particle Fluence Rate"@en ;
    qudt:applicableUnit unit:PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.encyclo.co.uk/define/Fluence%20Rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\theta = \\frac{d\\Phi}{dt}\\), where \\(d\\Phi\\) is the increment of the particle fluence during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Fluence Rate\" can be defined as the total number of particles (typically Gamma Ray Photons ) crossing over a sphere of unit cross section which surrounds a Point Source of Ionising Radiation." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ParticleNumberDensity a qudt:QuantityKind ;
    rdfs:label "Particle Number Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_number#Particle_number_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{N}{V}\\), where \\(N\\) is the number of particles in the 3D domain with the volume \\(V\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Particle Number Density\" is obtained by dividing the particle number of a system by its volume." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:ParticlePositionVector a qudt:QuantityKind ;
    rdfs:label "Particle Position Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Particle Position Vector\" is the position vector of a particle." ;
    qudt:symbol "r, R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ParticleSourceDensity a qudt:QuantityKind ;
    rdfs:label "Particle Source Density"@en ;
    qudt:applicableUnit unit:PER-M3-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Particle Source Density\" is the rate of production of particles in a 3D domain divided by the volume of that element." ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PathLength a qudt:QuantityKind ;
    rdfs:label "Path Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Path_length"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"PathLength\" is " ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PayloadMass a qudt:QuantityKind ;
    rdfs:label "Payload Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Payload mass is the mass of the payload carried by the craft. In a multistage spacecraft the payload mass of the last stage is the mass of the payload and the payload masses of the other stages are considered to be the gross masses of the next stages." ;
    qudt:symbol "M_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:PayloadRatio a qudt:QuantityKind ;
    rdfs:label "Payload Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The payload ratio is defined as the mass of the payload divided by the empty mass of the structure. Because of the extra cost involved in staging rockets, given the choice, it's often more economic to use few stages with a small payload ratio rather than more stages each with a high payload ratio." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:PeltierCoefficient a qudt:QuantityKind ;
    rdfs:label "Peltier Coefficient"@en ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermoelectric_effect"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Pi_{ab}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Peltier Coefficient\" represents how much heat current is carried per unit charge through a given material. It is the heat power developed at a junction, divided by the electric current flowing from substance a to substance b." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Period a qudt:QuantityKind ;
    rdfs:label "Period"@en ;
    qudt:applicableUnit unit:SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "Duration of one cycle of a periodic phenomenon." ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PermeabilityRatio a qudt:QuantityKind ;
    rdfs:label "Permeability Ratio"@en ;
    qudt:applicableUnit unit:PERMEABILITY_REL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Relative_permeability"^^xsd:anyURI ;
    qudt:plainTextDescription "The ratio of the effective permeability of a porous phase to the absolute permeability." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Permeance a qudt:QuantityKind ;
    rdfs:label "Permeance"@en ;
    qudt:applicableUnit unit:NanoH ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Lambda = \\frac{1}{R_m}\\), where \\(R_m\\) is reluctance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Permeance\" is the inverse of reluctance. Permeance is a measure of the quantity of flux for a number of current-turns in magnetic circuit. A magnetic circuit almost acts as though the flux is \"conducted\", therefore permeance is larger for large cross sections of a material and smaller for longer lengths. This concept is analogous to electrical conductance in the electric circuit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Reluctance .

quantitykind:PermittivityRatio a qudt:QuantityKind ;
    rdfs:label "Permittivity Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:expression "\\(rel-permittivity\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\epsilon_r = \\epsilon / \\epsilon_0\\), where \\(\\epsilon\\) is permittivity and \\(\\epsilon_0\\) is the electric constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\epsilon_r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Permittivity Ratio\" is the ratio of permittivity to the permittivity of a vacuum." ;
    qudt:qkdvDenominator qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:qkdvNumerator qkdv:A0E2L-3I0M-1H0T4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Permittivity ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:PhaseCoefficient a qudt:QuantityKind ;
    rdfs:label "Phase coefficient"@en ;
    dcterms:description "The phase coefficient is the amount of phase shift that occurs as the wave travels one meter. Increasing the loss of the material, via the manipulation of the material's conductivity, will decrease the wavelength (increase \\(\\beta\\)) and increase the attenuation coefficient (increase \\(\\alpha\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "If \\(F(x) = Ae^{-\\alpha x} \\cos{[\\beta (x - x_0)]}\\), then \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhaseDifference a qudt:QuantityKind ;
    rdfs:label "Phase Difference"@en ;
    dcterms:description "\"Phase Difference} is the difference, expressed in electrical degrees or time, between two waves having the same frequency and referenced to the same point in time. Two oscillators that have the same frequency and different phases have a phase difference, and the oscillators are said to be out of phase with each other. The amount by which such oscillators are out of step with each other can be expressed in degrees from \\SI{0}{\\degree} to \\SI{360}{\\degree}, or in radians from 0 to \\num{2\\pi\". If the phase difference is 180 degrees (\\(\\pi\\) radians), then the two oscillators are said to be in antiphase."^^qudt:LatexString ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:expression "\\(phase-difference\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Phase_(waves)#Phase_difference"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=103-07-06"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = \\varphi_u - \\varphi_i\\), where \\(\\varphi_u\\) is the initial phase of the voltage and \\(\\varphi_i\\) is the initial phase of the electric current."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:PhaseSpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Phase speed of sound"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c = \\frac{\\omega}{k} = \\lambda f\\), where \\(\\omega\\) is the angular frequency, \\(k\\) is angular wavenumber, \\(\\lambda\\) is the wavelength, and \\(f\\) is the frequency."^^qudt:LatexString ;
    qudt:plainTextDescription "In a dispersive medium sound speed is a function of sound frequency, through the dispersion relation. The spatial and temporal distribution of a propagating disturbance will continually change. Each frequency component propagates at its own Phase Velocity of Sound." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpeedOfSound .

quantitykind:PhononMeanFreePath a qudt:QuantityKind ;
    rdfs:label "Phonon Mean Free Path"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Phonon Mean Free Path\" is the mean free path of phonons." ;
    qudt:symbol "l_{ph}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PhotoThresholdOfAwarenessFunction a qudt:QuantityKind ;
    rdfs:label "Photo Threshold of Awareness Function"@en ;
    dcterms:description "\"Photo Threshold of Awareness Function\" is the ability of the human eye to detect a light that results in a \\(1^o\\) radial angle at the eye with a given duration (temporal summation)."^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotonIntensity a qudt:QuantityKind ;
    rdfs:label "Photon Intensity"@en ;
    dcterms:description "A measure of flux of photons per solid angle"^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-SEC-SR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Photon_counting"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotonRadiance a qudt:QuantityKind ;
    rdfs:label "Photon Radiance"@en ;
    dcterms:description "A measure of flux of photons per surface area per solid angle"^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-SEC-M2-SR ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Photon_counting"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotosyntheticPhotonFlux a qudt:QuantityKind ;
    rdfs:label "Photosynthetic Photon Flux" ;
    qudt:applicableUnit unit:MicroMOL-PER-SEC ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.dormgrow.com/par/"^^xsd:anyURI ;
    qudt:plainTextDescription "Photosynthetic Photon Flux (PPF) is a measurement of the total number of photons emitted by a light source each second within the PAR wavelength range and is measured in μmol/s. Lighting manufacturers may specify their grow light products in terms of PPF. It can be considered as analogous to measuring the luminous flux (lumens) of visible light which would typically require the use of an integrating sphere or a goniometer system with spectroradiometer sensor." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PPF" ;
    prov:wasDerivedFrom <https://www.gigahertz-optik.com/en-us/service-and-support/knowledge-base/measurement-of-par/#WasistPAR> .

quantitykind:PhotosyntheticPhotonFluxDensity a qudt:QuantityKind ;
    rdfs:label "Photosynthetic Photon Flux Density" ;
    qudt:applicableUnit unit:MicroMOL-PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.gigahertz-optik.com/en-us/service-and-support/knowledge-base/measurement-of-par/"^^xsd:anyURI ;
    qudt:plainTextDescription "Photosynthetically Active Radiation are the wavelengths of light within the visible range of 400 to 700 nanometers (nm) that are critical for photosynthesis. PPFD measures the amount of PAR light (photons) that arrive at the plant’s surface each second. The PPFD is measured at various distances with a Full-spectrum Quantum Sensor, also known as a PAR meter. Natural sunlight has a PAR value of 900-1500μMol/m2/s when the sun is directly overhead. For a grow light to be effective, it should have PAR values of 500-1500 μMol/m2/s." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PPFD" ;
    prov:wasDerivedFrom <https://www.dormgrow.com/par> .

quantitykind:PlanarForce a qudt:QuantityKind ;
    rdfs:label "Flächenlast"@de,
        "Planar Force"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC1/HTML/schema/ifcmeasureresource/lexical/ifcplanarforcemeasure.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "Another name for Force Per Area, used by the Industry Foundation Classes (IFC) standard." ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Pressure"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

quantitykind:PoissonRatio a qudt:QuantityKind ;
    rdfs:label "Poisson Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Poisson%27s_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{\\Delta \\delta}{\\Delta l}\\), where \\(\\Delta \\delta\\) is the lateral contraction and \\(\\Delta l\\) is the elongation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Poisson Ratio is the negative ratio of transverse to axial strain. In fact, when a sample object is stretched (or squeezed), to an extension (or contraction) in the direction of the applied load, it corresponds a contraction (or extension) in a direction perpendicular to the applied load. The ratio between these two quantities is the Poisson's ratio." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PolarMomentOfInertia a qudt:QuantityKind ;
    rdfs:label "Polar moment of inertia"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The polar moment of inertia is a quantity used to predict an object's ability to resist torsion, in objects (or segments of objects) with an invariant circular cross-section and no significant warping or out-of-plane deformation. It is used to calculate the angular displacement of an object subjected to a torque. It is analogous to the area moment of inertia, which characterizes an object's ability to resist bending. " ;
    qudt:symbol "J_{zz}" ;
    qudt:url "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:Polarizability a qudt:QuantityKind ;
    rdfs:label "Polarizability"@en ;
    dcterms:description "\"Polarizability\" is the relative tendency of a charge distribution, like the electron cloud of an atom or molecule, to be distorted from its normal shape by an external electric field, which may be caused by the presence of a nearby ion or dipole. The electronic polarizability \\(\\alpha\\) is defined as the ratio of the induced dipole moment of an atom to the electric field that produces this dipole moment. Polarizability is often a scalar valued quantity, however in the general case it is tensor-valued."^^qudt:LatexString ;
    qudt:applicableUnit unit:ANGSTROM3,
        unit:C-M2-PER-V,
        unit:C2-M-PER-J ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Polarizability"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L0I0M-1H0T4D0 ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PolarizationField a qudt:QuantityKind ;
    rdfs:label "Polarization Field"@en ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:plainTextDescription "The Polarization Field is the vector field that expresses the density of permanent or induced electric dipole moments in a dielectric material. The polarization vector P is defined as the ratio of electric dipole moment per unit volume." ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:Population a qudt:QuantityKind ;
    rdfs:label "Population"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Population"^^xsd:anyURI ;
    qudt:plainTextDescription "Population typically refers to the number of people in a single area, whether it be a city or town, region, country, continent, or the world, but can also represent the number of any kind of entity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Count .

quantitykind:PositiveDimensionlessRatio a qudt:QuantityKind ;
    rdfs:label "Positive Dimensionless Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC2/HTML/link/ifcpositiveratiomeasure.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "A \"Positive Dimensionless Ratio\" is a dimensionless ratio that is greater than zero" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:PositiveLength a qudt:QuantityKind ;
    rdfs:label "Positive Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "\"PositiveLength\" is a measure of length strictly greater than zero." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NonNegativeLength .

quantitykind:PositivePlaneAngle a qudt:QuantityKind ;
    rdfs:label "Positive Plane Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thefreedictionary.com/plane+angle"^^xsd:anyURI ;
    qudt:plainTextDescription "A \"PositivePlaneAngle\" is a plane angle strictly greater than zero." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PlaneAngle .

quantitykind:PotentialEnergy a qudt:QuantityKind ;
    rdfs:label "Potential Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Potential_energy"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_ISO-L2MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Potential_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V = -\\int F \\cdot dr\\), where \\(F\\) is a conservative force and \\(R\\) is a position vector."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy possessed by a body by virtue of its position in a gravity field in contrast with kinetic energy, that possessed by virtue of its motion." ;
    qudt:symbol "PE",
        "U" ;
    qudt:url "http://en.wikipedia.org/wiki/Potential_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:PowerArea a qudt:QuantityKind ;
    rdfs:label "Power Area"@en ;
    qudt:applicableUnit unit:HectoPA-L-PER-SEC,
        unit:HectoPA-M3-PER-SEC,
        unit:W-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerAreaPerSolidAngle a qudt:QuantityKind ;
    rdfs:label "Power Area per Solid Angle"@en ;
    qudt:applicableUnit unit:W-M2-PER-SR ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerPerAreaQuarticTemperature a qudt:QuantityKind ;
    rdfs:label "Power per area quartic temperature"@en ;
    qudt:applicableUnit unit:W-PER-M2-K4 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-4T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Power Per Electric Charge"@en ;
    qudt:applicableUnit unit:MilliV-PER-MIN,
        unit:V-PER-MicroSEC,
        unit:V-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-4D0 ;
    qudt:plainTextDescription "\"Power Per Electric Charge\" is the amount of energy generated by a unit of electric charge." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PoyntingVector a qudt:QuantityKind ;
    rdfs:label "Poynting Vector"@en ;
    qudt:applicableUnit unit:W-PER-M2 ;
    qudt:expression "\\(poynting-vector\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-66"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{S} = \\mathbf{E}  \\times \\mathbf{H} \\), where \\(\\mathbf{E}\\) is electric field strength and \\mathbf{H}  is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{S} \\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Poynting Vector} is the vector product of the electric field strength \\mathbf{E} and the magnetic field strength \\mathbf{H\" of the electromagnetic field at a given point. The flux of the Poynting vector through a closed surface is equal to the electromagnetic power passing through this surface. For a periodic electromagnetic field, the time average of the Poynting vector is a vector of which, with certain reservations, the direction may be considered as being the direction of propagation of electromagnetic energy and the magnitude considered as being the average electromagnetic power flux density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressureBurningRateConstant a qudt:QuantityKind ;
    rdfs:label "Pressure Burning Rate Constant"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:PressureBurningRateIndex a qudt:QuantityKind ;
    rdfs:label "Pressure Burning Rate Index"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:PressureCoefficient a qudt:QuantityKind ;
    rdfs:label "Pressure Coefficient"@en ;
    qudt:applicableUnit unit:BAR-PER-K,
        unit:HectoPA-PER-K,
        unit:KiloPA-PER-K,
        unit:MegaPA-PER-K,
        unit:PA-PER-K ;
    qudt:expression "\\(pres-coef\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\beta = \\left (\\frac{\\partial p}{\\partial T} \\right )_V\\), where \\(p\\) is \\(pressure\\),  \\(T\\) is thermodynamic temperature and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressureLossPerLength a qudt:QuantityKind ;
    rdfs:label "Pressure Loss per Length"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M2-SEC2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Friction_loss"^^xsd:anyURI ;
    qudt:plaintextDescription "\"Pressure Loss per Length\" refers to the power lost in overcoming the friction between two moving surfaces. Also referred to as \"Friction Loss\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressurePercentage a qudt:QuantityKind ;
    rdfs:label "Pressure Percentage"@en ;
    dcterms:isReplacedBy quantitykind:PressureRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Prevalence a qudt:QuantityKind ;
    rdfs:label "Prevalence" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Prevalence"^^xsd:anyURI ;
    qudt:plainTextDescription "In epidemiology, prevalence is the proportion of a particular population found to be affected by a medical condition (typically a disease or a risk factor such as smoking or seatbelt use) at a specific time. (Wikipedia)" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:PropagationCoefficient a qudt:QuantityKind ;
    rdfs:label "Propagation coefficient"@en ;
    dcterms:description "The propagation constant, symbol \\(\\gamma\\), for a given system is defined by the ratio of the amplitude at the source of the wave to the amplitude at some distance x."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Propagation_constant"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\alpha + j\\beta\\), where \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PropellantBurnRate a qudt:QuantityKind ;
    rdfs:label "Propellant Burn Rate"@en ;
    qudt:applicableUnit unit:IN-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:BurnRate .

quantitykind:PropellantMeanBulkTemperature a qudt:QuantityKind ;
    rdfs:label "Propellant Mean Bulk Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PMBT" ;
    skos:broader quantitykind:PropellantTemperature .

quantitykind:QuarticElectricDipoleMomentPerCubicEnergy a qudt:QuantityKind ;
    rdfs:label "Quartic Electric Dipole Moment per Cubic Energy"@en ;
    dcterms:isReplacedBy quantitykind:ElectricDipoleMoment_QuarticPerEnergy_Cubic ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E4L-2I0M-3H0T10D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RESERVE-MASS a qudt:QuantityKind ;
    rdfs:label "Reserve Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A quantity of mass held by Program/project management to mitigate the risk of over-predicted performance estimates, under predicted mass estimates, and future operational and mission specific requirements (program mass reserve, manager's mass reserve, launch window reserve, performance reserve, etc.)." ;
    qudt:symbol "M_{E}" ;
    qudt:url "http://eaton.math.rpi.edu/CSUMS/Papers/EcoEnergy/koojimanconserve.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:RF-Power a qudt:QuantityKind ;
    rdfs:label "RF-Power Level"@en ;
    qudt:applicableUnit unit:KiloV-PER-M,
        unit:MegaV-PER-M,
        unit:MicroV-PER-M,
        unit:MilliV-PER-M,
        unit:V-PER-CentiM,
        unit:V-PER-IN,
        unit:V-PER-M,
        unit:V-PER-MilliM,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "https://www.analog.com/en/technical-articles/measurement-control-rf-power-parti.html"^^xsd:anyURI ;
    qudt:plainTextDescription "Radio-Frequency Power. Power level of electromagnetic waves alternating at the frequency of radio waves (up to 10^10 Hz)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SignalStrength .

quantitykind:RadialDistance a qudt:QuantityKind ;
    rdfs:label "Radial Distance"@en ;
    dcterms:description "In classical geometry, the \"Radial Distance\" is a coordinate in polar coordinate systems (r, \\(\\theta\\)). Basically the radial distance is the scalar Euclidean distance between a point and the origin of the system of coordinates."^^qudt:LatexString ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radial_distance_(geometry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\sqrt{r_1^2 + r_2^2 -2r_1r_2\\cos{(\\theta_1 - \\theta_2)}}\\), where \\(P_1\\) and \\(P_2\\) are two points with polar coordinates \\((r_1, \\theta_1)\\) and \\((r_2, \\theta_2)\\), respectively, and \\(d\\) is the distance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(r_Q, \\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:RadianceFactor a qudt:QuantityKind ;
    rdfs:label "Radiance Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.encyclo.co.uk/define/radiance%20factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\beta = \\frac{L_n}{L_d}\\), where \\(L_n\\) is the radiance of a surface element in a given direction and \\(L_d\\) is the radiance of the perfect reflecting or transmitting diffuser identically irradiated and viewed. Reflectance factor is equivalent to radiance factor or luminance factor (when the cone angle is infinitely small, and is equivalent to reflectance when the cone angle is \\(2π sr\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Radiance Factor is the ratio of the radiance of the surface element in the given direction to that of a perfect reflecting or transmitting diffuser identically irradiated unit." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RadiantEmmitance a qudt:QuantityKind ;
    rdfs:label "Radiant Emmitance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Irradiance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the radiant flux leaving the element of the surface area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Irradiance and Radiant Emittance are radiometry terms for the power per unit area of electromagnetic radiation at a surface. \"Irradiance\" is used when the electromagnetic radiation is incident on the surface. \"Radiant emmitance\" (or \"radiant exitance\") is used when the radiation is emerging from the surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:RadiantEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Radiant Energy Density"@en ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_energy_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31892"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w\\), \\(\\rho = \\frac{dQ}{dV}\\), where \\(dQ\\) is the radiant energy in an elementary three-dimensional domain, and \\(dV\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(w, \\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Radiant Energy Density\", or radiant power, is the radiant energy per unit volume." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RadiantExposure a qudt:QuantityKind ;
    rdfs:label "Radiant Exposure"@en ;
    qudt:abbreviation "J-PER-CM2" ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:KiloW-HR-PER-M2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://omlc.ogi.edu/education/ece532/class1/irradiance.html"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = \\int_{0}^{\\Delta t}{E}{dt}\\), where \\(E\\) is the irradiance acting during the time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant exposure is a measure of the total radiant energy incident on a surface per unit area; equal to the integral over time of the radiant flux density. Also known as exposure." ;
    qudt:symbol "H_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerArea .

quantitykind:RadiantFluence a qudt:QuantityKind ;
    rdfs:label "Radiant Fluence"@en ;
    qudt:applicableUnit unit:J-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:latexDefinition "\\(H_0 = \\int_{0}^{\\Delta t}{E_0}{dt}\\), where \\(E_0\\) is the spherical radiance acting during time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant fluence rate, or spherical irradiance, is equal to the total radiant flux incident on a small sphere divided by the area of the diametrical cross-section of the sphere." ;
    qudt:symbol "H_e,0" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RadiantFluenceRate a qudt:QuantityKind ;
    rdfs:label "Radiant Fluence Rate"@en ;
    qudt:abbreviation "M-PER-T3" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/FT07376.html"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E_0 = \\int{L}{d\\Omega}\\), where \\(d\\Omega\\) is the solid angle of each elementary beam passing through the given point and \\(L\\) its radiance at that point in the direction of the beam."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant fluence rate, or spherical irradiance, is equal to the total radiant flux incident on a small sphere divided by the area of the diametrical cross-section of the sphere." ;
    qudt:symbol "E_e,0" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:RadiantFlux a qudt:QuantityKind ;
    rdfs:label "Radiant Flux"@en ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_flux"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi = \\frac{dQ}{dt}\\), where \\(dQ\\) is the radiant energy emitted, transferred, or received during a time interval of the duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant Flux, or radiant power, is the measure of the total power of electromagnetic radiation (including infrared, ultraviolet, and visible light). The power may be the total emitted from a source, or the total landing on a particular surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:RadiantIntensity a qudt:QuantityKind ;
    rdfs:label "Radiant Intensity"@en ;
    qudt:applicableUnit unit:W-PER-SR ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_intensity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = \\frac{d\\Phi}{d\\Omega}\\), where \\(d\\Phi\\) is the radiant flux leaving the source in an elementary cone containing the given direction with the solid angle \\(d\\Omega\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant Intensity is a measure of the intensity of electromagnetic radiation. It is defined as power per unit solid angle." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RadiativeHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Radiative Heat Transfer"@en ;
    dcterms:description "\"Radiative Heat Transfer\" is proportional to \\((T_1^4 - T_2^4)\\) and area of the surface, where \\(T_1\\) and \\(T_2\\) are thermodynamic temperatures of two black surfaces, for non totally black surfaces an additional factor less than 1 is needed."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-MIN,
        unit:BTU_IT-PER-SEC,
        unit:BTU_TH-PER-HR,
        unit:BTU_TH-PER-MIN,
        unit:BTU_TH-PER-SEC,
        unit:CAL_TH-PER-MIN,
        unit:CAL_TH-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloBTU_TH-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloCAL_TH-PER-HR,
        unit:KiloCAL_TH-PER-MIN,
        unit:KiloCAL_TH-PER-SEC,
        unit:MegaBTU_IT-PER-HR,
        unit:THM_US-PER-HR,
        unit:TON_FG ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_transfer#Radiation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_r\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:HeatFlowRate .

quantitykind:Radiosity a qudt:QuantityKind ;
    rdfs:label "Radiosity"@en ;
    qudt:applicableUnit unit:J-PER-CentiM2-DAY ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:plainTextDescription "Radiosity is the total emitted and reflected radiation leaving a surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:RadiusOfCurvature a qudt:QuantityKind ;
    rdfs:label "Radius of Curvature"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radius_of_curvature_(mathematics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In geometry, the \"Radius of Curvature\", R, of a curve at a point is a measure of the radius of the circular arc which best approximates the curve at that point." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:RatioOfSpecificHeatCapacities a qudt:QuantityKind ;
    rdfs:label "Ratio of Specific Heat Capacities"@en ;
    dcterms:description "The specific heat ratio of a gas is the ratio of the specific heat at constant pressure, \\(c_p\\), to the specific heat at constant volume, \\(c_V\\). It is sometimes referred to as the \"adiabatic index} or the \\textit{heat capacity ratio} or the \\textit{isentropic expansion factor} or the \\textit{adiabatic exponent} or the \\textit{isentropic exponent\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Specific_heat_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = c_p / c_V\\), where \\(c\\) is the specific heat of a gas, \\(c_p\\) is specific heat capacity at constant pressure, \\(c_V\\) is specific heat capacity at constant volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString,
        "\\(\\varkappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IsentropicExponent .

quantitykind:ReactionEnergy a qudt:QuantityKind ;
    rdfs:label "Reaction Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_reaction"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Reaction Energy\" in a nuclear reaction, is the sum of the kinetic energies and photon energies of the reaction products minus the sum of the kinetic and photon energies of the reactants." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:Reactivity a qudt:QuantityKind ;
    rdfs:label "Reactivity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_chain_reaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{k_{eff} - 1}{k_{eff}}\\), where \\(k_{eff}\\) is the effective multiplication factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reactivity\" characterizes the deflection of reactor from the critical state." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ReactorTimeConstant a qudt:QuantityKind ;
    rdfs:label "Reactor Time Constant"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://www.euronuclear.org/info/encyclopedia/r/reactor-time-constant.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Reactor Time Constant\", also called the reactor period, is the time during which the neutron flux density in a reactor changes by the factor e = 2.718 (e: basis of natural logarithms), when the neutron flux density increases or decreases exponentially." ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:RecombinationCoefficient a qudt:QuantityKind ;
    rdfs:label "Recombination Coefficient"@en ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/recombination+coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(-\\frac{dn^+}{dt} = -\\frac{dn^-}{dt} = an^+n^-\\), where \\(n^+\\) and \\(n^-\\) are the ion number densities of positive and negative ions, respectively, recombined during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Recombination Coefficient\" is the rate of recombination of positive ions with electrons or negative ions in a gas, per unit volume, divided by the product of the number of positive ions per unit volume and the number of electrons or negative ions per unit volume." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Refectance a qudt:QuantityKind ;
    rdfs:label "Refectance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reflectivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{\\Phi_t}{\\Phi_m}\\), where \\(\\Phi_t\\) is the reflected radiant flux or the reflected luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Refectance and reflectivity generally refer to the fraction of incident electromagnetic power that is reflected at an interface, while the term \"reflection coefficient\" is used for the fraction of electric field reflected. Reflectance is always a positive real number." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Reflectance a qudt:QuantityKind ;
    rdfs:label "Reflectance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissipation_factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r= \\frac{P_r}{P_i}\\), where \\(P_r\\) is the reflected sound power, and \\(P_i\\) is the incident sound power."^^qudt:LatexString ;
    qudt:plainTextDescription "Reflectance, or reflection factor for sound power, is the ratio of reflected sound power to incident sound power." ;
    qudt:symbol "r" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ReflectanceFactor a qudt:QuantityKind ;
    rdfs:label "Reflectance Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thefreedictionary.com/reflectance+factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R = \\frac{\\Phi_n}{\\Phi_d}\\), where \\(\\Phi_n\\) is the radiant flux or luminous flux reflected in the directions delimited by a given cone and \\(\\Phi_d\\) is the flux reflected in the same directions by an identically radiated diffuser of reflectance equal to 1."^^qudt:LatexString ;
    qudt:plainTextDescription "Reflectance Factor is the measure of the ability of a surface to reflect light or other electromagnetic radiation, equal to the ratio of the reflected flux to the incident flux." ;
    qudt:symbol "R" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RefractiveIndex a qudt:QuantityKind ;
    rdfs:label "Refractive index"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Refractive_index"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{c_0}{c}\\), where \\(c_0\\) is the speed of light in vacuum, and \\(c\\) is the speed of light in the medium."^^qudt:LatexString ;
    qudt:plainTextDescription "\"refractive index\" or index of refraction n of a substance (optical medium) is a dimensionless number that describes how light, or any other radiation, propagates through that medium." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeAtomicMass a qudt:QuantityKind ;
    rdfs:label "Relative Atomic Mass"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_atomic_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Relative Atomic Mass \" is a dimensionless physical quantity, the ratio of the average mass of atoms of an element (from a given source) to 1/12 of the mass of an atom of carbon-12 (known as the unified atomic mass unit)" ;
    qudt:symbol "A_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelativeLuminousFlux a qudt:QuantityKind ;
    rdfs:label "Relative Luminous Flux"@en ;
    dcterms:isReplacedBy quantitykind:LuminousFluxRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_flux"^^xsd:anyURI ;
    qudt:plainTextDescription "Relative Luminous Flux or Relative Luminous Power is the measure of the perceived power of light. It differs from radiant flux, the measure of the total power of light emitted, in that luminous flux is adjusted to reflect the varying sensitivity of the human eye to different wavelengths of light. It is expressed as a percentage or fraction of full power." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelativeMassConcentrationOfVapour a qudt:QuantityKind ;
    rdfs:label "Relative Mass Concentration of Vapour"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = v / v_{sat}\\), where \\(v\\) is mass concentration of water vapour,  \\(v_{sat}\\) is its mass concentration of water vapour at saturation (at the same temperature). For normal cases, the relative partial pressure may be assumed to be equal to relative mass concentration of vapour."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relative Mass Concentration of Vapour\" is one of a number of \"Relative Concentration\" quantities  defined by ISO 8000." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:RelativePartialPressure .

quantitykind:RelativeMassDefect a qudt:QuantityKind ;
    rdfs:label "Relative Mass Defect"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Binding_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B_r = \\frac{B}{m_u}\\), where \\(B\\) is the mass defect and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Relative Mass Defect\" is the mass defect between the monoisotopic mass of an element and the mass of its A + 1 or its A + 2 isotopic cluster." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "B_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassDefect ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelativeMassDensity a qudt:QuantityKind ;
    rdfs:label "Relative Mass Density"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\frac{\\rho}{\\rho_0}\\), where \\(\\rho\\) is mass density of a substance and \\(\\rho_0\\) is the mass density of a reference substance under conditions that should be specified for both substances."^^qudt:LatexString ;
    qudt:plainTextDescription "Relative density, or specific gravity, is the ratio of the density (mass of a unit volume) of a substance to the density of a given reference material." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMassExcess a qudt:QuantityKind ;
    rdfs:label "Relative Mass Excess"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_excess"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta_r = \\frac{\\Delta}{m_u}\\), where \\(\\Delta\\) is the mass excess and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta_r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Relative Mass Excess\" is the mass excess between the monoisotopic mass of an element and the mass of its A + 1 or its A + 2 isotopic cluster (extrapolated from relative mass defect)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMassRatioOfVapour a qudt:QuantityKind ;
    rdfs:label "Relative Mass Ratio of Vapour"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\psi = x / x_{sat}\\), where \\(x\\) is mass ratio of water vapour to dry gas,  \\(x_{sat}\\) is its mass raio of water vapour to dry gas at saturation (at the same temperature)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relative Mass Ratio of Vapour\" is one of a number of \"Relative Concentration\" quantities  defined by ISO 8000." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMolecularMass a qudt:QuantityKind ;
    rdfs:label "Relative Molecular Mass"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molecular_mass#Relative_molecular_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Relative Molecular Mass \" is equivalent to the numerical value of the molecular mass expressed in unified atomic mass units. The molecular mass (m) is the mass of a molecule." ;
    qudt:symbol "M_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelativePressureCoefficient a qudt:QuantityKind ;
    rdfs:label "Relative Pressure Coefficient"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:expression "\\(rel-pres-coef\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_p = \\frac{1}{p}\\left (\\frac{\\partial p}{\\partial T} \\right )_V\\), where \\(p\\) is \\(pressure\\),  \\(T\\) is thermodynamic temperature and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_p\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelaxationTIme a qudt:QuantityKind ;
    rdfs:label "Relaxation TIme"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relaxation_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relaxation TIme\" is a time constant for exponential decay towards equilibrium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:ResidualResistivity a qudt:QuantityKind ;
    rdfs:label "Residual Resistivity"@en ;
    qudt:applicableUnit unit:OHM-M ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Residual-resistance_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho_R\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Residual Resistivity\" for metals, is the resistivity extrapolated to zero thermodynamic temperature." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ResistancePercentage a qudt:QuantityKind ;
    rdfs:label "Resistance Percentage"@en ;
    dcterms:isReplacedBy quantitykind:ResistanceRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-2L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Resistivity a qudt:QuantityKind ;
    rdfs:label "Resistivity"@en ;
    qudt:applicableUnit unit:OHM-M,
        unit:OHM-M2-PER-M ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-04"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{1}{\\sigma}\\), if it exists, where \\(\\sigma\\) is conductivity."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Resistivity\" is the inverse of the conductivity when this inverse exists." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Conductivity .

quantitykind:ResonanceEnergy a qudt:QuantityKind ;
    rdfs:label "Resonance Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_reaction_analysis"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Resonance Energy\" in a nuclear reaction, is the kinetic energy of an incident particle, in the reference frame of the target, corresponding to a resonance in a nuclear reaction." ;
    qudt:symbol "E_r, E_{res}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:ResonanceEscapeProbability a qudt:QuantityKind ;
    rdfs:label "Resonance Escape Probability"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Resonance Escape Probability\" is the fraction of fission neutrons that manage to slow down from fission to thermal energies without being absorbed. In an infinite medium, the probability that a neutron slowing down will traverse all or some specified portion of the range of resonance energies without being absorbed." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ResonanceEscapeProbabilityForFission a qudt:QuantityKind ;
    rdfs:label "Resonance Escape Probability For Fission"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "Fraction of fission neutrons that manage to slow down from fission to thermal energies without being absorbed." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:RespiratoryRate a qudt:QuantityKind ;
    rdfs:label "Respiratory Rate"@en ;
    qudt:applicableUnit unit:BREATH-PER-MIN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Respiratory_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Respiratory_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Respiratory rate (Vf, Rf or RR) is also known by respiration rate, pulmonary ventilation rate, ventilation rate, or breathing frequency is the number of breaths taken within a set amount of time, typically 60 seconds. A normal respiratory rate is termed eupnea, an increased respiratory rate is termed tachypnea and a lower than normal respiratory rate is termed bradypnea." ;
    qudt:symbol "Vf, Rf or RR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RestEnergy a qudt:QuantityKind ;
    rdfs:label "Rest Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Invariant_mass#Rest_energy"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For a particle, \\(E_0 = m_0 c_0^2\\), where \\(m_0\\) is the rest mass of that particle, and \\(c_0\\) is the speed of light in vacuum."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Rest Energy\" is the energy equivalent of the rest mass of a body, equal to the rest mass multiplied by the speed of light squared." ;
    qudt:symbol "E_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:RestMass a qudt:QuantityKind ;
    rdfs:label "Rest Mass"@en ;
    dcterms:description "The \\(\\textit{Rest Mass}\\), the invariant mass, intrinsic mass, proper mass, or (in the case of bound systems or objects observed in their center of momentum frame) simply mass, is a characteristic of the total energy and momentum of an object or a system of objects that is the same in all frames of reference related by Lorentz transformations. The mass of a particle type X (electron, proton or neutron) when that particle is at rest. For an electron: \\(m_e = 9,109 382 15(45) 10^{-31} kg\\), for a proton: \\(m_p = 1,672 621 637(83) 10^{-27} kg\\), for a neutron: \\(m_n = 1,674 927 211(84) 10^{-27} kg\\). Rest mass is often denoted \\(m_0\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Invariant_mass"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "m_X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "Proper Mass" ;
    skos:broader quantitykind:Mass .

quantitykind:ReverberationTime a qudt:QuantityKind ;
    rdfs:label "Reverberation Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reverberation"^^xsd:anyURI ;
    qudt:plainTextDescription "Reverberation Time is the time required for reflections of a direct sound to decay by 60 dB below the level of the direct sound." ;
    qudt:symbol "T" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:ReynoldsNumber a qudt:QuantityKind ;
    rdfs:label "Reynolds Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Reynolds_number"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reynolds_number"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Re = \\frac{\\rho uL}{\\mu} = \\frac{uL}{\\nu}\\), where \\(\\rho\\) is mass density, \\(u\\) is speed, \\(L\\) is length,  \\(\\mu\\) is dynamic viscosity, and \\(\\nu\\) is kinematic viscosity."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Reynolds Number\" (Re) is a dimensionless number that gives a measure of the ratio of inertial forces to viscous forces and consequently quantifies the relative importance of these two types of forces for given flow conditions." ;
    qudt:symbol "Re" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio ;
    skos:closeMatch <http://dbpedia.org/resource/Reynolds_number> .

quantitykind:RichardsonConstant a qudt:QuantityKind ;
    rdfs:label "Richardson Constant"@en ;
    qudt:applicableUnit unit:A-PER-M2-K2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H-2T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermionic_emission"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "The thermionic emission current, \\(J\\), for a metal is \\(J = AT^2\\exp{(-\\frac{\\Phi}{kT})}\\), where \\(T\\) is thermodynamic temperature, \\(k\\) is the Boltzmann constant, and \\(\\Phi\\) is a work function."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Richardson Constant\" is a constant used in developing thermionic emission current density for a metal." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RocketAtmosphericTransverseForce a qudt:QuantityKind ;
    rdfs:label "Rocket Atmospheric Transverse Force"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "Transverse force on rocket due to an atmosphere" ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:RotationalMass a qudt:QuantityKind ;
    rdfs:label "Rotational Mass"@en ;
    qudt:exactMatch quantitykind:MomentOfInertia ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC2/HTML/link/ifcrotationalmassmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "\"Rotational Mass\" denotes the inertia of a body with respect to angular acceleration. It is usually measured in kg*m^2." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RotationalStiffness a qudt:QuantityKind ;
    rdfs:label "Rotational Stiffness"@en ;
    qudt:applicableUnit unit:N-M-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:plainTextDescription "Rotational Stiffness is the extent to which an object resists deformation in response to an applied torque." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:TorquePerAngle .

quantitykind:ScalarMagneticPotential a qudt:QuantityKind ;
    rdfs:label "Scalar Magnetic Potential"@en ;
    qudt:applicableUnit unit:V-SEC-PER-M ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-58"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{H} = -grad V_m\\), where \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Scalar Magnetic Potential\" is the scalar potential of an irrotational magnetic field strength. The negative of the gradient of the scalar magnetic potential is the irrotational magnetic field strength. The magnetic scalar potential is not unique since any constant scalar field can be added to it without changing its gradient." ;
    qudt:symbol "V_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:SecondAxialMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Axial Moment of Area"@en ;
    qudt:applicableUnit unit:IN4,
        unit:M4,
        unit:MilliM4 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_a = \\int r^2_Q dA\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(A\\) is area."^^qudt:LatexString ;
    qudt:plainTextDescription "The moment of inertia, also called mass moment of inertia, rotational inertia, polar moment of inertia of mass, or the angular mass is a property of a distribution of mass in space that measures its resistance to rotational acceleration about an axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SecondMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Moment of Area"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The second moment of area is a property of a physical object that can be used to predict its resistance to bending and deflection. The deflection of an object under load depends not only on the load, but also on the geometry of the object's cross-section." ;
    qudt:symbol "J" ;
    qudt:url "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:SecondPolarMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Polar Moment of Area"@en ;
    qudt:applicableUnit unit:M4,
        unit:MilliM4 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_p = \\int r^2_Q dA\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(A\\) is area."^^qudt:LatexString ;
    qudt:plainTextDescription "The moment of inertia, also called mass moment of inertia, rotational inertia, polar moment of inertia of mass, or the angular mass is a property of a distribution of mass in space that measures its resistance to rotational acceleration about an axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SecondStageMassRatio a qudt:QuantityKind ;
    rdfs:label "Second Stage Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "Mass ratio for the second stage of a multistage launcher." ;
    qudt:symbol "R_2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:SectionAreaIntegral a qudt:QuantityKind ;
    rdfs:label "Section Area Integral"@en ;
    qudt:applicableUnit unit:M5 ;
    qudt:hasDimensionVector qkdv:A0E0L5I0M0H0T0D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD1/HTML/link/ifcsectionalareaintegralmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The sectional area integral measure is typically used in torsional analysis. It is usually measured in M⁵." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SectionModulus a qudt:QuantityKind ;
    rdfs:label "Section Modulus"@en ;
    qudt:applicableUnit unit:M3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Section_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\frac{I_a}{(r_Q)_{max}}\\), where \\(I_a\\) is the second axial moment of area and \\((r_Q)_{max}\\) is the maximum radial distance of any point in the surface considered from the \\(Q-axis\\) with respect to which \\(I_a\\) is defined."^^qudt:LatexString ;
    qudt:plainTextDescription "The Section Modulus is a geometric property for a given cross-section used in the design of beams or flexural members." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SeebeckCoefficient a qudt:QuantityKind ;
    rdfs:label "Seebeck Coefficient"@en ;
    qudt:applicableUnit unit:V-PER-K ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermopower"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_{ab} = \\frac{dE_{ab}}{dT}\\), where \\(E_{ab}\\) is the thermosource voltage between substances a and b, \\(T\\) is the thermodynamic temperature of the hot junction."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Seebeck Coefficient\", or thermopower, or thermoelectric power of a material is a measure of the magnitude of an induced thermoelectric voltage in response to a temperature difference across that material." ;
    qudt:symbol "S_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SerumOrPlasmaLevel a qudt:QuantityKind ;
    rdfs:label "Serum or Plasma Level"@en ;
    qudt:applicableUnit unit:IU-PER-L ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AmountOfSubstancePerUnitVolume .

quantitykind:ShannonDiversityIndex a qudt:QuantityKind ;
    rdfs:label "Shannon Diversity Index" ;
    qudt:applicableUnit unit:BAN,
        unit:BIT,
        unit:BYTE,
        unit:ERLANG,
        unit:ExaBYTE,
        unit:ExbiBYTE,
        unit:GibiBYTE,
        unit:GigaBYTE,
        unit:HART,
        unit:KibiBYTE,
        unit:KiloBYTE,
        unit:MebiBYTE,
        unit:MegaBYTE,
        unit:NAT,
        unit:PebiBYTE,
        unit:PetaBYTE,
        unit:SHANNON,
        unit:TebiBYTE,
        unit:TeraBYTE ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "Information entropy applied to a collection of indiviual organisms [of selected species] in a sample area. A measure of biodiversity." ;
    rdfs:isDefinedBy <https://data.agrimetrics.co.uk/ontologies/qudt-extension> ;
    skos:broader quantitykind:InformationEntropy .

quantitykind:ShearModulus a qudt:QuantityKind ;
    rdfs:label "Shear Modulus"@en ;
    dcterms:description "The Shear Modulus or modulus of rigidity, denoted by \\(G\\), or sometimes \\(S\\) or \\(\\mu\\), is defined as the ratio of shear stress to the shear strain."^^qudt:LatexString ;
    qudt:applicableUnit unit:PA,
        unit:PicoPA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Shear_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = \\frac{\\tau}{\\gamma}\\), where \\(\\tau\\) is the shear stress and \\(\\gamma\\) is the shear strain."^^qudt:LatexString ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ShearStrain a qudt:QuantityKind ;
    rdfs:label "Shear Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{\\Delta x}{d}\\), where \\(\\Delta x\\) is the parallel displacement between two surfaces of a layer of thickness \\(d\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Shear Strain is the amount of deformation perpendicular to a given line rather than parallel to it. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Strain .

quantitykind:ShearStress a qudt:QuantityKind ;
    rdfs:label "Shear Stress" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stress_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = \\frac{dF_t}{dA}\\), where \\(dF_t\\) is the tangential component of force and \\(dA\\) is the area of the surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Shear stress occurs when the force  occurs in shear, or perpendicular to the normal." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Stress .

quantitykind:Short-RangeOrderParameter a qudt:QuantityKind ;
    rdfs:label "Short-Range Order Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(r, \\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Short-Range Order Parameter\" is the fraction of the nearest-neighbor atom pairs in an Ising ferromagnet having magnetic moments in one direction, minus the fraction having magnetic moments in the opposite direction." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SignalDetectionThreshold a qudt:QuantityKind ;
    rdfs:label "Signal Detection Threshold"@en ;
    qudt:applicableUnit unit:DeciB_C ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SingleStageLauncherMassRatio a qudt:QuantityKind ;
    rdfs:label "Single Stage Launcher Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:symbol "R_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:Slowing-DownArea a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Slowing-Down Area\" in an infinite homogenous medium, is one-sixth of the mean square distance between the neutron source and the point where a neutron reaches a given energy." ;
    qudt:symbol "L_s^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:Slowing-DownDensity a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Density"@en ;
    qudt:applicableUnit unit:PER-M3-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/slowing-down+density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q = -\\frac{dn}{dt}\\), where \\(n\\) is the number density and \\(dt\\) is the duration."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Slowing-Down Density\" is a measure of the rate at which neutrons lose energy in a nuclear reactor through collisions; equal to the number of neutrons that fall below a given energy per unit volume per unit time." ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Slowing-DownLength a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://nuclearpowertraining.tpub.com/h1013v2/css/h1013v2_32.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Slowing-Down Length\" is the average straight-line distance that a fast neutron will travel between its introduction into the slowing-downmedium (moderator) and thermalization." ;
    qudt:symbol "L_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SoilAdsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Soil Adsorption Coefficient"@en ;
    qudt:applicableUnit unit:L-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:plainTextDescription "A specific volume that is the ratio of the amount of substance adsorbed per unit weight of organic carbon in the soil or sediment to the concentration of the chemical in aqueous solution at equilibrium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificVolume .

quantitykind:SolidAngle a qudt:QuantityKind ;
    rdfs:label "Solid Angle"@en ;
    qudt:applicableUnit unit:DEG2,
        unit:FA,
        unit:SR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Solid_angle"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The solid angle subtended by a surface S is defined as the surface area of a unit sphere covered by the surface S's projection onto the sphere. A solid angle is related to the surface of a sphere in the same way an ordinary angle is related to the circumference of a circle. Since the total surface area of the unit sphere is 4*pi, the measure of solid angle will always be between 0 and 4*pi." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaRatio .

quantitykind:SolidStateDiffusionLength a qudt:QuantityKind ;
    rdfs:label "Diffusion Length (Solid State Physics)"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://pveducation.org/pvcdrom/pn-junction/diffusion-length"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\sqrt{D\\tau}\\), where \\(D\\) is the diffusion coefficient and \\(\\tau\\) is lifetime."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Solid State Diffusion Length\" is the average distance traveled by a particle, such as a minority carrier in a semiconductor " ;
    qudt:symbol "L, L_n, L_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Solubility_Water a qudt:QuantityKind ;
    rdfs:label "Water Solubility"@en ;
    qudt:applicableUnit unit:FemtoMOL-PER-L,
        unit:KiloMOL-PER-M3,
        unit:MOL-PER-DeciM3,
        unit:MOL-PER-L,
        unit:MOL-PER-M3,
        unit:MicroMOL-PER-L,
        unit:MilliMOL-PER-L,
        unit:MilliMOL-PER-M3,
        unit:PicoMOL-PER-L,
        unit:PicoMOL-PER-M3 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:plainTextDescription "An amount of substance per unit volume that is the concentration of a saturated solution expressed as the ratio of the solute concentration over the volume of water.  A substance's solubility fundamentally depends on several physical and chemical properties of the solution as well as the environment it is in." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AmountOfSubstancePerUnitVolume .

quantitykind:SoundEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Sound energy density"@en ;
    dcterms:description "Sound energy density is the time-averaged sound energy in a given volume divided by that volume. The sound energy density or sound density (symbol \\(E\\) or \\(w\\)) is an adequate measure to describe the sound field at a given point as a sound energy value."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_energy_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\frac{I}{c}\\), where \\(I\\) is the sound intensity in \\(\\frac{W}{m^2}\\) and \\(c\\) is the sound speed in \\(\\frac{m}{s}\\)."^^qudt:LatexString ;
    qudt:symbol "E" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyDensity .

quantitykind:SoundExposure a qudt:QuantityKind ;
    rdfs:label "Sound exposure"@en ;
    qudt:applicableUnit unit:PA2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M2H0T-3D0 ;
    qudt:informativeReference "http://www.acoustic-glossary.co.uk/definitions-s.htm"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\int_{t1}^{t2}p^2dt\\), where \\(t1\\) and \\(t2\\) are the starting and ending times for the integral and \\(p\\) is the sound pressure."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound Exposure is the energy of the A-weighted sound calculated over the measurement time(s). For a given period of time, an increase of 10 dB(A) in sound pressure level corresponds to a tenfold increase in E." ;
    qudt:symbol "E" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundExposureLevel a qudt:QuantityKind ;
    rdfs:label "Sound exposure level"@en ;
    dcterms:description "Sound Exposure Level abbreviated as \\(SEL\\) and \\(LAE\\), is the total noise energy produced from a single noise event, expressed as a logarithmic ratio from a reference level."^^qudt:LatexString ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.diracdelta.co.uk/science/source/s/o/sound%20exposure%20level/source.html"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_E = 10 \\log_{10} \\frac{E}{E_0} dB\\), where \\(E\\) is sound power and the reference value is \\(E_0 = 400 \\mu Pa^2 s\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundParticleAcceleration a qudt:QuantityKind ;
    rdfs:label "Sound particle acceleration"@en ;
    dcterms:description "In a compressible sound transmission medium - mainly air - air particles get an accelerated motion: the particle acceleration or sound acceleration with the symbol a in \\(m/s2\\). In acoustics or physics, acceleration (symbol: \\(a\\)) is defined as the rate of change (or time derivative) of velocity."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_acceleration"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{\\partial v}{\\partial t}\\), where \\(v\\) is sound particle velocity and \\(t\\) is time."^^qudt:LatexString ;
    qudt:symbol "a" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:SoundParticleDisplacement a qudt:QuantityKind ;
    rdfs:label "Sound Particle Displacement"@en ;
    qudt:abbreviation "l" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_displacement"^^xsd:anyURI ;
    qudt:plainTextDescription "Sound Particle Displacement is the nstantaneous displacement of a particle in a medium from what would be its position in the absence of sound waves." ;
    qudt:symbol "ξ" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SoundParticleVelocity a qudt:QuantityKind ;
    rdfs:label "Sound particle velocity"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_velocity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(v = \\frac{\\partial\\delta }{\\partial t}\\), where \\(\\delta\\) is sound particle displacement and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound Particle velocity is the velocity v of a particle (real or imagined) in a medium as it transmits a wave. In many cases this is a longitudinal wave of pressure as with sound, but it can also be a transverse wave as with the vibration of a taut string. When applied to a sound wave through a medium of a fluid like air, particle velocity would be the physical speed of a parcel of fluid as it moves back and forth in the direction the sound wave is travelling as it passes." ;
    qudt:symbol "v" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:SoundPower a qudt:QuantityKind ;
    rdfs:label "Sound power"@en ;
    dcterms:description "Sound power or acoustic power \\(P_a\\) is a measure of sonic energy \\(E\\) per time \\(t\\) unit. It is measured in watts and can be computed as sound intensity (\\(I\\)) times area (\\(A\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_power"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P_a = IA\\), where \\(I\\) is the sound intensity in \\(\\frac{W}{m^2}\\) and \\(A\\) is the area in \\(m^2\\)."^^qudt:LatexString ;
    qudt:symbol "P" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:SoundPressure a qudt:QuantityKind ;
    rdfs:label "Sound pressure"@en ;
    qudt:abbreviation "p" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Static_pressure"^^xsd:anyURI ;
    qudt:plainTextDescription "Sound Pressure is the difference between instantaneous total pressure and static pressure." ;
    qudt:symbol "p" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:SoundPressureLevel a qudt:QuantityKind ;
    rdfs:label "Sound pressure level"@en ;
    dcterms:description "Sound pressure level (\\(SPL\\)) or sound level is a logarithmic measure of the effective sound pressure of a sound relative to a reference value. It is measured in decibels (dB) above a standard reference level."^^qudt:LatexString ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_pressure#Sound_pressure_level"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_P = 10 \\log_{10} \\frac{p^2}{p_0^2} dB\\), where \\(p\\) is sound pressure and the reference value in airborne acoustics is \\(p_0 = 20 \\mu Pa\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundReductionIndex a qudt:QuantityKind ;
    rdfs:label "Sound reduction index"@en ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_reduction_index"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R = 10 \\log (\\frac{1}{\\tau}) dB\\), where \\(\\tau\\) is the transmission factor."^^qudt:LatexString ;
    qudt:plainTextDescription "The Sound Reduction Index is used to measure the level of sound insulation provided by a structure such as a wall, window, door, or ventilator." ;
    qudt:symbol "R" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundVolumeVelocity a qudt:QuantityKind ;
    rdfs:label "Sound volume velocity"@en ;
    dcterms:description "Sound Volume Velocity is the product of particle velocity \\(v\\) and the surface area \\(S\\) through which an acoustic wave of frequency \\(f\\) propagates. Also, the surface integral of the normal component of the sound particle velocity over the cross-section (through which the sound propagates). It is used to calculate acoustic impedance."^^qudt:LatexString ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q= vS\\), where \\(v\\) is sound particle velocity and \\(S\\) is the surface area through which an acoustic wave of frequence \\(f\\) propagates."^^qudt:LatexString ;
    qudt:symbol "q" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SourceVoltage a qudt:QuantityKind ;
    rdfs:label "Source Voltage"@en ;
    dcterms:description """"Source Voltage}, also referred to as \\textit{Source Tension" is the voltage between the two terminals of a voltage source when there is no

electric current through the source. The name "electromotive force} with the abbreviation \\textit{EMF" and the symbol \\(E\\) is deprecated."""^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:symbol "U_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Voltage .

quantitykind:SourceVoltageBetweenSubstances a qudt:QuantityKind ;
    rdfs:label "Source Voltage Between Substances"@en ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Source Voltage Between Substances\" is the source voltage between substance a and b." ;
    qudt:symbol "E_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Voltage .

quantitykind:SpatialSummationFunction a qudt:QuantityKind ;
    rdfs:label "Spatial Summation Function"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Summation_(neurophysiology)#Spatial_summation"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Spatial Summation Function\" is he ability to produce a composite signal from the signals coming into the eyes from different directions." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SpecificAcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Specific Acoustic Impedance"@en ;
    qudt:applicableUnit unit:N-SEC-PER-M3,
        unit:RAYL ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificActivity a qudt:QuantityKind ;
    rdfs:label "Specific Activity"@en ;
    qudt:applicableUnit unit:BQ-PER-KiloGM,
        unit:MicroBQ-PER-KiloGM,
        unit:MilliBQ-PER-GM,
        unit:MilliBQ-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_activity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{A}{m}\\), where \\(A\\) is the activity of a sample and \\(m\\) is its mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Activity\" is the number of decays per unit time of a radioactive sample. The SI unit of radioactive activity is the becquerel (Bq), in honor of the scientist Henri Becquerel." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificEnergyImparted a qudt:QuantityKind ;
    rdfs:label "Specific Energy Imparted"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB,
        unit:BTU_TH-PER-LB,
        unit:CAL_IT-PER-GM,
        unit:CAL_TH-PER-GM,
        unit:ERG-PER-G,
        unit:ERG-PER-GM,
        unit:J-PER-GM,
        unit:J-PER-KiloGM,
        unit:KiloCAL-PER-GM,
        unit:KiloJ-PER-KiloGM,
        unit:KiloLB_F-FT-PER-LB,
        unit:MegaJ-PER-KiloGM,
        unit:N-M-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing radiation, \\(z = \\frac{\\varepsilon}{m}\\), where \\(\\varepsilon\\) is the energy imparted to irradiated matter and \\(m\\) is the mass of that matter."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Energy Imparted\", is the energy imparted to an element of irradiated matter divided by the mass, dm, of that element." ;
    qudt:symbol "z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:SpecificEntropy a qudt:QuantityKind ;
    rdfs:label "Specific Entropy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:KiloJ-PER-KiloGM-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(s = S/m\\), where \\(S\\) is entropy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Specific Entropy\" is entropy per unit of mass." ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Entropy .

quantitykind:SpecificHeatPressure a qudt:QuantityKind ;
    rdfs:label "Specific Heat Pressure"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K-PA ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat at a constant pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificHeatVolume a qudt:QuantityKind ;
    rdfs:label "Specific Heat Volume"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificHeatsRatio a qudt:QuantityKind ;
    rdfs:label "Specific Heats Ratio"@en ;
    dcterms:description "The ratio of specific heats, for the exhaust gases adiabatic gas constant, is the relative amount of compression/expansion energy that goes into temperature \\(T\\) versus pressure \\(P\\) can be characterized by the heat capacity ratio: \\(\\gamma\\frac{C_P}{C_V}\\), where \\(C_P\\) is the specific heat (also called heat capacity) at constant pressure, while \\(C_V\\) is the specific heat at constant volume. "^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:SpecificImpulseByMass a qudt:QuantityKind ;
    rdfs:label "Specific Impulse by Mass"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:SpecificImpulseByWeight a qudt:QuantityKind ;
    rdfs:label "Specific Impulse by Weight"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificImpulse,
        quantitykind:Time .

quantitykind:SpecificOpticalRotatoryPower a qudt:QuantityKind ;
    rdfs:label "Specific Optical Rotatory Power"@en ;
    qudt:applicableUnit unit:RAD-M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/O04313.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_m = \\alpha \\frac{A}{m}\\), where \\(\\alpha\\) is the angle of optical rotation, and \\(m\\) is the mass of the optically active component in the path of a linearly polarized light beam of cross sectional area \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Optical Rotatory Power\" Angle of optical rotation divided by the optical path length through the medium and by the mass concentration of the substance giving the specific optical rotatory power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificThrust a qudt:QuantityKind ;
    rdfs:label "Specific thrust"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_thrust"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:id "Q-160-100" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_thrust"^^xsd:anyURI ;
    qudt:plainTextDescription "Specific impulse (usually abbreviated Isp) is a way to describe the efficiency of rocket and jet engines. It represents the force with respect to the amount of propellant used per unit time.[1] If the \"amount\" of propellant is given in terms of mass (such as kilograms), then specific impulse has units of velocity. If it is given in terms of Earth-weight (such as kiloponds), then specific impulse has units of time. The conversion constant between the two versions of specific impulse is g. The higher the specific impulse, the lower the propellant flow rate required for a given thrust, and in the case of a rocket the less propellant is needed for a given delta-v per the Tsiolkovsky rocket equation." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificImpulse .

quantitykind:SpectralAngularCrossSection a qudt:QuantityKind ;
    rdfs:label "Spectral Angular Cross-section"@en ;
    dcterms:description "\"Spectral Angular Cross-section\" is the cross-section for ejecting or scattering a particle into an elementary cone with energy \\(E\\) in an energy interval, divided by the solid angle \\(d\\Omega\\) of that cone and the range \\(dE\\) of that interval."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-SR-J ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\int \\sigma_{\\Omega,E} d\\Omega dE\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_{\\Omega, E}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:AngularCrossSection,
        quantitykind:SpectralCrossSection .

quantitykind:SpectralLuminousEfficiency a qudt:QuantityKind ;
    rdfs:label "Spectral Luminous Efficiency"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_efficacy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V(\\lambda) = \\frac{\\Phi_\\lambda(\\lambda_m)}{\\Phi_\\lambda(\\lambda)}\\), where \\(\\Phi_\\lambda(\\lambda_m)\\) is the spectral radiant flux at wavelength \\(\\lambda_m\\) and \\(\\Phi_\\lambda(\\lambda)\\) is the spectral radiant flux at wavelength \\(\\lambda\\), such that both radiations produce equal luminous sensations under specified photometric conditions and \\(\\lambda_m\\) is chosen so that the maximum value of this ratio is equal to 1."^^qudt:LatexString ;
    qudt:plainTextDescription "The Spectral Luminous Efficiency is a measure of how well a light source produces visible light. It is the ratio of luminous flux to power. A common choice is to choose units such that the maximum possible efficacy, 683 lm/W, corresponds to an efficiency of 100%." ;
    qudt:symbol "V" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpectralRadiantEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Spectral Radiant Energy Density"@en ;
    qudt:applicableUnit unit:J-PER-M4,
        unit:KiloPA-PER-MilliM,
        unit:PA-PER-M ;
    qudt:expression "\\(M-PER-L2-T2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:plainTextDescription "\"Spectral Radiant Energy Density\" is the spectral concentration of radiant energy density (in terms of wavelength), or the spectral radiant energy density (in terms of wave length)." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpeedOfLight a qudt:QuantityKind ;
    rdfs:label "Speed of Light"@en ;
    dcterms:description "The quantity kind \\(\\textbf{Speed of Light}\\) is the speed of electomagnetic waves in a given medium."^^qudt:LatexString ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed_of_light"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=113-01-34"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        constant:PermittivityOfVacuum,
        constant:SpeedOfLight_Vacuum ;
    skos:broader quantitykind:Speed .

quantitykind:SphericalIlluminance a qudt:QuantityKind ;
    rdfs:label "Illuminance"@en ;
    dcterms:description "Spherical illuminance is equal to quotient of the total luminous flux \\(\\Phi_v\\) incident on a small sphere by the cross section area of that sphere."^^qudt:LatexString ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:informativeReference "http://eilv.cie.co.at/term/1245"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E_v,0 = \\int_{4\\pi sr}{L_v}{d\\Omega}\\), where \\(d\\Omega\\) is the solid angle of each elementary beam passing through the given point and \\(L_v\\) is its luminance at that point in the direction of the beam."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Illuminance .

quantitykind:Spin a qudt:QuantityKind ;
    rdfs:label "Spin"@en ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Spin_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "In quantum mechanics and particle physics \"Spin\" is an intrinsic form of angular momentum carried by elementary particles, composite particles (hadrons), and atomic nuclei." ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularMomentum .

quantitykind:SquareEnergy a qudt:QuantityKind ;
    rdfs:label "Square Energy"@en ;
    dcterms:isReplacedBy quantitykind:Energy_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M2H0T-4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StagePropellantMass a qudt:QuantityKind ;
    rdfs:label "Stage Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:StageStructuralMass a qudt:QuantityKind ;
    rdfs:label "Stage Structure Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:StandardAbsoluteActivity a qudt:QuantityKind ;
    rdfs:label "Standard Absolute Activity"@en ;
    dcterms:description "The \"Standard Absolute Activity\" is proportional to the absoulte activity of the pure substance \\(B\\) at the same temperature and pressure multiplied by the standard pressure."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Activity_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda_B^\\Theta = \\lambda_B^*(p^\\Theta)\\), where \\(\\lambda_B^\\Theta\\) the absolute activity of the pure substance \\(B\\) at the same temperature and pressure, and \\(p^\\Theta\\) is standard pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda_B^\\Theta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StandardChemicalPotential a qudt:QuantityKind ;
    rdfs:label "Standard Chemical Potential"@en ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:expression "\\(j-mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_potential"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu_B^\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Standard Chemical Potential\" is the value of the chemical potential at standard conditions" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ChemicalPotential .

quantitykind:StandardGravitationalParameter a qudt:QuantityKind ;
    rdfs:label "Standard Gravitational Parameter"@en ;
    dcterms:description "In celestial mechanics the standard gravitational parameter of a celestial body is the product of the gravitational constant G and the mass M of the body. Expressed as \\(\\mu = G \\cdot M\\). The SI units of the standard gravitational parameter are \\(m^{3}s^{-2}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloM3-PER-SEC2,
        unit:M3-PER-SEC2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Standard_gravitational_parameter"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Standard_gravitational_parameter"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StaticFriction a qudt:QuantityKind ;
    rdfs:label "Static Friction"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Static friction is friction between two or more solid objects that are not moving relative to each other. For example, static friction can prevent an object from sliding down a sloped surface. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Friction .

quantitykind:StaticFrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Static Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{F_max}{N}\\), where \\(F_max\\) is the maximum tangential component of the contact force and \\(N\\) is the normal component of the contact force between two bodies at relative rest."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Static friction is friction between two or more solid objects that are not moving relative to each other. For example, static friction can prevent an object from sliding down a sloped surface. " ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:FrictionCoefficient .

quantitykind:StatisticalWeight a qudt:QuantityKind ;
    rdfs:label "Statistical Weight"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Statistical_weight"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "A \"Statistical Weight\" is the relative probability (possibly unnormalized) of a particular feature of a state." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StoichiometricNumber a qudt:QuantityKind ;
    rdfs:label "Stoichiometric Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stoichiometry"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\nu_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Chemical reactions, as macroscopic unit operations, consist of simply a very large number of elementary reactions, where a single molecule reacts with another molecule. As the reacting molecules (or moieties) consist of a definite set of atoms in an integer ratio, the ratio between reactants in a complete reaction is also in integer ratio. A reaction may consume more than one molecule, and the \"Stoichiometric Number\" counts this number, defined as positive for products (added) and negative for reactants (removed)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:StrainEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Strain Energy Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:plainTextDescription "Defined as the 'work done' for a given strain, that is the area under the stress-strain curve after a specified eation. Source(s): http://www.prepol.com/product-range/product-subpages/terminology" ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyDensity .

quantitykind:StressOpticCoefficient a qudt:QuantityKind ;
    rdfs:label "Stress-Optic Coefficient"@en ;
    qudt:applicableUnit unit:NanoM-PER-CentiM-PSI,
        unit:NanoM-PER-MilliM-MegaPA,
        unit:PER-PA,
        unit:PER-PSI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "https://en.wikipedia.org/w/index.php?title=Photoelasticity&oldid=1109858854#Experimental_principles"^^xsd:anyURI ;
    qudt:latexDefinition "When a ray of light passes through a photoelastic material, its electromagnetic wave components are resolved along the two principal stress directions and each component experiences a different refractive index due to the birefringence. The difference in the refractive indices leads to a relative phase retardation between the two components. Assuming a thin specimen made of isotropic materials, where two-dimensional photoelasticity is applicable, the magnitude of the relative retardation is given by the stress-optic law \\(\\Delta ={\\frac {2\\pi t}{\\lambda }}C(\\sigma _{1}-\\sigma _{2})\\), where \\(\\Delta\\) is the induced retardation, \\(C\\) is the stress-optic coefficient, \\(t\\) is the specimen thickness, \\(\\lambda\\) is the vacuum wavelength, and \\(\\sigma_1\\) and \\(\\sigma_2\\) are the first and second principal stresses, respectively."^^qudt:LatexString ;
    qudt:plainTextDescription "When a ray of light passes through a photoelastic material, its electromagnetic wave components are resolved along the two principal stress directions and each component experiences a different refractive index due to the birefringence. The difference in the refractive indices leads to a relative phase retardation between the two components. Assuming a thin specimen made of isotropic materials, where two-dimensional photoelasticity is applicable, the magnitude of the relative retardation is given by the stress-optic law Δ=((2πt)/λ)C(σ₁-σ₂), where Δ is the induced retardation, C is the stress-optic coefficient, t is the specimen thickness, λ is the vacuum wavelength, and σ₁ and σ₂ are the first and second principal stresses, respectively." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StructuralEfficiency a qudt:QuantityKind ;
    rdfs:label "Structural Efficiency"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Structural efficiency is a function of the weight of structure to the afforded vehicle's strength." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:StructureFactor a qudt:QuantityKind ;
    rdfs:label "Structure Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Structure_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F(h, k, l) = \\sum_{n=1}^N f_n\\exp{[2\\pi i(hx_n + ky_n +lz_n)]}\\), where \\(f_n\\) is the atomic scattering factor for atom \\(n\\), and \\(x_n\\), \\(y_n\\), and \\(z_n\\) are fractional coordinates in the unit cell; for \\(h\\), \\(k\\), and \\(l\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Structure Factor\" is a mathematical description of how a material scatters incident radiation." ;
    qudt:symbol "F(h, k, l)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SuperconductorEnergyGap a qudt:QuantityKind ;
    rdfs:label "Superconductor Energy Gap"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/BCS_theory"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Superconductor Energy Gap\" is the width of the forbidden energy band in a superconductor." ;
    qudt:symbol "Δ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:GapEnergy .

quantitykind:SurfaceActivityDensity a qudt:QuantityKind ;
    rdfs:label "Surface Activity Density"@en ;
    qudt:applicableUnit unit:BQ-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a_s = \\frac{A}{S}\\), where \\(S\\) is the total area of the surface of a sample and \\(A\\) is its activity."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Surface Activity Density\" is undefined." ;
    qudt:symbol "a_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SurfaceCoefficientOfHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Surface Coefficient of Heat Transfer"@en ;
    qudt:applicableUnit unit:W-PER-M2-K ;
    qudt:expression "\\(surface-heat-xfer-coeff\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q = h (T_s - T_r)\\), where \\(T_s\\) is areic heat flow rate is the thermodynamic temperature of the surface, and is a reference thermodynamic temperature characteristic of the adjacent surroundings."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SurfaceDensity a qudt:QuantityKind ;
    rdfs:label "Surface Density"@en ;
    qudt:applicableUnit unit:KiloGM-PER-KiloM2,
        unit:KiloGM-PER-M2,
        unit:LB-PER-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac{dm}{dA}\\), where \\(m\\) is mass and \\(A\\) is area."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The area density (also known as areal density, surface density, or superficial density) of a two-dimensional object is calculated as the mass per unit area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SurfaceTension a qudt:QuantityKind ;
    rdfs:label "Surface Tension"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:KiloW-HR-PER-M2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:hasDimension qudt:DIM_ISO-MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Surface_tension"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{dF}{dl}\\), where \\(F\\) is the force component perpendicular to a line element in a surface and \\(l\\) is the length of the line element."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Surface Tension\" is a contractive tendency of the surface of a liquid that allows it to resist an external force." ;
    qudt:symbol "γ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerArea .

quantitykind:Susceptance a qudt:QuantityKind ;
    rdfs:label "Susceptance"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Susceptance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Susceptance?oldid=430151986"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-54"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = \\lim{\\underline{Y}}\\), where \\(\\underline{Y}\\) is admittance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Susceptance\" is the imaginary part of admittance. The inverse of admittance is impedance and the real part of admittance is conductance. " ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Conductance,
        quantitykind:Impedance .

quantitykind:TARGET-BOGIE-MASS a qudt:QuantityKind ;
    rdfs:label "Target Bogie Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "An informal mass limit established by a Project Office (at the Element Integrated Product Team (IPT) level or below) to control mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:TemperatureAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Temperature Amount of Substance"@en ;
    qudt:applicableUnit unit:MOL-DEG_C,
        unit:MOL-K ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperatureGradient a qudt:QuantityKind ;
    rdfs:label "Temperature Gradient"@en ;
    qudt:applicableUnit unit:K-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H1T0D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD1/HTML/link/ifctemperaturegradientmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The temperature gradient measures the difference of a temperature per length, as for instance used in an external wall or its layers. It is usually measured in K/m." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperaturePerMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Temperature per Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:K-PER-T ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H1T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperaturePerTime_Squared a qudt:QuantityKind ;
    rdfs:label "Temperature per Time Squared"@en ;
    qudt:applicableUnit unit:DEG_F-PER-SEC2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperatureRateOfChange a qudt:QuantityKind ;
    rdfs:label "Temperature Rate of Change"@en ;
    qudt:applicableUnit unit:DEG_C-PER-HR,
        unit:DEG_C-PER-MIN,
        unit:DEG_C-PER-SEC,
        unit:DEG_C-PER-YR,
        unit:DEG_F-PER-HR,
        unit:DEG_F-PER-MIN,
        unit:DEG_F-PER-SEC,
        unit:DEG_R-PER-HR,
        unit:DEG_R-PER-MIN,
        unit:DEG_R-PER-SEC,
        unit:K-PER-HR,
        unit:K-PER-MIN,
        unit:K-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC2/HTML/link/ifctemperaturerateofchangemeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The \"Temperature Rate of Change\" measures the difference of a temperature per time (positive: rise, negative: fall), as for instance used with heat sensors. It is for example measured in K/s." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:TemperaturePerTime .

quantitykind:TemperatureRatio a qudt:QuantityKind ;
    rdfs:label "Temperature Ratio"@en ;
    qudt:applicableUnit unit:DEG_C-PER-K,
        unit:DEG_F-PER-K,
        unit:K-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:TemporalSummationFunction a qudt:QuantityKind ;
    rdfs:label "Temporal Summation Function"@en ;
    qudt:applicableUnit unit:PER-SEC-SR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Summation_(neurophysiology)#Temporal_summation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Temporal Summation Function\" is the ability of the human eye to produce a composite signal from the signals coming into an eye during a short time interval." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Tension a qudt:QuantityKind ;
    rdfs:label "Tension"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tension"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForceMagnitude .

quantitykind:ThermalAdmittance a qudt:QuantityKind ;
    rdfs:label "Thermal Admittance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-PER-HR-FT2-DEG_R,
        unit:BTU_IT-PER-SEC-FT2-DEG_R,
        unit:CAL_IT-PER-SEC-CentiM2-K,
        unit:CAL_TH-PER-SEC-CentiM2-K,
        unit:W-PER-M2-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:plaintextDescription "The heat transfer coefficient is also known as thermal admittance in the sense that the material may be seen as admitting heat to flow." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CoefficientOfHeatTransfer .

quantitykind:ThermalConductance a qudt:QuantityKind ;
    rdfs:label "Thermal Conductance"@en ;
    qudt:applicableUnit unit:W-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_insulation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = 1/R\\), where \\(R\\) is \"Thermal Resistance\""^^qudt:LatexString ;
    qudt:plainTextDescription "This quantity is also called \"Heat Transfer Coefficient\"." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:CoefficientOfHeatTransfer .

quantitykind:ThermalConductivity a qudt:QuantityKind ;
    rdfs:label "Thermal Conductivity"@en ;
    dcterms:description "In physics, thermal conductivity, \\(k\\) (also denoted as \\(\\lambda\\)), is the property of a material's ability to conduct heat. It appears primarily in Fourier's Law for heat conduction and is the areic heat flow rate divided by temperature gradient."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-FT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-IN-PER-FT2-HR-DEG_F,
        unit:BTU_IT-IN-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-IN-PER-HR-FT2-DEG_F,
        unit:BTU_IT-IN-PER-SEC-FT2-DEG_F,
        unit:BTU_IT-PER-SEC-FT-DEG_R,
        unit:BTU_TH-FT-PER-FT2-HR-DEG_F,
        unit:BTU_TH-FT-PER-HR-FT2-DEG_F,
        unit:BTU_TH-IN-PER-FT2-HR-DEG_F,
        unit:BTU_TH-IN-PER-FT2-SEC-DEG_F,
        unit:CAL_IT-PER-SEC-CentiM-K,
        unit:CAL_TH-PER-CentiM-SEC-DEG_C,
        unit:CAL_TH-PER-SEC-CentiM-K,
        unit:KiloCAL-PER-CentiM-SEC-DEG_C,
        unit:KiloCAL_IT-PER-HR-M-DEG_C,
        unit:W-PER-M-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_conductivity"^^xsd:anyURI ;
    qudt:expression "\\(thermal-k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\frac{\\varphi}{T}\\), where \\(\\varphi\\) is areic heat flow rate and \\(T\\) is temperature gradient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusionFactor a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_T = \\frac{k_T}{(x_A x_B)}\\), where \\(k_T\\) is the thermal diffusion ratio, and \\(x_A\\) and \\(x_B\\) are the local amount-of-substance fractions of the two substances \\(A\\) and \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Thermal diffusion is a phenomenon in which a temperature gradient in a mixture of fluids gives rise to a flow of one constituent relative to the mixture as a whole. in the context of the equation that describes thermal diffusion, the \"Thermal Diffusion Factor\" is ." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusionRatio a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "In a steady state of a binary mixture in which thermal diffusion occurs, \\(grad x_B  = -(\\frac{k_T}{T}) grad T\\), where \\(x_B\\) is the amount-of-substance fraction of the heavier substance \\(B\\), and \\(T\\) is the local thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Thermal Diffusion Ratio\" is proportional to the product of the component concentrations." ;
    qudt:symbol "k_T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusionRatioCoefficient a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_T  = kT \\cdot D\\), where \\(k_T\\) is the thermal diffusion ratio, and \\(D\\) is the diffusion coefficient."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Thermal Diffusion Coefficient\" is ." ;
    qudt:symbol "D_T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusivity a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusivity"@en ;
    dcterms:description "In heat transfer analysis, thermal diffusivity (usually denoted \\(\\alpha\\) but \\(a\\), \\(\\kappa\\),\\(k\\), and \\(D\\) are also used) is the thermal conductivity divided by density and specific heat capacity at constant pressure. The formula is: \\(\\alpha = {k \\over {\\rho c_p}}\\), where k is thermal conductivity (\\(W/(\\mu \\cdot K)\\)), \\(\\rho\\) is density (\\(kg/m^{3}\\)), and \\(c_p\\) is specific heat capacity (\\(\\frac{J}{(kg \\cdot K)}\\)) .The denominator \\(\\rho c_p\\), can be considered the volumetric heat capacity (\\(\\frac{J}{(m^{3} \\cdot K)}\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_diffusivity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_diffusivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{\\lambda}{\\rho   c_\\rho}\\), where \\(\\lambda\\) is thermal conductivity, \\(\\rho\\) is mass density and \\(c_\\rho\\) is specific heat capacity at constant pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime .

quantitykind:ThermalEfficiency a qudt:QuantityKind ;
    rdfs:label "Thermal Efficiency"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_efficiency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Thermal efficiency is a dimensionless performance measure of a thermal device such as an internal combustion engine, a boiler, or a furnace. The input to the device is heat, or the heat-content of a fuel that is consumed. The desired output is mechanical work, or heat, or possibly both." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThermalEnergyLength a qudt:QuantityKind ;
    rdfs:label "Thermal Energy Length"@en ;
    qudt:applicableUnit unit:BTU_IT-FT,
        unit:BTU_IT-IN ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalExpansionCoefficient a qudt:QuantityKind ;
    rdfs:label "Thermal Expansion Coefficient"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/DEV/IFC4_3/RC2/HTML/link/ifcthermalexpansioncoefficientmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The \"Thermal Expansion Coefficient\" is a measure of the thermal expansion coefficient of a material, which expresses its elongation (as a ratio) per temperature difference. It is usually measured in 1/K. A positive elongation per (positive) rise of temperature is expressed by a positive value." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ExpansionRatio .

quantitykind:ThermalResistance a qudt:QuantityKind ;
    rdfs:label "Thermal Resistance"@en ;
    dcterms:description "\\(\\textit{Thermal Resistance}\\) is a heat property and a measure of a temperature difference by which an object or material resists a heat flow (heat per time unit or thermal resistance). Thermal resistance is the reciprocal thermal conductance. the thermodynamic temperature difference divided by heat flow rate. Thermal resistance \\(R\\) has the units \\(\\frac{m^2 \\cdot K}{W}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG_F-HR-PER-BTU_IT,
        unit:K-PER-W ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_resistance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H1T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_resistance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:HeatFlowRate,
        quantitykind:ThermalInsulance,
        quantitykind:ThermodynamicTemperature .

quantitykind:ThermalResistivity a qudt:QuantityKind ;
    rdfs:label "Thermal Resistivity"@en ;
    dcterms:description "The reciprocal of thermal conductivity is thermal resistivity, measured in \\(kelvin-metres\\) per watt (\\(K \\cdot m/W\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG_F-HR,
        unit:FT2-PER-BTU_IT-IN,
        unit:K-M-PER-W,
        unit:M-K-PER-W ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalTransmittance a qudt:QuantityKind ;
    rdfs:label "Thermal Transmittance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-PER-HR-FT2-DEG_R,
        unit:BTU_IT-PER-SEC-FT2-DEG_R,
        unit:CAL_IT-PER-SEC-CentiM2-K,
        unit:CAL_TH-PER-SEC-CentiM2-K,
        unit:W-PER-M2-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Thermal_transmittance"^^xsd:anyURI ;
    qudt:plaintextDescription "Thermal transmittance is the rate of transfer of heat through matter. The thermal transmittance of a material (such as insulation or concrete) or an assembly (such as a wall or window) is expressed as a U-value. The concept of thermal transmittance is closely related to that of thermal resistance. The thermal resistance of a structure is the reciprocal of its thermal transmittance." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CoefficientOfHeatTransfer .

quantitykind:ThermalUtilizationFactor a qudt:QuantityKind ;
    rdfs:label "Thermal Utilization Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Thermal Utilization Factor\" in an infinite medium, is the ratio of the number of thermal absorbed in a fissionable nuclide or in a nuclear fuel, as specified, to the total number of thermal neutrons absorbed." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalUtilizationFactorForFission a qudt:QuantityKind ;
    rdfs:label "Thermal Utilization Factor For Fission"@en ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "Probability that a neutron that gets absorbed does so in the fuel material." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:ThermodynamicCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Critical Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:GAUSS,
        unit:Gamma,
        unit:Gs,
        unit:KiloGAUSS,
        unit:MicroT,
        unit:MilliT,
        unit:NanoT,
        unit:T,
        unit:T_Ab ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G_n - G_s = \\frac{1}{2}\\frac{B_c^2 \\cdot V}{\\mu_0}\\), where \\(G_n\\) and \\(G_s\\) are the Gibbs energies at zero magnetic flux density in a normal conductor and superconductor, respectively, \\(\\mu_0\\) is the magnetic constant, and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Thermodynamic Critical Magnetic Flux Density\" is the maximum magnetic field strength below which a material remains superconducting." ;
    qudt:symbol "B_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFluxDensity .

quantitykind:ThermodynamicEntropy a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Entropy"@en ;
    dcterms:description "Thermodynamic Entropy is a measure of the unavailability of a system’s energy to do work. It is a measure of the randomness of molecules in a system and is central to the second law of thermodynamics and the fundamental thermodynamic relation, which deal with physical processes and whether they occur spontaneously. The dimensions of entropy are energy divided by temperature, which is the same as the dimensions of Boltzmann's constant (\\(kB\\)) and heat capacity. The SI unit of entropy is \\(joule\\ per\\ kelvin\\). [Wikipedia]"^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloJ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerTemperature .

quantitykind:Thickness a qudt:QuantityKind ;
    rdfs:label "Thickness"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thickness"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.merriam-webster.com/dictionary/thickness"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Thickness\" is the the smallest of three dimensions: length, width, thickness." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ThomsonCoefficient a qudt:QuantityKind ;
    rdfs:label "Thomson Coefficient"@en ;
    qudt:applicableUnit unit:V-PER-K ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H-1T-3D0 ;
    qudt:informativeReference "http://www.daviddarling.info/encyclopedia/T/Thomson_effect.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Thomson Coefficient\" represents Thomson heat power developed, divided by the electric current and the temperature difference." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThrustCoefficient a qudt:QuantityKind ;
    rdfs:label "Thrust Coefficient"@en ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:plainTextDescription "The thrust force of a jet-propulsion engine per unit of frontal area per unit of incompressible dynamic pressure " ;
    qudt:symbol "C_{F}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThrustToMassRatio a qudt:QuantityKind ;
    rdfs:label "Thrust To Mass Ratio"@en ;
    qudt:applicableUnit unit:LB_F-PER-LB,
        unit:N-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:ThrustToWeightRatio a qudt:QuantityKind ;
    rdfs:label "Thrust To Weight Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Thrust-to-weight ratio is a ratio of thrust to weight of a rocket, jet engine, propeller engine, or a vehicle propelled by such an engine. It is a dimensionless quantity and is an indicator of the performance of the engine or vehicle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThrusterPowerToThrustEfficiency a qudt:QuantityKind ;
    rdfs:label "Thruster Power To Thrust Efficiency"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T1D0 ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TimeAveragedSoundIntensity a qudt:QuantityKind ;
    rdfs:label "Time averaged sound intensity"@en ;
    qudt:abbreviation "w/m2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_intensity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = \\frac{1}{t2 - t1} \\int_{t1}^{t2}i(t)dt\\), where \\(t1\\) and \\(t2\\) are the starting and ending times for the integral and \\(i\\) is sound intensity."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound intensity or acoustic intensity (\\(I\\)) is defined as the sound power \\(P_a\\) per unit area \\(A\\). The usual context is the noise measurement of sound intensity in the air at a listener's location as a sound energy quantity." ;
    qudt:symbol "I" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SoundIntensity .

quantitykind:TimePercentage a qudt:QuantityKind ;
    rdfs:label "Time Percentage"@en ;
    dcterms:isReplacedBy quantitykind:TimeRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:TimeSquared a qudt:QuantityKind ;
    rdfs:label "Time Squared"@en ;
    dcterms:isReplacedBy quantitykind:Time_Squared ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Time_Squared"^^xsd:anyURI ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TorquePerLength a qudt:QuantityKind ;
    rdfs:label "Torque per Length"@en ;
    qudt:applicableUnit unit:N-M-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalAngularMomentum a qudt:QuantityKind ;
    rdfs:label "Total Angular Momentum"@en ;
    dcterms:description "\"Total Angular Momentum\" combines both the spin and orbital angular momentum of all particles and fields. In atomic and nuclear physics, orbital angular momentum is usually denoted by \\(l\\) or \\(L\\) instead of \\(\\Lambda\\). The magnitude of \\(J\\) is quantized so that \\(J^2 = \\hbar^2 j(j + 1)\\), where \\(j\\) is the total angular momentum quantum number."^^qudt:LatexString ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_momentum#Spin.2C_orbital.2C_and_total_angular_momentum"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularMomentum .

quantitykind:TotalAngularMomentumQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Total Angular Momentum Quantum Number"@en ;
    dcterms:description "The \"Total Angular Quantum Number\" describes the magnitude of total angular momentum \\(J\\), where \\(j\\) refers to a specific particle and \\(J\\) is used for the whole system."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "j" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:TotalAtomicStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Atomic Stopping Power"@en ;
    qudt:applicableUnit unit:J-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/atomic-stopping-power"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_a = \\frac{S}{n}\\), where \\(S\\) is the total linear stopping power and \\(n\\) is the number density of the atoms in the substance."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Total Atomic Stopping Power\" for an ionizing particle passing through an element, is the particle's energy loss per atom within a unit area normal to the particle's path; equal to the linear energy transfer (energy loss per unit path length) divided by the number of atoms per unit volume." ;
    qudt:symbol "S_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalCrossSection a qudt:QuantityKind ;
    rdfs:label "Total Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Total Cross-section\" is related to the absorbance of the light intensity through Beer-Lambert's law. It is the sum of all cross-sections corresponding to the various reactions or processes between an incident particle of specified type and energy and a target particle." ;
    qudt:symbol "σₜ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:TotalCurrent a qudt:QuantityKind ;
    rdfs:label "Total Current"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_{tot}= I + I_D\\), where \\(I\\) is electric current and \\(I_D\\) is displacement current."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Total Current\" is the sum of the electric current that is flowing through a surface and the displacement current." ;
    qudt:symbol "I_t",
        "I_{tot}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DisplacementCurrent,
        quantitykind:ElectricCurrent .

quantitykind:TotalCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Total Current Density"@en ;
    qudt:applicableUnit unit:A-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_{tot}= J + J_D\\), where \\(J\\) is electric current density and \\(J_D\\) is displacement current density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_{tot}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Total Current Density\" is the sum of the electric current density and the displacement current density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DisplacementCurrentDensity,
        quantitykind:ElectricCurrentDensity .

quantitykind:TotalIonization a qudt:QuantityKind ;
    rdfs:label "Total Ionization"@en ;
    dcterms:description "\"Total Ionization\" by a particle, total mean charge, divided by the elementary charge, \\(e\\), of all positive ions produced by an ionizing charged particle along its entire path and along the paths of any secondary charged particles."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization#Classical_ionization"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(N = \\int N_i dl\\)."^^qudt:LatexString ;
    qudt:symbol "N_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalLinearStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Linear Stopping Power"@en ;
    qudt:applicableUnit unit:ERG-PER-CentiM,
        unit:EV-PER-ANGSTROM,
        unit:EV-PER-M,
        unit:J-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stopping_power_(particle_radiation)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S = -\\frac{dE}{dx}\\), where \\(-dE\\) is the energy decrement in the \\(x-direction\\) along an elementary path with the length \\(dx\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Total Linear Stopping Power\" is defined as the average energy loss of the particle per unit path length." ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalMassStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Mass Stopping Power"@en ;
    qudt:applicableUnit unit:J-M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stopping_power_(particle_radiation)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_m = \\frac{S}{\\rho}\\), where \\(S\\) is the total linear stopping power and \\(\\rho\\) is the mass density of the sample."^^qudt:LatexString ;
    qudt:plainTextDescription "If a substance is compared in gaseous and solid form, then the linear stopping powers of the two states are very different just because of the different density. One therefore often divides S(E) by the density of the material to obtain the \"Mass Stopping Power\". The mass stopping power then depends only very little on the density of the material." ;
    qudt:symbol "S_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalPressure a qudt:QuantityKind ;
    rdfs:label "Total Pressure"@en ;
    dcterms:description " The total pressure is the sum of the dynamic and static pressures, that is \\(P_0 = P + q\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "P_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:TouchThresholds a qudt:QuantityKind ;
    rdfs:label "Touch Thresholds"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_t}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Touch Thresholds\" are thresholds for touch, vibration and other stimuli to the skin." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Transmittance a qudt:QuantityKind ;
    rdfs:label "Transmittance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Transmittance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = \\frac{\\Phi_t}{\\Phi_m}\\), where \\(\\Phi_t\\) is the transmitted radiant flux or the transmitted luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau, T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Transmittance is the fraction of incident light (electromagnetic radiation) at a specified wavelength that passes through a sample." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TransmittanceDensity a qudt:QuantityKind ;
    rdfs:label "Transmittance Density"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(A_{10}(\\lambda) = -lg(\\tau(\\lambda))\\), where \\(\\tau\\) is the transmittance at a given wavelength \\(\\lambda\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Transmittance is the fraction of incident light (electromagnetic radiation) at a specified wavelength that passes through a sample." ;
    qudt:symbol "A_10, D" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TrueExhaustVelocity a qudt:QuantityKind ;
    rdfs:label "True Exhaust Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "u_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:Turbidity a qudt:QuantityKind ;
    rdfs:label "Turbidity"@en ;
    qudt:applicableUnit unit:NTU ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Turbidity"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Turbidity"^^xsd:anyURI ;
    qudt:plainTextDescription "Turbidity is the cloudiness or haziness of a fluid, or of air, caused by individual particles (suspended solids) that are generally invisible to the naked eye, similar to smoke in air. Turbidity in open water is often caused by phytoplankton and the measurement of turbidity is a key test of water quality. The higher the turbidity, the higher the risk of the drinkers developing gastrointestinal diseases, especially for immune-compromised people, because contaminants like virus or bacteria can become attached to the suspended solid. The suspended solids interfere with water disinfection with chlorine because the particles act as shields for the virus and bacteria. Similarly suspended solids can protect bacteria from UV sterilisation of water. Fluids can contain suspended solid matter consisting of particles of many different sizes. While some suspended material will be large enough and heavy enough to settle rapidly to the bottom container if a liquid sample is left to stand (the settleable solids), very small particles will settle only very slowly or not at all if the sample is regularly agitated or the particles are colloidal. These small solid particles cause the liquid to appear turbid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Turns a qudt:QuantityKind ;
    rdfs:label "Turns"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "\"Turns\" is the number of turns in a winding." ;
    qudt:symbol "N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Count .

quantitykind:VaporPermeability a qudt:QuantityKind ;
    rdfs:label "Vapor Permeability"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M2-PA-SEC,
        unit:NanoGM-PER-M2-PA-SEC,
        unit:PERM_Metric,
        unit:PERM_US ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T1D0 ;
    qudt:informativeReference "https://www.designingbuildings.co.uk/wiki/Vapour_Permeability"^^xsd:anyURI ;
    qudt:plaintextDescription "Vapour permeability, or \"Breathability\" in a building refers to the ease with which water vapour passes through building elements. Building elements where vapour permeability is poorly designed can result in condensation, leading to unhealthy living environments and degradation of fabric." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VaporPressure a qudt:QuantityKind ;
    rdfs:label "Vapor Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:plainTextDescription "A pressure that is the one exerted by a substance vapor in thermodynamic equilibrium with either its solid or liquid phase at a given temperature in a closed system." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:VentilationRatePerFloorArea a qudt:QuantityKind ;
    rdfs:label "Ventilation Rate per Floor Area"@en ;
    qudt:applicableUnit unit:L-PER-SEC-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Ventilation_(architecture)#Ventilation_rates_for_indoor_air_quality"^^xsd:anyURI ;
    qudt:plainTextDescription "Ventilation Rate is often expressed by the volumetric flowrate of outdoor air introduced to a building. However, ASHRAE now recommends ventilation rates dependent upon floor area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VerticalVelocity a qudt:QuantityKind ;
    rdfs:label "Vertical Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "The rate at which a body moves upwards at an angle of 90 degrees to the ground. It is the component of a projectile's velocity which is concerned with lifting the projectile." ;
    qudt:symbol "V_{Z}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:VideoFrameRate a qudt:QuantityKind ;
    rdfs:label "Video Frame Rate"@en ;
    qudt:applicableUnit unit:FRAME-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Frame_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Frame rate (also known as frame frequency) is the frequency (rate) at which an imaging device produces unique consecutive images called frames. The term applies equally well to computer graphics, video cameras, film cameras, and motion capture systems. Frame rate is most often expressed in frames per second (FPS) and is also expressed in progressive scan monitors as hertz (Hz)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InformationFlowRate .

quantitykind:VisibleRadiantEnergy a qudt:QuantityKind ;
    rdfs:label "Visible Radiant Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31892"^^xsd:anyURI ;
    qudt:latexDefinition "Q"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Visible Radiant Energy\", also known as luminous energy, is the energy of electromagnetic waves. It is energy of the particles that are emitted, transferred, or received as radiation." ;
    qudt:symbol "Q" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy ;
    skos:closeMatch quantitykind:LuminousEnergy .

quantitykind:VisionThresholds a qudt:QuantityKind ;
    rdfs:label "Vision Thresholds"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absolute_threshold#Vision"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_v}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Vision Thresholds\" is the thresholds of sensitivity of the eye." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VoltagePercentage a qudt:QuantityKind ;
    rdfs:label "Voltage Percentage"@en ;
    dcterms:isReplacedBy quantitykind:VoltageRatio ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-1L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:VolumeFraction a qudt:QuantityKind ;
    rdfs:label "Volume Fraction"@en ;
    qudt:applicableUnit unit:CentiM3-PER-CentiM3,
        unit:CentiM3-PER-M3,
        unit:DeciM3-PER-M3,
        unit:L-PER-L,
        unit:M3-PER-M3,
        unit:MicroL-PER-L,
        unit:MicroM3-PER-M3,
        unit:MicroM3-PER-MilliL,
        unit:MilliL-PER-L,
        unit:MilliL-PER-M3,
        unit:MilliM3-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volume_fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi_B = \\frac{x_B V_{m,B}^*}{\\sum x_i V_{m,i}^*}\\), where \\(V_{m,i}^*\\) is the molar volume of the pure substances \\(i\\) at the same temperature and pressure, \\(x_i\\) denotes the amount-of-substance fraction of substance \\(i\\), and \\(\\sum\\) denotes summation over all substances \\(i\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Volume Fraction\" is the volume of a constituent divided by the volume of all constituents of the mixture prior to mixing. Volume fraction is also called volume concentration in ideal solutions where the volumes of the constituents are additive (the volume of the solution is equal to the sum of the volumes of its ingredients)." ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:VolumePerArea a qudt:QuantityKind ;
    rdfs:label "Volume per Unit Area"@en ;
    qudt:applicableUnit unit:M3-PER-HA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumeStrain a qudt:QuantityKind ;
    rdfs:label "Volume Strain"@en ;
    dcterms:description "Volume, or volumetric, Strain, or dilatation (the relative variation of the volume) is the trace of the tensor \\(\\vartheta\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\vartheta = \\frac{\\Delta V}{V_0}\\), where \\(\\Delta V\\) is the increase in volume and \\(V_0\\) is the volume in a reference state to be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\vartheta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Strain .

quantitykind:VolumeThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Volume Thermal Expansion"@en ;
    qudt:applicableUnit unit:CentiM3-PER-K,
        unit:FT3-PER-DEG_F,
        unit:L-PER-K,
        unit:M3-PER-K,
        unit:MilliL-PER-K,
        unit:YD3-PER-DEG_F ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:plainTextDescription """When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion.

Different coefficients of thermal expansion can be defined for a substance depending on whether the expansion is measured by:

    * linear thermal expansion
    * area thermal expansion
    * volumetric thermal expansion

These characteristics are closely related. The volumetric thermal expansion coefficient can be defined for both liquids and solids. The linear thermal expansion can only be defined for solids, and is common in engineering applications.

Some substances expand when cooled, such as freezing water, so they have negative thermal expansion coefficients. [Wikipedia]""" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumetricFlux a qudt:QuantityKind ;
    rdfs:label "Volumetric Flux"@en ;
    qudt:applicableUnit unit:MilliL-PER-CentiM2-MIN,
        unit:MilliL-PER-CentiM2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Volumetric_flux"^^xsd:anyURI ;
    qudt:plainTextDescription "In fluid dynamics, the volumetric flux is the rate of volume flow across a unit area (m3·s−1·m−2).[Wikipedia]" ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumetricHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Volumetric Heat Capacity"@en ;
    dcterms:description "\\(\\textit{Volumetric Heat Capacity (VHC)}\\), also termed \\(\\textit{volume-specific heat capacity}\\), describes the ability of a given volume of a substance to store internal energy while undergoing a given temperature change, but without undergoing a phase transition. It is different from specific heat capacity in that the VHC is a \\(\\textit{per unit volume}\\) measure of the relationship between thermal energy and temperature of a material, while the specific heat is a \\(\\textit{per unit mass}\\) measure (or occasionally per molar quantity of the material)."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3-K,
        unit:LB_F-PER-IN2-DEG_F,
        unit:MilliBAR-PER-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Volumetric_heat_capacity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volumetric_heat_capacity"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Vorticity a qudt:QuantityKind ;
    rdfs:label "Vorticity"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(\\omega\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In the simplest sense, vorticity is the tendency for elements of a fluid to \"spin.\" More formally, vorticity can be related to the amount of \"circulation\" or \"rotation\" (or more strictly, the local angular rate of rotation) in a fluid. The average vorticity in a small region of fluid flow is equal to the circulation C around the boundary of the small region, divided by the area A of the small region. Mathematically, vorticity is a vector field and is defined as the curl of the velocity field." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularVelocity .

quantitykind:WarmReceptorThreshold a qudt:QuantityKind ;
    rdfs:label "Warm Receptor Threshold"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_w}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Warm Receptor Threshold\" is the threshold of warm-sensitive free nerve-ending." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:WarpingConstant a qudt:QuantityKind ;
    rdfs:label "Warping Constant"@en ;
    qudt:applicableUnit unit:M6 ;
    qudt:hasDimensionVector qkdv:A0E0L6I0M0H0T0D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD1/HTML/link/ifcwarpingconstantmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The \"Warping Constant\" is a measure for the warping constant or warping resistance of a cross section under torsional loading. It is usually measured in m⁶." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:WarpingMoment a qudt:QuantityKind ;
    rdfs:label "Warping Moment"@en ;
    qudt:applicableUnit unit:KiloN-M2,
        unit:N-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    qudt:informativeReference "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD1/HTML/link/ifcwarpingmomentmeasure.htm"^^xsd:anyURI ;
    qudt:plaintextDescription "The warping moment measure is a measure for the warping moment, which occurs in warping torsional analysis. It is usually measured in kNm²." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:WaterHorsepower a qudt:QuantityKind ;
    rdfs:label "Water Horsepower"@en ;
    dcterms:description "No pump can convert all of its mechanical power into water power. Mechanical power is lost in the pumping process due to friction losses and other physical losses. It is because of these losses that the horsepower going into the pump has to be greater than the water horsepower leaving the pump. The efficiency of any given pump is defined as the ratio of the water horsepower out of the pump compared to the mechanical horsepower into the pump."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "https://www.uaex.edu/environment-nature/water/docs/IrrigSmart-3241-A-Understanding-water-horsepower.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:Wavelength a qudt:QuantityKind ;
    rdfs:label "Wavelength"@en ;
    dcterms:description "For a monochromatic wave, \"wavelength\" is the distance between two successive points in a direction perpendicular to the wavefront where at a given instant the phase differs by \\(2\\pi\\). The wavelength of a sinusoidal wave is the spatial period of the wave—the distance over which the wave's shape repeats. The SI unit of wavelength is the meter."^^qudt:LatexString ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavelength"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\frac{c}{\\nu}\\), where \\(\\lambda\\) is the wave length, \\(\\nu\\) is the frequency, and \\(c\\) is the speed of light in the medium."^^qudt:LatexString ;
    qudt:symbol "λ" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Wavenumber a qudt:QuantityKind ;
    rdfs:label "Wavenumber"@en ;
    qudt:applicableUnit unit:DPI,
        unit:KY,
        unit:MESH,
        unit:PER-ANGSTROM,
        unit:PER-CentiM,
        unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavenumber"^^xsd:anyURI ;
    qudt:latexDefinition """\\(\\sigma = \\frac{\\nu}{c}\\), where \\(\\sigma\\) is the wave number, \\(\\nu\\) is the frequency, and \\(c\\) is the speed of light in the medium.

Or:

\\(k = \\frac{2\\pi}{\\lambda}= \\frac{2\\pi\\upsilon}{\\upsilon_p}=\\frac{\\omega}{\\upsilon_p}\\), where \\(\\upsilon\\) is the frequency of the wave, \\(\\lambda\\) is the wavelength, \\(\\omega = 2\\pi \\upsilon\\) is the angular frequency of the wave, and \\(\\upsilon_p\\) is the phase velocity of the wave."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Wavenumber\" is the spatial frequency of a wave - the number of waves that exist over a specified distance. More formally, it is the reciprocal of the wavelength. It is also the magnitude of the wave vector. Light passing through different media keeps its frequency, but not its wavelength or wavenumber. The unit for wavenumber commonly used in spectroscopy is centimetre to power minus one, PER-CM, rather than metre to power minus one, PER-M." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:AngularWavenumber ;
    skos:broader quantitykind:InverseLength .

quantitykind:WebTime a qudt:QuantityKind ;
    rdfs:label "Web Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:comment "Web Time" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:WebTimeAveragePressure a qudt:QuantityKind ;
    rdfs:label "Web Time Average Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:WebTimeAverageThrust a qudt:QuantityKind ;
    rdfs:label "Web Time Average Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:comment "Web Time Avg Thrust (Mlbf)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:Weight a qudt:QuantityKind ;
    rdfs:label "Weight"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Weight"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "The force with which a body is attracted toward an astronomical body.  Or, the product of the mass of a body and the acceleration acting on a body.  In a dynamic situation, the weight can be a multiple of that under resting conditions. Weight also varies on other planets in accordance with their gravity." ;
    qudt:symbol "bold letter W" ;
    qudt:url "http://en.wikipedia.org/wiki/Weight"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:Width a qudt:QuantityKind ;
    rdfs:label "Width"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "\"Width\" is the middle of three dimensions: length, width, thickness." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:WorkFunction a qudt:QuantityKind ;
    rdfs:label "Work Function"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Work_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Work Function\" is the energy difference between an electron at rest at infinity and an electron at a certain energy level. The minimum energy (usually measured in electronvolts) needed to remove an electron from a solid to a point immediately outside the solid surface (or energy needed to move an electron from the Fermi level into vacuum)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

voag:QUDT-SchemaCatalogEntry a vaem:CatalogEntry ;
    rdfs:label "QUDT Schema Catalog Entry" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

voag:supersededBy a owl:ObjectProperty ;
    rdfs:label "superseded by" ;
    rdfs:isDefinedBy <http://voag.linkedmodel.org/schema/voag> .

prov:wasDerivedFrom a rdf:Property ;
    rdfs:label "was derived from" ;
    rdfs:isDefinedBy <http://www.w3.org/ns/prov> ;
    rdfs:range qudt:Concept .

brick:Ablutions_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ablutions Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room for performing cleansing rituals before prayer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ablutions ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ablutions,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Absolute_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Absolute Humidity Sensor" ;
    rdfs:subClassOf brick:Humidity_Sensor ;
    skos:definition "Measures the present state of absolute humidity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Absolute ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Absolute,
        tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Absolute_Humidity ;
    brick:hasSubstance brick:Air .

brick:Absorption_Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Absorption Chiller" ;
    rdfs:subClassOf brick:Chiller ;
    skos:definition "A chiller that utilizes a thermal or/and chemical process to produce the refrigeration effect necessary to provide chilled water. There is no mechanical compression of the refrigerant taking place within the machine, as occurs within more traditional vapor compression type chillers."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Absorption ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Absorption,
        tag:Chiller,
        tag:Equipment .

brick:Acceleration_Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Acceleration Time Setpoint" ;
    rdfs:subClassOf brick:Time_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Acceleration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Acceleration,
        tag:Point,
        tag:Setpoint,
        tag:Time .

brick:Access_Reader a owl:Class,
        sh:NodeShape ;
    rdfs:label "Access Reader" ;
    rdfs:subClassOf brick:Access_Control_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Access ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reader ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Access,
        tag:Control,
        tag:Equipment,
        tag:Reader,
        tag:Security .

brick:Active_Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Active Chilled Beam" ;
    rdfs:subClassOf brick:Chilled_Beam ;
    skos:definition "A Chilled Beam with an integral primary air connection that induces air flow through the device."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Active ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Active,
        tag:Beam,
        tag:Chilled,
        tag:Equipment .

brick:Active_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Active Power Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/AC_power#Active,_reactive,_and_apparent_power> ;
    rdfs:subClassOf brick:Electric_Power_Sensor ;
    skos:definition "Measures the portion of power that, averaged over a complete cycle of the AC waveform, results in net transfer of energy in one direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Real ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Real,
        tag:Sensor ;
    brick:hasQuantity brick:Active_Power .

brick:Air_Flow_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Loss Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates loss in air flow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Loss,
        tag:Point .

brick:Air_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Loop" ;
    rdfs:subClassOf brick:Loop ;
    skos:definition "The set of connected equipment serving one path of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Loop .

brick:Alarm_Delay_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm Delay Parameter" ;
    rdfs:subClassOf brick:Delay_Parameter ;
    skos:definition "A parameter determining how long to delay an alarm after sufficient conditions have been met"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Delay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Delay,
        tag:Parameter,
        tag:Point .

brick:Ammonia_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ammonia Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ammonia ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ammonia,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Ammonia_Concentration ;
    brick:hasSubstance brick:Air .

brick:Atrium a owl:Class,
        sh:NodeShape ;
    rdfs:label "Atrium" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Atrium_(architecture)> ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "a large open-air or skylight covered space surrounded by a building."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Atrium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Atrium,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Audio_Visual_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Audio Visual Equipment" ;
    rdfs:subClassOf brick:ICT_Equipment ;
    skos:definition "Equipment related to sound and visual components such as speakers and displays."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Audio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:ICT ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Visual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Audio,
        tag:Equipment,
        tag:ICT,
        tag:Visual .

brick:Auditorium a owl:Class,
        sh:NodeShape ;
    rdfs:label "Auditorium" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space for performances or larger gatherings"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Auditorium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Auditorium,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Automatic_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automatic Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Automatic\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Automatic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Automatic,
        tag:Command,
        tag:Mode,
        tag:Point .

brick:Automatic_Tint_Window a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automatic Tint Window" ;
    rdfs:subClassOf brick:Shading_Equipment ;
    skos:definition "A window with tint control."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Automatic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Window ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Automatic,
        tag:Equipment,
        tag:Shade,
        tag:Tint,
        tag:Window .

brick:Availability_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Availability Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a piece of equipment, system, or functionality is available for operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Availability ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Availability,
        tag:Point,
        tag:Status .

brick:Average_Cooling_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Cooling Demand Sensor" ;
    rdfs:subClassOf brick:Cooling_Demand_Sensor ;
    skos:definition "Measures the average power consumed by a cooling process as the amount of power consumed over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Average,
        tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Average_Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Static_Pressure_Sensor ;
    skos:definition "The computed average static pressure of air in exhaust regions of an HVAC system over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Average_Heating_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Heating Demand Sensor" ;
    rdfs:subClassOf brick:Heating_Demand_Sensor ;
    skos:definition "Measures the average power consumed by a heating process as the amount of power consumed over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Average,
        tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Average_Supply_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Supply Air Flow Sensor" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Sensor ;
    owl:equivalentClass brick:Average_Discharge_Air_Flow_Sensor ;
    skos:definition "The computed average flow of supply air over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply .

brick:Average_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The computed average temperature of air in a zone, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone .

brick:Basement a owl:Class,
        sh:NodeShape ;
    rdfs:label "Basement" ;
    rdfs:subClassOf brick:Floor ;
    skos:definition "The floor of a building which is partly or entirely below ground level."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Basement ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basement,
        tag:Floor,
        tag:Location .

brick:Battery a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery" ;
    rdfs:subClassOf brick:Energy_Storage ;
    skos:definition "A container that stores chemical energy that can be converted into electricity and used as a source of power"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Energy,
        tag:Equipment,
        tag:Storage .

brick:Battery_Energy_Storage_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Energy Storage System" ;
    rdfs:subClassOf brick:Energy_Storage_System ;
    skos:definition "A collection of batteries that provides energy storage, along with their supporting equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Energy,
        tag:Storage,
        tag:System .

brick:Battery_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "A room used to hold batteries for backup power"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Battery_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the capacity of a battery"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Bench_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bench Space" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "For areas of play in a stadium, the area for partcipants and referees by the side of the field"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bench ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Bench,
        tag:Location,
        tag:Outdoor .

brick:Blind a owl:Class,
        sh:NodeShape ;
    rdfs:label "Blind" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Window_blind> ;
    rdfs:subClassOf brick:Shading_Equipment ;
    skos:definition "A window covering."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Blind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Blind,
        tag:Equipment,
        tag:Shade .

brick:Blind_Group a owl:Class,
        sh:NodeShape ;
    rdfs:label "Blind Group" ;
    rdfs:subClassOf brick:Shading_System ;
    skos:definition "A group of Blinds commonly attached to a single controller."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Blind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Group ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Blind,
        tag:Group,
        tag:Shade,
        tag:System .

brick:Boiler_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Boiler Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "A command to control a boiler"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Command,
        tag:Point .

brick:Booster_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Booster Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan activated to increase airflow beyond what is provided by the default configuration"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Booster ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Booster,
        tag:Equipment,
        tag:Fan .

brick:Box_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Box Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Command,
        tag:Mode,
        tag:Point .

brick:Breaker_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Breaker Panel" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Breaker Panel distributes power into various end-uses."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Breaker ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Breaker,
        tag:Equipment .

brick:Broadcast_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Broadcast Room" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A space to organize and manage a broadcast. Separate from studio"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Broadcast ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Broadcast,
        tag:Location,
        tag:Media,
        tag:Room,
        tag:Space .

brick:Building_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Setpoint for humidity in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of the entire building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Chilled_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Chilled Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Chilled_Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of chilled water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Chilled,
        tag:Equipment,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Chilled_Water .

brick:Building_Electrical_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Electrical Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Electrical_Meter ;
    skos:definition "A meter that measures the usage or consumption of electricity of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Electrical,
        tag:Equipment,
        tag:Meter .

brick:Building_Gas_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Gas Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Gas_Meter ;
    skos:definition "A meter that measures the usage or consumption of gas of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Gas,
        tag:Meter ;
    brick:hasSubstance brick:Natural_Gas .

brick:Building_Hot_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Hot Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Hot_Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of hot water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Hot,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Hot_Water .

brick:Building_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Water .

brick:Bus_Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bus Riser" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Bus Risers are commonly fed from a switchgear and rise up through a series of floors to the main power distribution source for each floor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Riser .

brick:Bypass_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of bypass air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Air .

brick:Bypass_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for bypass air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bypass,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Bypass_Air .

brick:Bypass_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Command" ;
    rdfs:subClassOf brick:Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Command,
        tag:Point .

brick:Bypass_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of bypass water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Water .

brick:Bypass_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of bypass water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Water .

brick:CO2_Alarm_Sensitivity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Alarm Sensitivity Parameter" ;
    rdfs:subClassOf brick:Alarm_Sensitivity_Parameter ;
    skos:definition "A parameter indicates the sensitivity to activate a CO2 alarm."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensitivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:CO2,
        tag:Parameter,
        tag:Point,
        tag:Sensitivity .

brick:CO2_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Differential Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the difference between CO2 levels of inside and outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Differential,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Differential Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Differential,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_CO_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Level Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Level,
        tag:Point,
        tag:Sensor .

brick:Cafeteria a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cafeteria" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space to serve food and beverages"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cafeteria ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cafeteria,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Capacity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Capacity Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Capacity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Capacity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Capacity .

brick:Ceiling_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ceiling Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan installed on the ceiling of a room for the purpose of air circulation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ceiling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ceiling,
        tag:Equipment,
        tag:Fan .

brick:Centrifugal_Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Centrifugal Chiller" ;
    rdfs:seeAlso <https://bellomyims.com/your-definitive-guide-to-centrifugal-chillers/> ;
    rdfs:subClassOf brick:Chiller ;
    skos:definition "A chiller that uses the vapor compression cycle to chill water. It throws off the heat collected from the chilled water plus the heat from the compressor to a water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Centrifugal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Centrifugal,
        tag:Chiller,
        tag:Equipment .

brick:Change_Filter_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Change Filter Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that a filter must be changed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Change ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Change,
        tag:Filter,
        tag:Point .

brick:Chilled_Water_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Coil" ;
    rdfs:subClassOf brick:Cooling_Coil ;
    skos:definition "A cooling element made of pipe or tube that removes heat from equipment, machines or airflows that is filled with chilled water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Coil,
        tag:Cool,
        tag:Equipment,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Setpoint,
        brick:Load_Shed_Differential_Pressure_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Chilled,
        tag:Differential,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure on either side of a chilled water valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Differential_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Step Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Step,
        tag:Water .

brick:Chilled_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Water_Differential_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between the entering water to the chiller or other water cooling device and leaving water from the same chiller or other water cooling device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Discharge_Flow_Sensor a owl:Class ;
    rdfs:label "Chilled Water Discharge Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Discharge_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Flow_Sensor .

brick:Chilled_Water_Discharge_Flow_Setpoint a owl:Class ;
    rdfs:label "Chilled Water Discharge Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Discharge_Water_Flow_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water__Flow_Setpoint .

brick:Chilled_Water_Discharge_Temperature_Sensor a owl:Class ;
    rdfs:label "Chilled Water Discharge Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Discharge_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Temperature_Sensor .

brick:Chilled_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    skos:definition "A collection of equipment that transport and regulate chilled water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Loop,
        tag:Water .

brick:Chilled_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that performs work on chilled water; typically part of a chilled water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Chilled_Water_Return_Flow_Sensor a owl:Class ;
    rdfs:label "Chilled Water Return Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Return_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Chilled_Water_Flow_Sensor .

brick:Chilled_Water_Return_Temperature_Sensor a owl:Class ;
    rdfs:label "Chilled Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Return_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Chilled_Water_Temperature_Sensor .

brick:Chilled_Water_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Water ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Supply_Flow_Sensor a owl:Class ;
    rdfs:label "Chilled Water Supply Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Supply_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Flow_Sensor .

brick:Chilled_Water_Supply_Flow_Setpoint a owl:Class ;
    rdfs:label "Chilled Water Supply Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Supply_Water_Flow_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Flow_Setpoint .

brick:Chilled_Water_Supply_Temperature_Sensor a owl:Class ;
    rdfs:label "Chilled Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Temperature_Sensor .

brick:Chilled_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water System" ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of chilled water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:System,
        tag:Water .

brick:Chilled_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water System Enable Command" ;
    rdfs:subClassOf brick:System_Enable_Command ;
    skos:definition "Enables operation of the chilled water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Command,
        tag:Enable,
        tag:Point,
        tag:System,
        tag:Water .

brick:Chilled_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve that modulates the flow of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Close_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Close Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Close_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Close ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Close,
        tag:Limit,
        tag:Parameter,
        tag:Point .

brick:Cloudage a brick:Quantity ;
    rdfs:label "Cloudage" ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The fraction of the sky obscured by clouds when observed from a particular location",
        "The fraction of the sky obscured by clouds when observed from a particular location"@en .

brick:Cold_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cold Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "in a gas separation unit, the insulated section that contains the low-temperature heat exchangers and distillation columns."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cold ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Cold,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Coldest_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Coldest Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The zone temperature that is coldest; drives the supply temperature of hot air. A computed value rather than a physical sensor. Also referred to as a 'Lowest Zone Air Temperature Sensor'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Coldest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Coldest,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone .

brick:Collection_Basin_Water_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Heater" ;
    rdfs:seeAlso <https://www.coolingtowerworld.com/c-30-basin-heater.aspx> ;
    rdfs:subClassOf brick:Water_Heater ;
    skos:definition "Basin heaters prevent cold water basin freeze-up, e.g. in cooling towers, closed circuit fluid coolers, or evaporative condensers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Equipment,
        tag:Heater,
        tag:Water .

brick:Collection_Basin_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "An alarm that indicates a high or low level of water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Basin,
        tag:Collection,
        tag:Level,
        tag:Point,
        tag:Water .

brick:Collection_Basin_Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Level Sensor" ;
    rdfs:subClassOf brick:Water_Level_Sensor ;
    skos:definition "Measures the level of the water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Collection_Basin_Water .

brick:Collection_Basin_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Collection_Basin_Water .

brick:Communication_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Communication Loss Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates a loss of communication e.g. with a device or controller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Communication ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Communication,
        tag:Loss,
        tag:Point .

brick:Compressor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Compressor" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "(1) device for mechanically increasing the pressure of a gas. (2) often described as being either open, hermetic, or semihermetic to describe how the compressor and motor drive is situated in relation to the gas or vapor being compressed. Types include centrifugal, axial flow, reciprocating, rotary screw, rotary vane, scroll, or diaphragm. 1. device for mechanically increasing the pressure of a gas. 2. specific machine, with or without accessories, for compressing refrigerant vapor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Compressor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Compressor,
        tag:Equipment .

brick:Concession a owl:Class,
        sh:NodeShape ;
    rdfs:label "Concession" ;
    rdfs:subClassOf brick:Food_Service_Room ;
    skos:definition "A space to sell food and beverages. Usually embedded in a larger space and does not include a space where people consume their purchases"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concessions ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Food ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concessions,
        tag:Food,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Condensate_Leak_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condensate Leak Alarm" ;
    rdfs:subClassOf brick:Leak_Alarm ;
    skos:definition "An alarm that indicates a leak of condensate from a cooling system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condensate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Condensate,
        tag:Leak,
        tag:Point .

brick:Condenser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A heat exchanger in which the primary heat transfer vapor changes its state to a liquid phase."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment .

brick:Condenser_Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Heat Exchanger" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "A heat exchanger in which the primary heat transfer vapor changes its state to a liquid phase."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Exchanger,
        tag:Heat .

brick:Condenser_Water_Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Bypass Valve" ;
    rdfs:subClassOf brick:Bypass_Valve ;
    skos:definition "A valve installed in a bypass line of a condenser water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Condenser,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Condenser_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Condenser_Water .

brick:Condenser_Water_Isolation_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Isolation Valve" ;
    rdfs:subClassOf brick:Isolation_Valve ;
    skos:definition "An isolation valve installed in the condenser water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Isolation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Isolation,
        tag:Valve,
        tag:Water .

brick:Condenser_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that is part of a condenser system; the pump circulates condenser water from the chiller back to the cooling tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Condenser_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water System" ;
    rdfs:seeAlso <https://www.linquip.com/blog/condenser-water-system-an-overview/> ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "A heat rejection system consisting of (typically) cooling towers, condenser water pumps, chillers and the piping connecting the components"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:System,
        tag:Water .

brick:Condenser_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve that modulates the flow of condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Condensing_Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condensing Natural Gas Boiler" ;
    rdfs:subClassOf brick:Natural_Gas_Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas and heat exchanger that capture and reuse any latent heat for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condensing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Condensing,
        tag:Equipment,
        tag:Gas,
        tag:Natural .

brick:Conference_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Conference Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space dedicated in which to hold a meetings"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conference ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conference,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Constant_Air_Volume_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Constant Air Volume Box" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Constant_air_volume> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:CAV ;
    skos:definition "A terminal unit for which supply air flow rate is constant and the supply air temperature is varied to meet thermal load"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Constant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Constant,
        tag:Equipment,
        tag:Volume .

brick:Contact_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Contact Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses or detects contact, such as for determining if a door is closed."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Contact ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Contact,
        tag:Point,
        tag:Sensor .

brick:Control_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Control Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space from which operations are managed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Control,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Cooling_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Setpoint .

brick:Cooling_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Command that enables cooling functionality in equipment but certain condition(s) must be met first before actively cooling. For the actively cooling control, see Cooling_Command."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cooling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Cooling,
        tag:Enable,
        tag:Point .

brick:Cooling_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Time .

brick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Cool,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Cooling_Tower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Tower" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Cooling_tower> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A cooling tower is a heat rejection device that rejects waste heat to the atmosphere through the cooling of a water stream to a lower temperature. Cooling towers may either use the evaporation of water to remove process heat and cool the working fluid to near the wet-bulb air temperature or, in the case of closed circuit dry cooling towers, rely solely on air to cool the working fluid to near the dry-bulb air temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Tower .

brick:Cooling_Tower_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Tower Fan" ;
    rdfs:seeAlso <https://highperformancehvac.com/cooling-tower-fan/> ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan that pulls air through a cooling tower and across the louvers where the water falls to aid in heat exchange by the process of evaporation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Fan,
        tag:Tower .

brick:Cooling_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that controls air temperature by modulating the amount of cold water flowing through a cooling coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Valve .

brick:Copy_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Copy Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for common office equipment, including printers and copiers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Copy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Copy,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Core_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Core Temperature Sensor" ;
    rdfs:subClassOf brick:Embedded_Temperature_Sensor ;
    skos:definition "Measures the internal temperature of the radiant layer at the heat source or sink level of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Core ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Core,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Core_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Core Temperature Setpoint" ;
    rdfs:subClassOf brick:Embedded_Temperature_Setpoint ;
    skos:definition "Sets temperature for the core, i.e. the temperature at the heat source or sink level, of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Core ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Core,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Cubicle a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cubicle" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "A smaller space set aside for an individual, but not with a door and without full-height walls"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cubicle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cubicle,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Current_Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Imbalance Sensor" ;
    rdfs:subClassOf brick:Imbalance_Sensor ;
    skos:definition "A sensor which measures the current difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Imbalance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Current_Imbalance .

brick:Current_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Current_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Limit,
        tag:Parameter,
        tag:Point .

brick:Current_Ratio_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Ratio Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the ratio of currents in a transformer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ratio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Electric,
        tag:Point,
        tag:Ratio,
        tag:Setpoint .

brick:Curtailment_Override_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Curtailment Override Command" ;
    rdfs:subClassOf brick:Override_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Curtailment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Override ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Curtailment,
        tag:Override,
        tag:Point .

brick:DC_Bus_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "DC Bus Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the voltage across a DC bus"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bus ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dc ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bus,
        tag:Dc,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Damper_Position_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Command" ;
    rdfs:subClassOf brick:Damper_Command,
        brick:Position_Command ;
    skos:definition "Controls the position (the degree of openness) of a damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Damper,
        tag:Point,
        tag:Position ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a damper in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Point,
        tag:Position,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the position of damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Point,
        tag:Position,
        tag:Setpoint ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Status" ;
    rdfs:subClassOf brick:Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Point,
        tag:Position,
        tag:Status ;
    brick:hasQuantity brick:Position .

brick:Deceleration_Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deceleration Time Setpoint" ;
    rdfs:subClassOf brick:Time_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deceleration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deceleration,
        tag:Point,
        tag:Setpoint,
        tag:Time .

brick:Dehumidification_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dehumidification Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dehumidification ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dehumidification,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Deionised_Water_Conductivity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionised Water Conductivity Sensor" ;
    rdfs:subClassOf brick:Conductivity_Sensor ;
    skos:definition "Measures the electrical conductance of deionised water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conductivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deionised ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conductivity,
        tag:Deionised,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Conductivity ;
    brick:hasSubstance brick:Deionized_Water .

brick:Deionised_Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionised Water Level Sensor" ;
    rdfs:subClassOf brick:Water_Level_Sensor ;
    skos:definition "Measures the height/level of deionised water in some container"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deionised ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deionised,
        tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Deionized_Water .

brick:Deionized_Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionized Water Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates deionized water leaks."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deionized ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Deionized,
        tag:Point,
        tag:Water .

brick:Derivative_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Derivative Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Derivative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Derivative,
        tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:Derivative_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Derivative Time Parameter" ;
    rdfs:subClassOf brick:Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Derivative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Derivative,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Detention_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Detention Room" ;
    rdfs:subClassOf brick:Security_Service_Room ;
    skos:definition "A space for the temporary involuntary confinement of people"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detention ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detention,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Dewpoint_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dewpoint Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets dew point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dewpoint,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Dewpoint .

brick:Differential_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Differential_Temperature_Setpoint ;
    skos:definition "Sets temperature of diffrential air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Air .

brick:Differential_Discharge_Return_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Differential Discharge Return Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Differential_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Differential_Entering_Leaving_Water_Temperature_Sensor .

brick:Differential_Pressure_Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Bypass Valve" ;
    rdfs:subClassOf brick:Bypass_Valve ;
    skos:definition "A 2-way, self contained proportional valve with an integral differential pressure adjustment setting."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Differential,
        tag:Equipment,
        tag:Pressure,
        tag:Valve .

brick:Differential_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Speed .

brick:Differential_Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Speed Setpoint" ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    skos:definition "Sets differential speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Differential_Supply_Return_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Differential Supply Return Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Differential_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Differential_Entering_Leaving_Water_Temperature_Sensor .

brick:Dimmer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dimmer" ;
    rdfs:subClassOf brick:Switch ;
    skos:definition "A switch providing continuous control over all or part of a lighting installation; typically potentiometer-based"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dimmer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dimmer,
        tag:Equipment,
        tag:Interface,
        tag:Switch .

brick:Direct_Expansion_Cooling_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direct Expansion Cooling Coil" ;
    rdfs:subClassOf brick:Cooling_Coil ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Expansion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Cool,
        tag:Direct,
        tag:Equipment,
        tag:Expansion .

brick:Direct_Expansion_Heating_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direct Expansion Heating Coil" ;
    rdfs:subClassOf brick:Heating_Coil ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Expansion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Direct,
        tag:Equipment,
        tag:Expansion,
        tag:Heat .

brick:Direction_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that affect the direction of some phenomenon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Direction,
        tag:Point ;
    brick:hasQuantity brick:Direction .

brick:Disable_Differential_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Differential Enthalpy Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of differential enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Disable,
        tag:Enthalpy,
        tag:Point .

brick:Disable_Differential_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Differential Temperature Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of differential temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Disable,
        tag:Point,
        tag:Temperature .

brick:Disable_Fixed_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Fixed Enthalpy Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of fixed enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Enthalpy,
        tag:Fixed,
        tag:Point .

brick:Disable_Fixed_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Fixed Temperature Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of fixed temperature temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Fixed,
        tag:Point,
        tag:Temperature .

brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Hot Water System Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    skos:definition "Disables hot water system when outside air temperature reaches the indicated value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Disable,
        tag:Hot,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:System,
        tag:Temperature,
        tag:Water .

brick:Disable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if functionality has been disabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Disable,
        tag:Point,
        tag:Status .

brick:Discharge_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    owl:equivalentClass brick:Supply_Air_Differential_Pressure_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Discharge_Chilled_Water a owl:Class ;
    rdfs:label "Discharge Chilled Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water .

brick:Discharge_Chilled_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Discharge Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Temperature_Setpoint .

brick:Discharge_Condenser_Water a owl:Class ;
    rdfs:label "Discharge Condenser Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water .

brick:Discharge_Condenser_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Discharge Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Flow_Sensor,
        brick:Discharge_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Flow_Sensor .

brick:Discharge_Condenser_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Discharge Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor,
        brick:Discharge_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Temperature_Sensor .

brick:Discharge_Condenser_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Discharge Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Temperature_Setpoint .

brick:Discharge_Hot_Water a owl:Class ;
    rdfs:label "Discharge Hot Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water .

brick:Discharge_Water a owl:Class ;
    rdfs:label "Discharge Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water .

brick:Disconnect_Switch a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disconnect Switch" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Building power is most commonly provided by utility company through a master disconnect switch (sometimes called a service disconnect) in the main electrical room of a building. The Utility Company provided master disconnect switch often owns or restricts access to this switch. There can also be other cases where a disconnect is placed into an electrical system to allow service cut-off to a portion of the building."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Disconnect ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Disconnect,
        tag:Equipment,
        tag:Switch .

brick:Displacement_Flow_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Displacement Flow Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed for low discharge air speeds to minimize turbulence and induction of room air. This diffuser is used with displacement ventilation systems."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Displacement ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Displacement,
        tag:Equipment,
        tag:Flow .

brick:Domestic_Hot_Water_Discharge_Temperature_Sensor a owl:Class ;
    rdfs:label "Domestic Hot Water Discharge Temperature Sensor" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Domestic_Hot_Water_Temperature_Sensor .

brick:Domestic_Hot_Water_Discharge_Temperature_Setpoint a owl:Class ;
    rdfs:label "Domestic Hot Water Discharge Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Hot_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint .

brick:Domestic_Hot_Water_Supply_Temperature_Sensor a owl:Class ;
    rdfs:label "Domestic Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Domestic_Hot_Water_Temperature_Sensor .

brick:Domestic_Hot_Water_Supply_Temperature_Setpoint a owl:Class ;
    rdfs:label "Domestic Hot Water Supply Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Hot_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint .

brick:Domestic_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of domestic hot water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:System,
        tag:Water .

brick:Domestic_Hot_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water System Enable Command" ;
    rdfs:subClassOf brick:Hot_Water_System_Enable_Command ;
    skos:definition "Enables operation of the domestic hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Domestic,
        tag:Enable,
        tag:Hot,
        tag:Point,
        tag:System,
        tag:Water .

brick:Domestic_Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Valve" ;
    rdfs:subClassOf brick:Hot_Water_Valve ;
    skos:definition "A valve regulating the flow of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Valve,
        tag:Water .

brick:Domestic_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Loop,
        tag:Water .

brick:Drench_Hose a owl:Class,
        sh:NodeShape ;
    rdfs:label "Drench Hose" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drench ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hose ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drench,
        tag:Emergency,
        tag:Equipment,
        tag:Hose,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Drive_Ready_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Drive Ready Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a hard drive or other storage device is ready to be used, e.g. in the context of RAID"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ready ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drive,
        tag:Point,
        tag:Ready,
        tag:Status .

brick:Dry_Cooler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dry Cooler" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A dry cooler is a fluid cooler that uses air, a relatively dry, non-liquid fluid to accomplish process cooling. (https://submer.com/submer-academy/library/dry-cooler/)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cooler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dry ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cooler,
        tag:Dry,
        tag:Equipment,
        tag:HVAC .

brick:EconCycle_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "EconCycle Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Econcycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Econcycle,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Economizer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Economizer" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Device that, on proper variable sensing, initiates control signals or actions to conserve energy. A control system that reduces the mechanical heating and cooling requirement."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Economizer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Economizer,
        tag:Equipment .

brick:Economizer_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Economizer Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that is part of an economizer that is used to module the flow of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Economizer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Economizer,
        tag:Equipment .

brick:Effective_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Effective_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Heating_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Return_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Room_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Effective_Discharge_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Effective_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Electric_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Electric_Radiator ;
    skos:definition "Electric heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Electric,
        tag:Equipment,
        tag:Radiator .

brick:Electric_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Boiler" ;
    rdfs:subClassOf brick:Boiler ;
    skos:definition "A closed, pressure vessel that uses electricity for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Electric,
        tag:Equipment .

brick:Elevator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Elevator> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that provides vertical transportation between floors, levels or decks of a building, vessel or other structure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Equipment .

brick:Embedded_Surface_System_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Surface System Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:ESS_Panel ;
    skos:definition "Radiant panel heating and cooling system where the energy heat source or sink is embedded in a radiant layer which is thermally insulated from the building structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Equipment,
        tag:Panel,
        tag:Surface,
        tag:System .

brick:Emergency_Air_Flow_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Air Flow System" ;
    rdfs:subClassOf brick:Safety_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Emergency,
        tag:Flow,
        tag:System .

brick:Emergency_Air_Flow_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Air Flow System Status" ;
    rdfs:subClassOf brick:System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Emergency,
        tag:Flow,
        tag:Point,
        tag:Status,
        tag:System .

brick:Emergency_Generator_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Generator Alarm" ;
    rdfs:subClassOf brick:Emergency_Alarm ;
    skos:definition "An alarm that indicates off-normal conditions associated with an emergency generator"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Emergency,
        tag:Generator,
        tag:Point .

brick:Emergency_Generator_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Generator Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if an emergency generator is active"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Generator,
        tag:Point,
        tag:Status .

brick:Emergency_Phone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Phone" ;
    rdfs:subClassOf brick:Intercom_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Phone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Intercom,
        tag:Phone,
        tag:Security .

brick:Emergency_Power_Off_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System" ;
    rdfs:subClassOf brick:Safety_System ;
    skos:definition "A system that can power down a single piece of equipment or a single system from a single point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Off,
        tag:Power,
        tag:System .

brick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Activated By High Temperature Status" ;
    rdfs:subClassOf brick:Emergency_Power_Off_System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:High,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System,
        tag:Temperature .

brick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Activated By Leak Detection System Status" ;
    rdfs:subClassOf brick:Emergency_Power_Off_System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detection,
        tag:Emergency,
        tag:Leak,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System .

brick:Emergency_Push_Button_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Push Button Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if an emergency button has been pushed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Button ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Push ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Button,
        tag:Emergency,
        tag:Point,
        tag:Push,
        tag:Status .

brick:Employee_Entrance_Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Employee Entrance Lobby" ;
    rdfs:subClassOf brick:Lobby ;
    skos:definition "An open space near an entrance that is typicaly only used for employees"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Employee ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entrance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Employee,
        tag:Entrance,
        tag:Lobby,
        tag:Location,
        tag:Space .

brick:Enable_Differential_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Differential Enthalpy Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of differential enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Enable,
        tag:Enthalpy,
        tag:Point .

brick:Enable_Differential_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Differential Temperature Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of differential temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Enable,
        tag:Point,
        tag:Temperature .

brick:Enable_Fixed_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Fixed Enthalpy Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of fixed enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Enthalpy,
        tag:Fixed,
        tag:Point .

brick:Enable_Fixed_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Fixed Temperature Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of fixed temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Fixed,
        tag:Point,
        tag:Temperature .

brick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Hot Water System Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    skos:definition "Enables hot water system when outside air temperature reaches the indicated value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enable,
        tag:Hot,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:System,
        tag:Temperature,
        tag:Water .

brick:Energy_Generation_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Generation Sensor" ;
    rdfs:subClassOf brick:Generation_Sensor ;
    skos:definition "A sensor measuring the amount of generated energy."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Generation,
        tag:Point,
        tag:Sensor .

brick:Energy_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Usage Sensor" ;
    rdfs:subClassOf brick:Energy_Sensor,
        brick:Usage_Sensor ;
    skos:definition "Measures the total amount of energy used over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Point,
        tag:Sensor,
        tag:Usage .

brick:Energy_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "A space or group of spaces that are managed or monitored as one unit for energy purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Location,
        tag:Zone .

brick:Entering_Chilled_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Chilled Water Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Entering_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Chilled_Water .

brick:Entering_Domestic_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Domestic Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Sensor,
        brick:Entering_Hot_Water_Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Entering,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Entering_Domestic_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Domestic Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Setpoint,
        brick:Entering_Water_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Entering,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Entering_Hot_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Flow Sensor" ;
    rdfs:subClassOf brick:Entering_Water_Flow_Sensor,
        brick:Hot_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Hot_Water .

brick:Entering_Hot_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Flow Setpoint" ;
    rdfs:subClassOf brick:Entering_Water_Flow_Setpoint,
        brick:Hot_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Hot_Water .

brick:Entering_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Medium Temperature Hot Water Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:High,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Medium Temperature Hot Water Temperature Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Temperature,
        tag:Water .

brick:Entering_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Medium Temperature Hot Water Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Temperature,
        tag:Water .

brick:Entering_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Medium Temperature Hot Water Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Low,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Entering_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Entering,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Entering_Water .

brick:Entering_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Entering,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Entering_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:Entering,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Entering_Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Alarm" ;
    rdfs:subClassOf brick:Water_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of the entering water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Entering,
        tag:Point,
        tag:Temperature,
        tag:Water .

brick:Entering_Water_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Entering_Water_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Entering,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Water .

brick:Entering_Water_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time,
        tag:Water .

brick:Entering_Water_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Entering,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature,
        tag:Water .

brick:Enthalpy_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enthalpy Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets enthalpy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enthalpy,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Enthalpy .

brick:Entrance a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entrance" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "The location and space of a building where people enter and exit the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entrance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entrance,
        tag:Location,
        tag:Space .

brick:Environment_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Environment Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "(also known as climatic chamber), enclosed space designed to create a particular environment."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Environment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Environment,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Equipment_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Equipment Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A telecommunications room where equipment that serves the building is stored"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Evaporative_Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Evaporative Heat Exchanger" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Evaporative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Evaporative,
        tag:Exchanger,
        tag:Heat .

brick:Even_Month_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Even Month Status" ;
    rdfs:subClassOf brick:Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Even ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Month ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Even,
        tag:Month,
        tag:Point,
        tag:Status .

brick:Exercise_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exercise Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "An indoor room used for exercise and physical activities"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Exercise ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Exercise,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Exhaust_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Exhaust,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between an upstream and downstream of an air duct or other air conduit used to exhaust air from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a exhaust air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Deadband_Setpoint,
        brick:Exhaust_Air_Stack_Flow_Setpoint ;
    skos:definition "Sets the size of a deadband of exhaust air stack flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Stack .

brick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Integral Time Parameter" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Stack,
        tag:Time .

brick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Proportional Band Parameter" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:Flow,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Stack .

brick:Exhaust_Air_Stack_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of air in the exhaust air stack"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Stack .

brick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Exhaust_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Exhaust .

brick:Exhaust_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving exhaust air -- air that must be removed from a space due to contaminants"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Exhaust,
        tag:Fan .

brick:Exhaust_Fan_Disable_Command a owl:Class ;
    rdfs:label "Exhaust Fan Disable Command" ;
    rdfs:subClassOf brick:Command ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Exhaust_Fan_Disable_Command is deprecated as a point name should not include more specific equipment names than top level equipment names" ;
    brick:isReplacedBy brick:Disable_Command .

brick:Exhaust_Fan_Enable_Command a owl:Class ;
    rdfs:label "Exhaust Fan Enable Command" ;
    rdfs:subClassOf brick:Command ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Exhaust_Fan_Enable_Command is deprecated as a point name should not include more specific equipment names than top level equipment names" ;
    brick:isReplacedBy brick:Enable_Command .

brick:Eye_Wash_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Eye Wash Station" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Eye ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Eye,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Fan_Coil_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Coil Unit" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Fan_coil_unit> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:FCU ;
    skos:definition "Terminal device consisting of a heating and/or cooling heat exchanger or 'coil' and fan that is used to control the temperature in the space where it is installed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Fan,
        tag:Unit .

brick:Fan_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan On Off Status" ;
    rdfs:subClassOf brick:Fan_Status,
        brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fan,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Fan_Speed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Speed Command" ;
    rdfs:subClassOf brick:Fan_Command ;
    skos:definition "Controls the speed of fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fan,
        tag:Point,
        tag:Speed .

brick:Fan_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "Variable-frequency drive for fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:VFD .

brick:Fault_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fault Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    skos:definition "Clears a fault status"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fault,
        tag:Point,
        tag:Reset .

brick:Field_Of_Play a owl:Class,
        sh:NodeShape ;
    rdfs:label "Field Of Play" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "The area of a stadium where athletic events occur, e.g. the soccer pitch"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Field ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Play ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Field,
        tag:Location,
        tag:Outdoor,
        tag:Play .

brick:Filter_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure on either side of a filter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Filter,
        tag:Point,
        tag:Pressure,
        tag:Sensor .

brick:Filter_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Filter,
        tag:Point,
        tag:Reset .

brick:Final_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Final Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "The last, high-efficiency filter installed in a sequence to remove the finest particulates from the substance being filtered"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Final ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter,
        tag:Final .

brick:Fire_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Safety .

brick:Fire_Alarm_Control_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Control Panel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Fire_alarm_control_panel> ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "Fire alarm panel is the controlling component of a fire alarm system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Control,
        tag:Equipment,
        tag:Fire,
        tag:Panel,
        tag:Safety .

brick:Fire_Alarm_Manual_Call_Point a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Manual Call Point" ;
    rdfs:seeAlso <http://www.coopermedc.com/products/manual-alarm-call-points> ;
    rdfs:subClassOf brick:Manual_Fire_Alarm_Activation_Equipment ;
    skos:definition "Manual alarm call points are designed for the purpose of raising an alarm manually once verification of a fire or emergency condition exists. by operating the push button or break glass the alarm signal can be raised."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Call ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Call,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Safety,
        tag:Station .

brick:Fire_Alarm_Pull_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Pull Station" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Manual_fire_alarm_activation#Fire_alarm_pull_station> ;
    rdfs:subClassOf brick:Manual_Fire_Alarm_Activation_Equipment ;
    skos:definition "An active fire protection device (usually wall-mounted) that when activated initiates an alarm on a fire alarm system. In its simplest form the user activates the alarm by pulling the handle down."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pull ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Pull,
        tag:Safety,
        tag:Station .

brick:Fire_Control_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Control Panel" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "A panel-mounted device that provides status and control of a fire safety system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Control,
        tag:Equipment,
        tag:Fire,
        tag:Panel,
        tag:Safety .

brick:Fire_Safety_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Safety System" ;
    rdfs:seeAlso <https://assetinsights.net/Glossary/G_Fire_Safety_System.html> ;
    rdfs:subClassOf brick:Safety_System ;
    skos:definition "A system containing devices and equipment that monitor, detect and suppress fire hazards"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Safety,
        tag:System .

brick:Fire_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the presence of fire"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Point,
        tag:Sensor .

brick:Fire_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "combustion chamber in a furnace or boiler."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Location,
        tag:Zone .

brick:First_Aid_Kit a owl:Class,
        sh:NodeShape ;
    rdfs:label "First Aid Kit" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Aid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:FirstAid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Aid,
        tag:Equipment,
        tag:FirstAid,
        tag:Safety .

brick:First_Aid_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "First Aid Room" ;
    rdfs:subClassOf brick:Medical_Room ;
    skos:definition "A room for a person with minor injuries can be treated or temporarily treated until transferred to a more advanced medical facility"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Aid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:First ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meidcal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Aid,
        tag:First,
        tag:Location,
        tag:Meidcal,
        tag:Room,
        tag:Space .

brick:Formaldehyde_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Formaldehyde Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of formaldehyde in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Formaldehyde ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Formaldehyde,
        tag:Level,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Formaldehyde_Concentration ;
    brick:hasSubstance brick:Air .

brick:Freeze_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Freeze Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a substance contained within a vessel has frozen"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freeze ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freeze,
        tag:Point,
        tag:Status .

brick:Freezer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Freezer" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "cold chamber usually kept at a temperature of 22°F to 31°F (–5°C to –1°C), with high-volume air circulation."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freezer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freezer,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Frequency_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frequency Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets frequency"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frequency,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Frequency .

brick:Fresh_Air_Fan a owl:Class ;
    rdfs:label "Fresh Air Fan" ;
    rdfs:subClassOf brick:Fan ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Fresh Air Fan is deprecated in favor of Outside Fan because the latter is a more accurate representation" ;
    brick:isReplacedBy brick:Outside_Fan .

brick:Frost_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frost Sensor" ;
    rdfs:subClassOf brick:Sensor,
        brick:Temperature_Sensor ;
    skos:definition "Senses the presence of frost or conditions that may cause frost"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frost ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frost,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Frost .

brick:Fume_Hood a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fume Hood" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A fume-collection device mounted over a work space, table, or shelf and serving to conduct unwanted gases away from the area enclosed."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hood ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fume,
        tag:Hood .

brick:Fume_Hood_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fume Hood Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of air in a fume hood"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hood ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Fume,
        tag:Hood,
        tag:Point,
        tag:Sensor .

brick:Gas_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a gas distribution source to represent how gas is distributed across multiple destinations"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Gas .

brick:Gas_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures gas concentration (other than CO2)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:Point,
        tag:Sensor .

brick:Gas_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas System" ;
    rdfs:subClassOf brick:System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:System .

brick:Gas_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Valve" ;
    rdfs:subClassOf brick:Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Gas,
        tag:Valve .

brick:Gatehouse a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gatehouse" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "The standalone building used to manage the entrance to a campus or building grounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gatehouse ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gatehouse,
        tag:Location,
        tag:Space .

brick:Generator_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Generator Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "A room for electrical equipment, specifically electrical generators."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Generator,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Hail_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hail Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures hail in terms of its size and damage potential"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hail,
        tag:Point,
        tag:Sensor ;
    brick:hasSubstance brick:Hail .

brick:Hallway a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hallway" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A common space, used to connect other parts of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hallway ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Hallway,
        tag:Location,
        tag:Space .

brick:Hazardous_Materials_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hazardous Materials Storage" ;
    rdfs:subClassOf brick:Storage_Room ;
    skos:definition "A storage space set aside (usually with restricted access) for the storage of materials that can be hazardous to living beings or the environment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hazardous ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Materials ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hazardous,
        tag:Location,
        tag:Materials,
        tag:Room,
        tag:Space,
        tag:Storage .

brick:Heat_Detector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Detector" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detector,
        tag:Equipment,
        tag:Fire,
        tag:Heat,
        tag:Safety .

brick:Heat_Exchanger_Discharge_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Heat Exchanger Discharge Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Heat_Exchanger_Leaving_Water_Temperature_Sensor .

brick:Heat_Exchanger_Supply_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Heat Exchanger Supply Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Heat_Exchanger_Leaving_Water_Temperature_Sensor .

brick:Heat_Exchanger_System_Enable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger System Enable Status" ;
    rdfs:subClassOf brick:Enable_Status,
        brick:System_Status ;
    skos:definition "Indicates if the heat exchanger system has been enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enable,
        tag:Exchanger,
        tag:Heat,
        tag:Point,
        tag:Status,
        tag:System .

brick:Heat_Recovery_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Recovery Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Recovery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Hot,
        tag:Recovery,
        tag:System,
        tag:Water .

brick:Heat_Sink_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Sink Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measure temperature of the heat sink on a device such as a VFD."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat_Sink ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat_Sink,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Heat_Wheel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Wheel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Thermal_wheel> ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "A rotary heat exchanger positioned within the supply and exhaust air streams of an air handling system in order to recover heat energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wheel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Wheel .

brick:Heat_Wheel_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Wheel VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "A VFD that drives a heat wheel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wheel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:VFD,
        tag:Wheel .

brick:Heating_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Setpoint .

brick:Heating_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Command that enables heating functionality in equipment but certain condition(s) must be met first before actively heating. For the actively heating control, see Heating_Command."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Heating,
        tag:Point .

brick:Heating_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Heating_Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Time .

brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Heat,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Heating_Thermal_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Thermal Power Sensor" ;
    rdfs:subClassOf brick:Thermal_Power_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Power,
        tag:Sensor,
        tag:Thermal .

brick:High_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the air flow is higher than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:High,
        tag:Point .

brick:High_CO2_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High CO2 Alarm" ;
    rdfs:subClassOf brick:CO2_Alarm ;
    skos:definition "A device that indicates high concentration of carbon dioxide."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:CO2,
        tag:High,
        tag:Point .

brick:High_Head_Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Head Pressure Alarm" ;
    rdfs:subClassOf brick:Pressure_Alarm ;
    skos:definition "An alarm that indicates a high pressure generated on the output side of a gas compressor in a refrigeration or air conditioning system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Head ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Head,
        tag:High,
        tag:Point,
        tag:Pressure .

brick:High_Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Humidity Alarm" ;
    rdfs:subClassOf brick:Humidity_Alarm ;
    skos:definition "An alarm that indicates high concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Humidity,
        tag:Point .

brick:High_Humidity_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Humidity Alarm Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter ;
    skos:definition "A parameter determining the humidity level at which to trigger a high humidity alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Humidity,
        tag:Parameter,
        tag:Point .

brick:High_Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Outside_Air_Lockout_Temperature_Differential_Parameter ;
    skos:definition "The upper bound of the outside air temperature lockout range"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:High,
        tag:Lockout,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:High_Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:High_Temperature_Alarm,
        brick:Return_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates that return air temperature is too high"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:High,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:High_Static_Pressure_Cutout_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Static Pressure Cutout Setpoint Limit" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a High_Static_Pressure_Cutout_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cutout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cutout,
        tag:High,
        tag:Limit,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:High_Supply_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Supply Air Temperature Alarm" ;
    rdfs:subClassOf brick:High_Temperature_Alarm,
        brick:Supply_Air_Temperature_Alarm ;
    owl:equivalentClass brick:High_Discharge_Air_Temperature_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:High,
        tag:Point,
        tag:Supply,
        tag:Temperature .

brick:High_Temperature_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Alarm Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    skos:definition "A parameter determining the temperature level at which to trigger a high temperature alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:High_Temperature_Hot_Water_Discharge_Temperature_Sensor a owl:Class ;
    rdfs:label "High Temperature Hot Water Discharge Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Discharge_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_High_Temperature_Hot_Water_Temperature_Sensor .

brick:High_Temperature_Hot_Water_Return_Temperature_Sensor a owl:Class ;
    rdfs:label "High Temperature Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Return_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_High_Temperature_Hot_Water_Temperature_Sensor .

brick:High_Temperature_Hot_Water_Supply_Temperature_Sensor a owl:Class ;
    rdfs:label "High Temperature Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_High_Temperature_Hot_Water_Temperature_Sensor .

brick:Hold_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hold Status" ;
    rdfs:subClassOf brick:Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hold ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hold,
        tag:Point,
        tag:Status .

brick:Hospitality_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hospitality Box" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room at a stadium, usually overlooking the field of play, that is physical separate from the other seating at the venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hospitality ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Hospitality,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Hot_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "hot air chamber forming part of an air handler."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Hot,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Hot_Water_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Hot_Water_Radiator ;
    skos:definition "Hydronic heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Hot,
        tag:Radiator,
        tag:Water .

brick:Hot_Water_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Coil" ;
    rdfs:subClassOf brick:Heating_Coil ;
    skos:definition "A heating element typically made of pipe, tube or wire that emits heat that is filled with hot water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:Hot,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Hot_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_Sensor,
        brick:Leaving_Hot_Water_Temperature_Sensor,
        brick:Water_Differential_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between the entering water to the boiler or other water heating device and leaving water from the same boiler or other water heating device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Hot_Water_Discharge_Flow_Sensor a owl:Class ;
    rdfs:label "Hot Water Discharge Flow Sensor" ;
    rdfs:subClassOf brick:Discharge_Water_Flow_Sensor,
        brick:Hot_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Hot_Water_Leaving_Flow_Sensor .

brick:Hot_Water_Discharge_Flow_Setpoint a owl:Class ;
    rdfs:label "Hot Water Discharge Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Water_Flow_Setpoint,
        brick:Hot_Water_Flow_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Hot_Water_Leaving_Flow_Setpoint .

brick:Hot_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    skos:definition "A collection of equipment that transport and regulate hot water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Loop,
        tag:Water .

brick:Hot_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that performs work on hot water; typically part of a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Pump,
        tag:Water .

brick:Hot_Water_Return_Flow_Sensor a owl:Class ;
    rdfs:label "Hot Water Return Flow Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Sensor,
        brick:Return_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Hot_Water_Entering_Flow_Sensor .

brick:Hot_Water_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of hot air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Water ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Supply_Flow_Sensor a owl:Class ;
    rdfs:label "Hot Water Supply Flow Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Sensor,
        brick:Supply_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Hot_Water_Leaving_Flow_Sensor .

brick:Hot_Water_Supply_Flow_Setpoint a owl:Class ;
    rdfs:label "Hot Water Supply Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Hot_Water_Leaving_Flow_Setpoint .

brick:Hot_Water_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Usage Sensor" ;
    rdfs:subClassOf brick:Water_Usage_Sensor ;
    skos:definition "Measures the amount of hot water that is consumed, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Usage,
        tag:Water .

brick:Humidification_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidification Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidification ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidification,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Humidifier a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidifier" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A device that adds moisture to air or other gases"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidifier ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Humidifier .

brick:Humidifier_Fault_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidifier Fault Status" ;
    rdfs:subClassOf brick:Fault_Status ;
    skos:definition "Indicates the presence of a fault in a humidifier"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidifier ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fault,
        tag:Humidifier,
        tag:Point,
        tag:Status .

brick:Humidify_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidify Command" ;
    rdfs:subClassOf brick:Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidify ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Humidify,
        tag:Point ;
    brick:hasQuantity brick:Humidity .

brick:Humidity_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of humidity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity .

brick:Humidity_Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Tolerance Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter,
        brick:Tolerance_Parameter ;
    skos:definition "A parameter determining the difference between upper and lower limits of humidity."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Parameter,
        tag:Point,
        tag:Tolerance .

brick:IDF a owl:Class,
        sh:NodeShape ;
    rdfs:label "IDF" ;
    rdfs:subClassOf brick:Distribution_Frame ;
    skos:definition "An room for an intermediate distribution frame, where cables carrying signals from the main distrubtion frame terminate and then feed out to endpoints"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:IDF ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:IDF,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Ice_Tank_Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ice Tank Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water leaving an ice tank"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ice ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tank ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ice,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Tank,
        tag:Temperature,
        tag:Water .

brick:Illuminance_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Illuminance Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Target Illuminance of the zone."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Point,
        tag:Setpoint .

brick:Induction_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Induction Unit" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device with an primary air connection and integrated coil and condensate pan that performs sensible and latent cooling of a space. Essentially an Active Chilled Beam with a built in condensate pan."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Induction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Induction,
        tag:Unit .

brick:Information_Area a owl:Class,
        sh:NodeShape ;
    rdfs:label "Information Area" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "An information booth or kiosk where visitors would look for information"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Information ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Information,
        tag:Location,
        tag:Outdoor .

brick:Inside_Face_Surface_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inside Face Surface Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the inside surface (relative to the space) of the radiant panel of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Inside,
        tag:Point,
        tag:Sensor,
        tag:Surface,
        tag:Temperature .

brick:Inside_Face_Surface_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inside Face Surface Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the inside face surface temperature of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Inside,
        tag:Point,
        tag:Setpoint,
        tag:Surface,
        tag:Temperature .

brick:Intake_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intake Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "Filters air intake"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intake ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Intake .

brick:Intake_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intake Air Temperature Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Sensor ;
    skos:definition "Measures air at the interface between the building and the outside"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intake ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Intake,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Intrusion_Detection_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intrusion Detection Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intrusion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detection,
        tag:Equipment,
        tag:Intrusion,
        tag:Security .

brick:Inverter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inverter" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A device that changes direct current into alternating current"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inverter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Inverter .

brick:Janitor_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Janitor Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for the storage of cleaning equipment and supplies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Janitor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Janitor,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Jet_Nozzle_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Jet Nozzle Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed to produce high velocity discharge air stream to throw the air over a large distance or target the air stream to a localize area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Jet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Nozzle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment,
        tag:Jet,
        tag:Nozzle .

brick:Laminar_Flow_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Laminar Flow Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed for low discharge air speeds to provide uniform and unidirectional air pattern which minimizes room air entrainment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laminar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment,
        tag:Flow,
        tag:Laminar .

brick:Last_Fault_Code_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Last Fault Code Status" ;
    rdfs:subClassOf brick:Fault_Status ;
    skos:definition "Indicates the last fault code that occurred"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Code ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Last ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Code,
        tag:Fault,
        tag:Last,
        tag:Point,
        tag:Status .

brick:Lead_Lag_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead Lag Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Enables lead/lag operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lag ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Lag,
        tag:Lead,
        tag:Point .

brick:Lead_Lag_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead Lag Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if lead/lag operation is enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lag ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lag,
        tag:Lead,
        tag:Point,
        tag:Status .

brick:Lead_On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead On Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "Controls the active/inactive status of the \"lead\" part of a lead/lag system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Lead,
        tag:Off,
        tag:On,
        tag:Point .

brick:Leaving_Hot_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Flow Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Sensor,
        brick:Leaving_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Hot_Water .

brick:Leaving_Hot_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Flow Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Setpoint,
        brick:Leaving_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Hot_Water .

brick:Leaving_Medium_Temperature_Hot_Water_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Medium Temperature Hot Water Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Leaving,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Medium Temperature Hot Water Temperature Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Temperature,
        tag:Water .

brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Medium Temperature Hot Water Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Temperature,
        tag:Water .

brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Medium Temperature Hot Water Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Low,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Leaving,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Leaving_Water .

brick:Leaving_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Integral,
        tag:Leaving,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Leaving_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:Leaving,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Leaving_Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Alarm" ;
    rdfs:subClassOf brick:Water_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of the leaving water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Leaving,
        tag:Point,
        tag:Temperature,
        tag:Water .

brick:Leaving_Water_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Water .

brick:Leaving_Water_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:Leaving,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time,
        tag:Water .

brick:Leaving_Water_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Leaving,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature,
        tag:Water .

brick:Library a owl:Class,
        sh:NodeShape ;
    rdfs:label "Library" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A place for the storage and/or consumption of physical media, e.g. books, periodicals, and DVDs/CDs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Library ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Library,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Light_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Light Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of the light provided by the device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Light ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Light,
        tag:Point .

brick:Lighting_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "The equipment, devices and interfaces that serve or are a part of the lighting subsystem in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lighting,
        tag:System .

brick:Lighting_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Zone" ;
    rdfs:subClassOf brick:Zone ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lighting,
        tag:Location,
        tag:Zone .

brick:Liquid_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Liquid Detection Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Detection,
        tag:Liquid,
        tag:Point .

brick:Load_Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Current Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Measures the current consumed by a load"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Load,
        tag:Point,
        tag:Sensor .

brick:Loading_Dock a owl:Class,
        sh:NodeShape ;
    rdfs:label "Loading Dock" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A part of a facility where delivery trucks can load and unload. Usually partially enclosed with specific traffic lanes leading to the dock"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dock ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loading ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dock,
        tag:Loading,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Locally_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Locally On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Locally ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Locally,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Lockout_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lockout Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a piece of equipment, system, or functionality has been locked out from operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lockout,
        tag:Point,
        tag:Status .

brick:Low_Battery_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Battery Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the battery is low."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Battery,
        tag:Low,
        tag:Point .

brick:Low_Freeze_Protect_Temperature_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Freeze Protect Temperature Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freeze ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Protect ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freeze,
        tag:Low,
        tag:Parameter,
        tag:Point,
        tag:Protect,
        tag:Temperature .

brick:Low_Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Humidity Alarm" ;
    rdfs:subClassOf brick:Humidity_Alarm ;
    skos:definition "An alarm that indicates low concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Low,
        tag:Point .

brick:Low_Humidity_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Humidity Alarm Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter ;
    skos:definition "A parameter determining the humidity level at which to trigger a low humidity alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Low,
        tag:Parameter,
        tag:Point .

brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Outside_Air_Lockout_Temperature_Differential_Parameter ;
    skos:definition "The lower bound of the outside air temperature lockout range"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Lockout,
        tag:Low,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Low_Outside_Air_Temperature_Enable_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Temperature Enable Differential Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Enable_Differential_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Enable,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Low_Outside_Air_Temperature_Enable_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Temperature Enable Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enable,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Low_Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:Low_Temperature_Alarm,
        brick:Return_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates that return air temperature is too low"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:Low_Suction_Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Suction Pressure Alarm" ;
    rdfs:subClassOf brick:Pressure_Alarm ;
    skos:definition "An alarm that indicates a low suction pressure in the compressor in a refrigeration or air conditioning system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Suction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Pressure,
        tag:Suction .

brick:Low_Supply_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Supply Air Flow Alarm" ;
    rdfs:subClassOf brick:Low_Air_Flow_Alarm ;
    owl:equivalentClass brick:Low_Discharge_Air_Flow_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Low,
        tag:Point,
        tag:Supply .

brick:Low_Supply_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Supply Air Temperature Alarm" ;
    rdfs:subClassOf brick:Low_Temperature_Alarm,
        brick:Supply_Air_Temperature_Alarm ;
    owl:equivalentClass brick:Low_Discharge_Air_Temperature_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Supply,
        tag:Temperature .

brick:Low_Temperature_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Temperature Alarm Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    skos:definition "A parameter determining the temperature level at which to trigger a low temperature alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Low_Voltage_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Voltage Alarm" ;
    rdfs:subClassOf brick:Voltage_Alarm ;
    skos:definition "An alarm that indicates the voltage is lower than its normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Voltage .

brick:Lowest_Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lowest Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Static_Pressure_Sensor ;
    skos:definition "The lowest observed static pressure of air in exhaust regions of an HVAC system over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lowest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Lowest,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Luminaire a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminaire" ;
    rdfs:subClassOf brick:Lighting ;
    skos:definition "A complete lighting unit consisting of a lamp or lamps and ballast(s) (when applicable) together with the parts designed to distribute the light, to position and protect the lamps, and to connect the lamps to the power supply."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminaire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Luminaire .

brick:Luminaire_Driver a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminaire Driver" ;
    rdfs:subClassOf brick:Lighting ;
    skos:definition "A power source for a luminaire"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Driver ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminaire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Driver,
        tag:Equipment,
        tag:Luminaire .

brick:Luminance_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Luminance,
        tag:Point .

brick:Luminance_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of luminance delivered by a lighting system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Luminance,
        tag:Point .

brick:Luminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the luminous intensity per unit area of light travelling in a given direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Luminance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Luminance .

brick:Luminance_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets luminance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Luminance,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Luminance .

brick:MDF a owl:Class,
        sh:NodeShape ;
    rdfs:label "MDF" ;
    rdfs:subClassOf brick:Distribution_Frame ;
    skos:definition "A room for the Main Distribution Frame, the central place of a building where cables carrying signals meet and connect to the outside world"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:MDF ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:Location,
        tag:MDF,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Mail_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mail Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room where mail is recieved and sorted for distribution to the rest of the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mail,
        tag:Room,
        tag:Space .

brick:Maintenance_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Maintenance Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Maintenance\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Maintenance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Maintenance,
        tag:Mode,
        tag:Point .

brick:Maintenance_Required_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Maintenance Required Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that repair/maintenance is required on an associated device or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Maintenance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Required ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Maintenance,
        tag:Point,
        tag:Required .

brick:Majlis a owl:Class,
        sh:NodeShape ;
    rdfs:label "Majlis" ;
    rdfs:subClassOf brick:Lounge ;
    skos:definition "In Arab countries, an Majlis is a private lounge where visitors are recieved and entertained"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lounge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Majlis ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Lounge,
        tag:Majlis,
        tag:Space .

brick:Makeup_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Makeup Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve regulating the flow of makeup water into a water holding tank, e.g. a cooling tower, hot water tank"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Makeup ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fluid,
        tag:Liquid,
        tag:Makeup,
        tag:Valve,
        tag:Water .

brick:Manual_Auto_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Manual Auto Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a system is under manual or automatic operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Auto ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Auto,
        tag:Manual,
        tag:Point,
        tag:Status .

brick:Massage_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Massage Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "Usually adjunct to an athletic facility, a private/semi-private space where massages are performed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Massage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Massage,
        tag:Room,
        tag:Space .

brick:Max_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Setpoint for maximum air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Chilled Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Chilled_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Max_Frequency_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Frequency Command" ;
    rdfs:subClassOf brick:Frequency_Command ;
    skos:definition "Sets the maximum permitted frequency"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Frequency,
        tag:Max,
        tag:Point .

brick:Max_Fresh_Air_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Fresh Air Setpoint Limit" ;
    rdfs:subClassOf brick:Fresh_Air_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Fresh_Air_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fresh,
        tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint .

brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Hot Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Hot_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Max_Load_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Load Setpoint" ;
    rdfs:subClassOf brick:Load_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Outside_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Outside Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Outside_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Position_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Position Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Position_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Point,
        tag:Position,
        tag:Setpoint .

brick:Max_Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Speed_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Max_Supply_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Supply Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Max_Static_Pressure_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Supply_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply .

brick:Max_Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Temperature_Setpoint_Limit,
        brick:Supply_Air_Temperature_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Discharge_Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en,
        "Parameter for the maximum value of a Supply_Air_Temperature_Setpoint"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Max_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "Alarm indicating that the maximum water level was reached"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Max,
        tag:Point,
        tag:Water .

brick:Max_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Setpoint for max water temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

brick:Media_Hot_Desk a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Hot Desk" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A non-enclosed space used by members of the media temporarily to cover an event while they are present at a venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Desk ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Desk,
        tag:Location,
        tag:Media,
        tag:Space .

brick:Media_Production_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Production Room" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A enclosed space used by media professionals for the production of media"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Production ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Production,
        tag:Room,
        tag:Space .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Temperature .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Setpoint" ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure between sections of a medium temperature hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Discharge_Temperature_Sensor a owl:Class ;
    rdfs:label "Medium Temperature Hot Water Discharge Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Discharge_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Sensor .

brick:Medium_Temperature_Hot_Water_Return_Temperature_Sensor a owl:Class ;
    rdfs:label "Medium Temperature Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Return_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_Sensor a owl:Class ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Sensor .

brick:Methane_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Methane Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of methane in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Methane ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Methane,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Methane_Concentration ;
    brick:hasSubstance brick:Air .

brick:Min_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Setpoint for minimum air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Chilled Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Chilled_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Min_Frequency_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Frequency Command" ;
    rdfs:subClassOf brick:Frequency_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Frequency,
        tag:Min,
        tag:Point .

brick:Min_Fresh_Air_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Fresh Air Setpoint Limit" ;
    rdfs:subClassOf brick:Fresh_Air_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Fresh_Air_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fresh,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint .

brick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Hot Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Hot_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Min_Load_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Load Setpoint" ;
    rdfs:subClassOf brick:Load_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Outside_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Outside Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Outside_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Position_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Position Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Position_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Point,
        tag:Position,
        tag:Setpoint .

brick:Min_Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Speed_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Min_Supply_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Supply Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Min_Static_Pressure_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Supply_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply .

brick:Min_Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Temperature_Setpoint_Limit,
        brick:Supply_Air_Temperature_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Discharge_Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en,
        "Parameter for the minimum value of a Supply_Air_Temperature_Setpoint"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Min_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Min_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "Alarm indicating that the minimum water level was reached"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Min,
        tag:Point,
        tag:Water .

brick:Min_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Setpoint for min water temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

brick:Mixed_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "A filter that is applied to the mixture of recirculated and outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Mixed .

brick:Mixed_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Mixed,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the humidity of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Mixed,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Mixed,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Mixed,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of the mixed outside and return air streams"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Mixed .

brick:Motor_Control_Center a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Control Center" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "The Motor Control Center is a specialized type of switchgear which provides electrical power to major mechanical systems in the building such as HVAC components."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Center ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Center,
        tag:Control,
        tag:Equipment .

brick:Motor_Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Current Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Measures the current consumed by a motor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Motor,
        tag:Point,
        tag:Sensor .

brick:Motor_Direction_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Direction Status" ;
    rdfs:subClassOf brick:Direction_Status ;
    skos:definition "Indicates which direction a motor is operating in, e.g. forward or reverse"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Motor,
        tag:Point,
        tag:Status .

brick:Motor_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Motor_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Point,
        tag:Sensor,
        tag:Speed .

brick:Motor_Torque_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Torque Sensor" ;
    rdfs:subClassOf brick:Torque_Sensor ;
    skos:definition "Measures the torque, or rotating power, of a motor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Torque ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Point,
        tag:Sensor,
        tag:Torque .

brick:NO2_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "NO2 Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of NO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:NO2,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:NO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:Natural_Gas_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Flow Sensor" ;
    rdfs:subClassOf brick:Flow_Sensor ;
    skos:definition "Measures the rate of flow of natural gas"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Gas,
        tag:Natural,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Natural_Gas .

brick:Natural_Gas_Seismic_Shutoff_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Seismic Shutoff Valve" ;
    rdfs:subClassOf brick:Valve ;
    skos:definition "Valves that automatically shut off your natural gas service when an earthquake of a sufficient magnitude occurs at the location."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Seismic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shutoff ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Gas,
        tag:Natural,
        tag:Seismic,
        tag:Shutoff,
        tag:Valve .

brick:Natural_Gas_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of natural gas"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:Natural,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasSubstance brick:Natural_Gas .

brick:Natural_Gas_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Usage Sensor" ;
    rdfs:subClassOf brick:Usage_Sensor ;
    skos:definition "Measures the amount of natural gas that is consumed or used, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:Natural,
        tag:Point,
        tag:Sensor,
        tag:Usage .

brick:No_Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "No Water Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "Alarm indicating that there is no water in the equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:No ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:No,
        tag:Point,
        tag:Water .

brick:Noncondensing_Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Noncondensing Natural Gas Boiler" ;
    rdfs:subClassOf brick:Natural_Gas_Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas with no system to capture latent heat for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Noncondensing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment,
        tag:Gas,
        tag:Natural,
        tag:Noncondensing .

brick:Occupancy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Occupied\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Occupancy,
        tag:Point .

brick:Occupancy_Count_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Count Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Sensors measuring the number of people in an area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Count ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Count,
        tag:Occupancy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Occupancy_Count .

brick:Occupancy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Detects occupancy of some space or area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Occupancy .

brick:Occupied_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Occupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Occupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Cooling_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Mode Status" ;
    rdfs:subClassOf brick:Cooling_Mode_Status,
        brick:Occupied_Mode_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Mode,
        tag:Occupied,
        tag:Point,
        tag:Status .

brick:Occupied_Cooling_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Supply_Air_Flow_Setpoint,
        brick:Occupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Occupied_Cooling_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Deadband,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Occupied_Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint ;
    skos:definition "Sets temperature for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Heating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Mode Status" ;
    rdfs:subClassOf brick:Heating_Mode_Status,
        brick:Occupied_Mode_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Mode,
        tag:Occupied,
        tag:Point,
        tag:Status .

brick:Occupied_Heating_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Supply_Air_Flow_Setpoint,
        brick:Occupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Heating_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Occupied_Heating_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Occupied_Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint ;
    skos:definition "Sets temperature for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Target humidity level when the location is occupied."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Return_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Room_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Occupied_Discharge_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Occupied_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "An Off Command controls or reports the binary 'off' status of a control loop, relay or equipment activity. It can only be used to stop/deactivate an associated equipment or process, or determine that the related entity is 'off'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:Point .

brick:Office_Kitchen a owl:Class,
        sh:NodeShape ;
    rdfs:label "Office Kitchen" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A common space, usually near or in a breakroom, where minor food preperation occurs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Kitchen ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Kitchen,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:On_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "An On Command controls or reports the binary 'on' status of a control loop, relay or equipment activity. It can only be used to start/activate an associated equipment or process, or determine that the related entity is 'on'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:On,
        tag:Point .

brick:On_Timer_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Timer Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor ;
    owl:equivalentClass brick:Run_Time_Sensor ;
    skos:definition "Measures the duration for which a device was in an active or \"on\" state"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Timer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Point,
        tag:Sensor,
        tag:Timer .

brick:Open_Close_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Close Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the open/close status of a device such as a damper or valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Close ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Close,
        tag:Open,
        tag:Point,
        tag:Status .

brick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Heating Valve Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Open,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Valve .

brick:Open_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Office" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "An open space used for work or study by mulitple people. Usuaully subdivided into cubicles or desks"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Office,
        tag:Open,
        tag:Room,
        tag:Space .

brick:Output_Frequency_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Output Frequency Sensor" ;
    rdfs:subClassOf brick:Frequency_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frequency,
        tag:Output,
        tag:Point,
        tag:Sensor .

brick:Output_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Output Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the voltage output by some process or device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Output,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Outside a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside" ;
    rdfs:subClassOf brick:Location ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Outside .

brick:Outside_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air CO2 Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air CO Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Senses the dewpoint temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Air_Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of outside air into the system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets outside air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Outside,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Grains Sensor" ;
    rdfs:subClassOf brick:Air_Grains_Sensor ;
    skos:definition "Measures the mass of water vapor in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Outside,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Outside,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Lockout_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Lockout Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Lockout,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Outside_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Outside,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Wet_Bulb_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Wet Bulb Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Wet_Bulb_Temperature_Sensor,
        brick:Outside_Air_Temperature_Sensor ;
    skos:definition "A sensor measuring the wet-bulb temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bulb ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bulb,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Wet ;
    brick:hasQuantity brick:Wet_Bulb_Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Outside .

brick:Outside_Face_Surface_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Face Surface Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the outside surface (relative to the space) of the radiant panel of a radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Surface,
        tag:Temperature .

brick:Outside_Face_Surface_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Face Surface Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the outside face surface temperature of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Surface,
        tag:Temperature .

brick:Outside_Illuminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Illuminance Sensor" ;
    rdfs:subClassOf brick:Illuminance_Sensor ;
    skos:definition "Measures the total luminous flux incident on an outside, per unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Outside,
        tag:Point,
        tag:Sensor .

brick:Overload_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overload Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that can indicate when a full-load current is exceeded."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overload ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Overload,
        tag:Point .

brick:Overridden_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden Off Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:Overridden_Status ;
    skos:definition "Indicates if a control loop, relay or equipment has been turned off when it would otherwise be scheduled to be on"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:Overridden,
        tag:Point,
        tag:Status .

brick:Overridden_On_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden On Status" ;
    rdfs:subClassOf brick:On_Status,
        brick:Overridden_Status ;
    skos:definition "Indicates if a control loop, relay or equipment has been turned on when it would otherwise be scheduled to be off"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Overridden,
        tag:Point,
        tag:Status .

brick:Ozone_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ozone Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of ozone in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ozone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Ozone,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Ozone_Concentration ;
    brick:hasSubstance brick:Air .

brick:PAU a owl:Class,
        sh:NodeShape ;
    rdfs:label "PAU" ;
    rdfs:subClassOf brick:AHU ;
    skos:definition "A type of AHU, use to pre-treat the outdoor air before feed to AHU"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PAU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PAU .

brick:PIR_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PIR Sensor" ;
    rdfs:subClassOf brick:Motion_Sensor ;
    skos:definition "Detects the presense of motion in some area using the differential change in infrared intensity between two or more receptors"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:PIR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:PIR,
        tag:Point,
        tag:Sensor .

brick:PM10_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM10 Level Sensor" ;
    rdfs:subClassOf brick:PM10_Sensor ;
    skos:definition "Detects level of particulates of size 10 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM10 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM10,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PM1_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM1 Level Sensor" ;
    rdfs:subClassOf brick:PM1_Sensor ;
    skos:definition "Detects level of particulates of size 1 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM1 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM1,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PM2.5_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM2.5 Level Sensor" ;
    rdfs:subClassOf brick:PM2.5_Sensor ;
    skos:definition "Detects level of particulates of size 2.5 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM2.5 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM2.5,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PVT_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "PVT Panel" ;
    rdfs:subClassOf brick:PV_Panel,
        brick:Solar_Thermal_Collector ;
    skos:definition "A type of solar panels that convert solar radiation into usable thermal and electrical energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collector,
        tag:Equipment,
        tag:PV,
        tag:Panel,
        tag:Solar,
        tag:Thermal .

brick:PV_Generation_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Generation System" ;
    rdfs:subClassOf brick:Energy_Generation_System ;
    skos:definition "A collection of photovoltaic devices that generates energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Generation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Photovoltaic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Generation,
        tag:Photovoltaic,
        tag:System .

brick:Parking_Level a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Level" ;
    rdfs:subClassOf brick:Floor ;
    skos:definition "A floor of a parking structure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Level,
        tag:Location,
        tag:Parking .

brick:Parking_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "An area large enough to park an individual vehicle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Parking,
        tag:Space .

brick:Parking_Structure a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Structure" ;
    rdfs:subClassOf brick:Building ;
    skos:definition "A building or part of a building devoted to vehicle parking"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Structure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Location,
        tag:Parking,
        tag:Structure .

brick:Passive_Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Passive Chilled Beam" ;
    rdfs:subClassOf brick:Chilled_Beam ;
    skos:definition "A chilled beam that does not have an integral air supply and instead relies on natural convection to draw air through the device."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Passive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Beam,
        tag:Chilled,
        tag:Equipment,
        tag:Passive .

brick:Peak_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Peak Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor ;
    skos:definition "The peak power consumed by a process over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Peak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Electric,
        tag:Peak,
        tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Peak_Power .

brick:Photovoltaic_Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Photovoltaic Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Output_Sensor ;
    owl:equivalentClass brick:PV_Current_Output_Sensor ;
    skos:definition "Senses the amperes of electrical current produced as output by a photovoltaic device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Photovoltaic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:Photovoltaic,
        tag:Point,
        tag:Sensor .

brick:Piezoelectric_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Piezoelectric Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses changes pressure, acceleration, temperature, force or strain via the piezoelectric effect"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Piezoelectric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Piezoelectric,
        tag:Point,
        tag:Sensor .

brick:PlugStrip a owl:Class,
        sh:NodeShape ;
    rdfs:label "PlugStrip" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Power_strip> ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A device containing a block of electrical sockets allowing multiple electrical devices to be powered from a single electrical socket."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PlugStrip ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PlugStrip .

brick:Plumbing_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Plumbing Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A service room devoted to the operation and routing of water in a building. Usually distinct from the HVAC subsystems."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plumbing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Plumbing,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Portfolio a owl:Class,
        sh:NodeShape ;
    rdfs:label "Portfolio" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A collection of sites"@en ;
    sh:property [ sh:or ( [ sh:class brick:Site ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Portfolio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:Portfolio .

brick:Power_Factor_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Factor Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Sensors measuring power Factor, under periodic conditions, is the ratio of the absolute value of the active power (P) to the apparent power (S)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Factor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Factor,
        tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Power_Factor .

brick:Power_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Loss Alarm" ;
    rdfs:subClassOf brick:Power_Alarm ;
    skos:definition "An alarm that indicates a power failure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Loss,
        tag:Point,
        tag:Power .

brick:Prayer_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Prayer Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for prayer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Prayer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Prayer,
        tag:Room,
        tag:Space .

brick:Pre_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pre Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "A filter installed in front of a more efficient filter to extend the life of the more expensive higher efficiency filter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pre ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter,
        tag:Pre .

brick:Pre_Filter_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pre Filter Status" ;
    rdfs:subClassOf brick:Filter_Status ;
    skos:definition "Indicates if a prefilter needs to be replaced"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pre ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Filter,
        tag:Point,
        tag:Pre,
        tag:Status .

brick:Preheat_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "A command to activate preheating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Preheat .

brick:Preheat_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for preheat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Preheat,
        tag:Setpoint .

brick:Preheat_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Preheat,
        tag:System,
        tag:Water .

brick:Preheat_Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Hot Water Valve" ;
    rdfs:subClassOf brick:Hot_Water_Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Preheat,
        tag:Valve,
        tag:Water .

brick:Preheat_Supply_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Supply Air Temperature Sensor" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Sensor ;
    owl:equivalentClass brick:Preheat_Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of supply air before it is heated"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Preheat,
        tag:Sensor,
        tag:Supply,
        tag:Temperature .

brick:Private_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Private Office" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office devoted to a single individual, with walls and door"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Private ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Private,
        tag:Room,
        tag:Space .

brick:Pump_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the speed of a pump (typically as a proportion of its full pumping capacity)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Pump .

brick:Pump_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Pump,
        tag:Status .

brick:Pump_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump Room" ;
    rdfs:subClassOf brick:Mechanical_Room ;
    skos:definition "A mechanical room that houses pumps"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mechanical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mechanical,
        tag:Pump,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Pump_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Status of a pump"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pump,
        tag:Status .

brick:Pump_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "Variable-frequency drive for pumps"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump,
        tag:VFD .

brick:Radiant_Ceiling_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Ceiling Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:RC_Panel ;
    skos:definition "Radiant panel heating and cooling system that are usually made from metal and suspended under the ceiling or insulated from the building structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ceiling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ceiling,
        tag:Equipment,
        tag:Panel,
        tag:Radiant .

brick:Radiation_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiation Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Radiation,
        tag:System,
        tag:Water .

brick:Radon_Concentration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radon Concentration Sensor" ;
    rdfs:subClassOf brick:Radioactivity_Concentration_Sensor ;
    skos:definition "Measures the concentration of radioactivity due to radon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concentration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radon ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concentration,
        tag:Point,
        tag:Radon,
        tag:Sensor ;
    brick:hasQuantity brick:Radon_Concentration ;
    brick:hasSubstance brick:Air .

brick:Rain_Duration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rain Duration Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor ;
    skos:definition "Measures the duration of precipitation within some time frame"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Duration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Duration,
        tag:Point,
        tag:Rain,
        tag:Sensor .

brick:Rain_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rain Level Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of precipitation fallen"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Rain,
        tag:Sensor ;
    brick:hasQuantity brick:Precipitation .

brick:Rated_Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rated Speed Setpoint" ;
    rdfs:subClassOf brick:Speed_Setpoint ;
    skos:definition "Sets rated speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Rated,
        tag:Setpoint,
        tag:Speed .

brick:Reactive_Energy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reactive Energy Sensor" ;
    rdfs:subClassOf brick:Electric_Energy_Sensor ;
    skos:definition "Measures the integral of reactive power"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reactive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Energy,
        tag:Point,
        tag:Reactive,
        tag:Sensor ;
    brick:hasQuantity brick:Reactive_Energy .

brick:Reactive_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reactive Power Sensor" ;
    rdfs:subClassOf brick:Electric_Power_Sensor ;
    skos:definition "Measures the portion of power that, averaged over a complete cycle of the AC waveform, is due to stored energy which returns to the source in each cycle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reactive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Reactive,
        tag:Sensor ;
    brick:hasQuantity brick:Reactive_Power .

brick:Reception a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reception" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space, usually in a lobby, where visitors to a building or space can go to after arriving at a building and inform building staff that they have arrived"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reception ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Reception,
        tag:Room,
        tag:Space .

brick:Refrigerant_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Refrigerant Level Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Refrigerant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Point,
        tag:Refrigerant,
        tag:Sensor ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Refrigerant .

brick:Reheat_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reheat Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Reheat,
        tag:System,
        tag:Water .

brick:Reheat_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reheat Valve" ;
    rdfs:subClassOf brick:Heating_Valve ;
    skos:definition "A valve that controls air temperature by modulating the amount of hot water flowing through a reheat coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Reheat,
        tag:Valve .

brick:Relay a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relay" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Relay> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "an electrically operated switch"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Relay .

brick:Relay_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relay Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands to switch the relay"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Relay .

brick:Relief_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relief Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that is a component of a Relief Air System, ensuring building doesn't become over-pressurised"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relief ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Relief .

brick:Relief_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relief Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan that is a component of a Relief Air System, ensuring building doesn't become over-pressurised"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relief ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Relief .

brick:Remotely_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Remotely On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Remotely ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Remotely,
        tag:Status .

brick:Retail_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Retail Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space set aside for retail in a larger establishment, e.g. a gift shop in a hospital"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Retail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Retail,
        tag:Room,
        tag:Space .

brick:Return_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO2 Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO2 Setpoint" ;
    rdfs:subClassOf brick:CO2_Setpoint ;
    skos:definition "Sets some property of CO2 in Return Air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Point,
        tag:Return,
        tag:Setpoint .

brick:Return_Air_CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Senses the dewpoint temperature of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between the return and supply side"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a return air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Return,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Air_Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "Filters return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Return .

brick:Return_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Grains Sensor" ;
    rdfs:subClassOf brick:Air_Grains_Sensor ;
    skos:definition "Measures the mass of water vapor in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Return,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Plenum" ;
    rdfs:subClassOf brick:Air_Plenum ;
    skos:definition "A component of the HVAC the receives air from the room to recirculate or exhaust to or from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Return .

brick:Return_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Chilled_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Return Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint,
        brick:Return_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Chilled_Water_Temperature_Setpoint .

brick:Return_Condenser_Water a owl:Class ;
    rdfs:label "Return Condenser Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Condenser_Water .

brick:Return_Condenser_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Return Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Flow_Sensor,
        brick:Return_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Condenser_Water_Flow_Sensor .

brick:Return_Condenser_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Return Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Condenser_Water_Temperature_Sensor .

brick:Return_Condenser_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Return Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Return_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Condenser_Water_Temperature_Setpoint .

brick:Return_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Return .

brick:Return_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving return air -- air that is circulated from the building back into the HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Return .

brick:Return_Heating_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Heating Valve" ;
    rdfs:subClassOf brick:Heating_Valve ;
    skos:definition "A valve installed on the return side of a heat exchanger"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Return,
        tag:Valve .

brick:Return_Hot_Water a owl:Class ;
    rdfs:label "Return Hot Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Hot_Water .

brick:Return_Hot_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Return Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Return_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Hot_Water_Temperature_Setpoint .

brick:Return_Water a owl:Class ;
    rdfs:label "Return Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Water .

brick:Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Riser" ;
    rdfs:subClassOf brick:Vertical_Space ;
    skos:definition "A vertical shaft indented for installing building infrastructure e.g., electrical wire, network communication wire, plumbing, etc"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Riser,
        tag:Space,
        tag:Vertical .

brick:Rooftop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rooftop" ;
    rdfs:subClassOf brick:Floor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rooftop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Location,
        tag:Rooftop .

brick:Run_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:Run .

brick:Run_Request_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Request Status" ;
    rdfs:subClassOf brick:Run_Status ;
    skos:definition "Indicates if a request has been filed to start a device or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Request ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Request,
        tag:Run,
        tag:Status .

brick:Safety_Shower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety Shower" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Safety,
        tag:Shower,
        tag:Station,
        tag:Wash .

brick:Sash_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sash Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a sash in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sash,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Schedule_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Schedule Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "The current setpoint as indicated by the schedule"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Schedule ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Schedule,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Sensor_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sensor Equipment" ;
    rdfs:subClassOf brick:ICT_Equipment ;
    skos:definition "A piece of equipment for sensing some physical properties"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:ICT ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:ICT,
        tag:Sensor .

brick:Sensor_Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sensor Failure Alarm" ;
    rdfs:subClassOf brick:Failure_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point,
        tag:Sensor .

brick:Server_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Server Room" ;
    rdfs:subClassOf brick:Room ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Server ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Server .

brick:Shared_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shared Office" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office used by multiple people"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shared ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Shared,
        tag:Space .

brick:Short_Cycle_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Short Cycle Alarm" ;
    rdfs:subClassOf brick:Cycle_Alarm ;
    skos:definition "An alarm that indicates a short cycle occurred. A short cycle occurs when a cooling cycle is prevented from completing its full cycle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Short ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Cycle,
        tag:Point,
        tag:Short .

brick:Shower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shower" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space containing showers, usually adjacent to an athletic or execise area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Shower,
        tag:Space .

brick:Smoke_Detector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Detector" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detector,
        tag:Equipment,
        tag:Fire,
        tag:Safety,
        tag:Smoke .

brick:Soil_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Soil Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of soil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Soil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Soil,
        tag:Temperature ;
    brick:hasSubstance brick:Soil .

brick:Solar_Azimuth_Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Azimuth Angle Sensor" ;
    rdfs:subClassOf brick:Angle_Sensor ;
    skos:definition "Measures the azimuth angle of the sun"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Azimuth ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Azimuth,
        tag:Point,
        tag:Sensor,
        tag:Solar .

brick:Solar_Radiance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Radiance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Radiance,
        tag:Sensor,
        tag:Solar ;
    brick:hasQuantity brick:Solar_Radiance .

brick:Solar_Zenith_Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Zenith Angle Sensor" ;
    rdfs:subClassOf brick:Angle_Sensor ;
    skos:definition "Measures the zenith angle of the sun"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zenith ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Point,
        tag:Sensor,
        tag:Solar,
        tag:Zenith .

brick:Space_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Space Heater" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A heater used to warm the air in an enclosed area, such as a room or office"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heater,
        tag:Space .

brick:Speed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "A command to set speed to a certain degree."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Speed .

brick:Speed_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Mode Status" ;
    rdfs:subClassOf brick:Mode_Status,
        brick:Speed_Status ;
    skos:definition "Status indicating the speed mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Point,
        tag:Speed,
        tag:Status .

brick:Speed_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Reset,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Sports_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sports Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used in the support of sports"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sports ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Service,
        tag:Space,
        tag:Sports .

brick:Stage_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stage Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "A point representing a discrete stage which the equipment should be operating at. The desired stage number should be identified by an entity property"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:Stage .

brick:Stage_Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stage Riser" ;
    rdfs:subClassOf brick:Furniture ;
    skos:definition "A low platform in a space or on a stage"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Furniture ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Furniture,
        tag:Riser,
        tag:Stage .

brick:Stages_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stages Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which stage a control loop or equipment is in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stages ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Stages,
        tag:Status .

brick:Staircase a owl:Class,
        sh:NodeShape ;
    rdfs:label "Staircase" ;
    rdfs:subClassOf brick:Vertical_Space ;
    skos:definition "A vertical space containing stairs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Staircase ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Staircase,
        tag:Vertical .

brick:Standby_CRAC a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby CRAC" ;
    rdfs:subClassOf brick:CRAC ;
    skos:definition "A CRAC that is activated as part of a lead/lag operation or when an alarm occurs in a primary unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAC,
        tag:Equipment,
        tag:Standby .

brick:Standby_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan that is activated as part of a lead/lag operation or when a primary fan raises an alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Standby .

brick:Standby_Glycool_Unit_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Glycool Unit On Off Status" ;
    rdfs:subClassOf brick:Standby_Unit_On_Off_Status ;
    skos:definition "Indicates the on/off status of a standby glycool unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Glycool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Glycool,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Standby,
        tag:Status,
        tag:Unit .

brick:Steam_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Steam_Radiator ;
    skos:definition "Steam heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Radiator,
        tag:Steam .

brick:Steam_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a steam distribution source to represent how steam is distributed across multiple destinations"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Steam .

brick:Steam_On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam On Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Steam .

brick:Steam_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of steam in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Steam,
        tag:System .

brick:Steam_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Usage Sensor" ;
    rdfs:subClassOf brick:Usage_Sensor ;
    skos:definition "Measures the amount of steam that is consumed or used, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Steam,
        tag:Usage .

brick:Steam_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Steam,
        tag:Valve .

brick:Studio a owl:Class,
        sh:NodeShape ;
    rdfs:label "Studio" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A room used for the production or media, usually with either a specialized set or a specialized sound booth for recording"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Studio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Room,
        tag:Space,
        tag:Studio .

brick:Supply_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Dewpoint_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Point,
        tag:Sensor,
        tag:Supply .

brick:Supply_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between an upstream and downstream of an air duct or other air conduit used to supply air into the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Duct_Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Duct Pressure Status" ;
    rdfs:subClassOf brick:Pressure_Status ;
    owl:equivalentClass brick:Discharge_Air_Duct_Pressure_Status ;
    skos:definition "Indicates if air pressure in supply duct is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Duct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Duct,
        tag:Point,
        tag:Pressure,
        tag:Status,
        tag:Supply .

brick:Supply_Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Demand_Setpoint,
        brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Demand_Setpoint ;
    skos:definition "Sets the rate of supply air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Flow_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow High Reset Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply .

brick:Supply_Air_Flow_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Low Reset Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply .

brick:Supply_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Humidity_Setpoint ;
    skos:definition "Humidity setpoint for supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Integral_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Integral Gain Parameter" ;
    rdfs:subClassOf brick:Integral_Gain_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Integral_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Gain,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply .

brick:Supply_Air_Proportional_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Proportional Gain Parameter" ;
    rdfs:subClassOf brick:Proportional_Gain_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Proportional_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply .

brick:Supply_Air_Smoke_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Smoke Detection Alarm" ;
    rdfs:subClassOf brick:Air_Alarm,
        brick:Smoke_Detection_Alarm ;
    owl:equivalentClass brick:Discharge_Air_Smoke_Detection_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Detection,
        tag:Point,
        tag:Smoke,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Deadband_Setpoint,
        brick:Supply_Air_Static_Pressure_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Integral_Time_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Supply,
        tag:Time .

brick:Supply_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within supply regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Air_Static_Pressure_Step_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step,
        tag:Supply .

brick:Supply_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Cooling_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Heating_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Reset_Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Reset Differential Setpoint" ;
    rdfs:subClassOf brick:Temperature_Differential_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Step_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Supply,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Chilled_Water a owl:Class ;
    rdfs:label "Supply Chilled Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water .

brick:Supply_Chilled_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Supply Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Chilled_Water_Temperature_Setpoint .

brick:Supply_Condenser_Water a owl:Class ;
    rdfs:label "Supply Condenser Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water .

brick:Supply_Condenser_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Supply Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Flow_Sensor,
        brick:Supply_Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Flow_Sensor .

brick:Supply_Condenser_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Supply Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor,
        brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Temperature_Sensor .

brick:Supply_Condenser_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Supply Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Condenser_Water_Temperature_Setpoint .

brick:Supply_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Fan" ;
    rdfs:subClassOf brick:Fan ;
    owl:equivalentClass brick:Discharge_Fan ;
    skos:definition "Fan moving supply air -- air that is supplied from the HVAC system into the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Supply .

brick:Supply_Hot_Water a owl:Class ;
    rdfs:label "Supply Hot Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water .

brick:Supply_Water a owl:Class ;
    rdfs:label "Supply Water" ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water .

brick:Surveillance_Camera a owl:Class,
        sh:NodeShape ;
    rdfs:label "Surveillance Camera" ;
    rdfs:subClassOf brick:Camera,
        brick:Video_Surveillance_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Camera ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Camera,
        tag:Equipment,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Switch_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switch Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A telecommuncations room housing network switches"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Switch,
        tag:Telecom .

brick:Switch_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switch Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Status of a switch"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Switch .

brick:Switchgear a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switchgear" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A main disconnect or service disconnect feeds power to a switchgear, which then distributes power to the rest of the building through smaller amperage-rated disconnects."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switchgear ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Switchgear .

brick:System_Shutdown_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Shutdown Status" ;
    rdfs:subClassOf brick:Status,
        brick:System_Status ;
    skos:definition "Indicates if a system has been shutdown"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shutdown ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Shutdown,
        tag:Status,
        tag:System .

brick:TETRA_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "TETRA Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A room used for local two-way radio networks, e.g. the portable radios carried by facilities staff"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TETRA ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:TETRA,
        tag:Telecom .

brick:TVOC_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "TVOC Level Sensor" ;
    rdfs:subClassOf brick:TVOC_Sensor ;
    skos:definition "A sensor measuring the level of all VOCs in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TVOC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor,
        tag:TVOC .

brick:Team_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Team Room" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office used by multiple team members for specific work tasks. Distinct from Conference Room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Team ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space,
        tag:Team .

brick:Temperature_Adjust_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Adjust Sensor" ;
    rdfs:subClassOf brick:Adjust_Sensor ;
    skos:definition "Measures user-provided adjustment of temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Adjust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Adjust,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature .

brick:Temperature_Alarm_Sensitivity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Alarm Sensitivity Parameter" ;
    rdfs:subClassOf brick:Alarm_Sensitivity_Parameter ;
    skos:definition "A parameter indicates the sensitivity to activate a temperature alarm."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensitivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Parameter,
        tag:Point,
        tag:Sensitivity,
        tag:Temperature .

brick:Temperature_Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Tolerance Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter,
        brick:Tolerance_Parameter ;
    skos:definition "A parameter determining the difference between upper and lower limits of temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Tolerance .

brick:Temporary_Occupancy_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temporary Occupancy Status" ;
    rdfs:subClassOf brick:Occupancy_Status ;
    skos:definition "For systems that differentiate between scheduled occupied/unoccupied mode, this indicates if a space is temporarily occupied when it would otherwise be unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temporary ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Status,
        tag:Temporary .

brick:Thermal_Power_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermal Power Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A standalone thermal power meter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter,
        tag:Power,
        tag:Thermal .

brick:Thermally_Activated_Building_System_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermally Activated Building System Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:TABS_Panel ;
    skos:definition "Radiant panel heating and cooling system where the energy heat source or sink is embedded in the building structure such as in slabs and walls."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Activated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermally ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Activated,
        tag:Building,
        tag:Equipment,
        tag:Panel,
        tag:System,
        tag:Thermally .

brick:Thermostat a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermostat" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "An automatic control device used to maintain temperature at a fixed or adjustable setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermostat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Thermostat .

brick:Thermostat_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermostat Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Status of a thermostat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermostat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Thermostat .

brick:Thermostatic_Mixing_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermostatic Mixing Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Thermostatic_mixing_valve> ;
    rdfs:subClassOf brick:Water_Valve ;
    skos:definition "A valve that blends hot water with cold water to ensure constant, safe shower and bath outlet temperatures, preventing scalding."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Mixed,
        tag:Thermal,
        tag:Valve,
        tag:Water .

brick:Ticketing_Booth a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ticketing Booth" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A room or space used to sell or distribute tickets to events at a venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Booth ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ticketing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Booth,
        tag:Location,
        tag:Space,
        tag:Ticketing .

brick:Tint_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tint Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "The target level of window tint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Tint .

brick:Tint_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tint Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "The current level of window tint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Tint .

brick:Touchpanel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Touchpanel" ;
    rdfs:subClassOf brick:Interface ;
    skos:definition "A switch used to operate all or part of a lighting installation that uses a touch-based mechanism (typically resistive or capacitive) rather than a mechanical actuator"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Touchpanel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface,
        tag:Touchpanel .

brick:Trace_Heat_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Trace Heat Sensor" ;
    rdfs:subClassOf brick:Heat_Sensor ;
    skos:definition "Measures the surface temperature of pipelines carrying temperature-sensitive products; typically used to avoid frosting/freezing"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Trace ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Sensor,
        tag:Trace .

brick:Transfer_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Transfer Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan that transfers air from a space to another space."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Transfer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Transfer .

brick:Transformer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Transformer" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A Transformer is usually fed by a high-voltage source and then steps down the voltage to a lower-voltage feed for low-voltage application (such as lights). Transformers also can step up voltage, but this generally does not apply to in building distribution."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Transformer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Transformer .

brick:Transformer_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Transformer Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "An electrical room where electricity enters and is transformed to different voltages and currents by the equipment contained in the room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Transformer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space,
        tag:Transformer .

brick:Tunnel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tunnel" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "An enclosed space that connects buildings. Often underground"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tunnel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Tunnel .

brick:Underfloor_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum" ;
    rdfs:subClassOf brick:Supply_Air_Plenum ;
    skos:definition "An open space between a structural concrete slab and the underside of a raised access floor system that connects to an air handling unit to receive conditioned and/or ventilating air before delivery to the room(s)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Underfloor .

brick:Underfloor_Air_Plenum_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "Measures the outward push of air against the plenum surfaces and used to measure the resistance when air moves through the plenum"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Plenum,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static,
        tag:Underfloor .

brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets the underfloor air plenum static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Plenum,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Underfloor .

brick:Underfloor_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of underfloor air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Underfloor .

brick:Unit_Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unit Failure Alarm" ;
    rdfs:subClassOf brick:Failure_Alarm ;
    skos:definition "An alarm that indicates the failure of an equipment or device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point,
        tag:Unit .

brick:Unoccupied_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Cooling_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Mode Status" ;
    rdfs:subClassOf brick:Cooling_Mode_Status,
        brick:Unoccupied_Mode_Status ;
    skos:definition "Indicates whether a system, device or control loop is in an unoccupied cooling mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Mode,
        tag:Point,
        tag:Status,
        tag:Unoccupied .

brick:Unoccupied_Cooling_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Supply_Air_Flow_Setpoint,
        brick:Unoccupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Unoccupied_Cooling_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Heating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Heating Mode Status" ;
    rdfs:subClassOf brick:Heating_Mode_Status,
        brick:Unoccupied_Mode_Status ;
    skos:definition "Indicates whether a system, device or control loop is in an unoccupied heating mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Mode,
        tag:Point,
        tag:Status,
        tag:Unoccupied .

brick:Unoccupied_Heating_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Heating Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Supply_Air_Flow_Setpoint,
        brick:Unoccupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Unoccupied_Heating_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Heating Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Target humidity level when the location is unoccupied."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Unoccupied_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Return_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Room_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Unoccupied_Discharge_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Unoccupied_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied,
        tag:Zone .

brick:VFD_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "VFD Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables operation of a variable frequency drive"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:VFD .

brick:Valve_Position_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Position Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that the valve position is not in a normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Position,
        tag:Valve .

brick:Valve_Position_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Position Command" ;
    rdfs:subClassOf brick:Position_Command,
        brick:Valve_Command ;
    skos:definition "Controls the position (the degree of openness) of a valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Position,
        tag:Valve ;
    brick:hasQuantity brick:Position .

brick:Valve_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a valve in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sensor,
        tag:Valve ;
    brick:hasQuantity brick:Position .

brick:Valve_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "The current status of the valve."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Valve .

brick:Variable_Air_Volume_Box_With_Reheat a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Air Volume Box With Reheat" ;
    rdfs:subClassOf brick:Variable_Air_Volume_Box ;
    owl:equivalentClass brick:RVAV ;
    skos:definition "A VAV box with a reheat coil mounted on the discharge end of the unit that can heat the air delivered to a zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Equipment,
        tag:Reheat,
        tag:Variable,
        tag:Volume .

brick:Variable_Frequency_Drive a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Frequency Drive" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=vfd&submit=Search> ;
    rdfs:subClassOf brick:Motor ;
    owl:equivalentClass brick:VFD ;
    skos:definition "Electronic device that varies its output frequency to vary the rotating speed of a motor, given a fixed input frequency. Used with fans or pumps to vary the flow in the system as a function of a maintained pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drive,
        tag:Equipment,
        tag:Frequency,
        tag:Variable .

brick:Velocity_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Velocity Pressure Setpoint" ;
    rdfs:subClassOf brick:Pressure_Setpoint ;
    skos:definition "Sets static veloicty pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Velocity .

brick:Vent_Operating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Vent Operating Mode Status" ;
    rdfs:subClassOf brick:Operating_Mode_Status ;
    skos:definition "Indicates the current operating mode of a vent"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Operating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vent ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Operating,
        tag:Point,
        tag:Status,
        tag:Vent .

brick:Ventilation_Air_Flow_Ratio_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ventilation Air Flow Ratio Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Ventilation_Air_Flow_Ratio_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ratio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Ratio,
        tag:Ventilation .

brick:Ventilation_Air_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ventilation Air System" ;
    rdfs:subClassOf brick:Air_System ;
    skos:definition "The equipment, devices, and conduits that handle the introduction and distribution of ventilation air in the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:System,
        tag:Ventilation .

brick:Video_Intercom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Video Intercom" ;
    rdfs:subClassOf brick:Intercom_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Intercom,
        tag:Security,
        tag:Video .

brick:Visitor_Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Visitor Lobby" ;
    rdfs:subClassOf brick:Lobby ;
    skos:definition "A lobby for visitors to the building. Sometimes used to distinguish from an employee entrance looby"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Visitor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Lobby,
        tag:Location,
        tag:Space,
        tag:Visitor .

brick:Voltage_Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Imbalance Sensor" ;
    rdfs:subClassOf brick:Imbalance_Sensor ;
    skos:definition "A sensor which measures the voltage difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Imbalance,
        tag:Point,
        tag:Sensor,
        tag:Voltage ;
    brick:hasQuantity brick:Voltage_Imbalance .

brick:Voltage_Ratio_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Ratio Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the ratio of voltage in a transformer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ratio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Ratio,
        tag:Setpoint,
        tag:Voltage .

brick:Wardrobe a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wardrobe" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "Storage for clothing, costumes, or uniforms"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wardrobe ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Wardrobe .

brick:Warm_Cool_Adjust_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Warm Cool Adjust Sensor" ;
    rdfs:subClassOf brick:Adjust_Sensor ;
    skos:definition "User provided adjustment of zone temperature, typically in the range of +/- 5 degrees"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Adjust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Warm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Adjust,
        tag:Cool,
        tag:Point,
        tag:Sensor,
        tag:Warm .

brick:Warmest_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Warmest Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The zone temperature that is warmest; drives the supply temperature of cold air. A computed value rather than a physical sensor. Also referred to as a 'Highest Zone Air Temperature Sensor'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Warmest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Warmest,
        tag:Zone .

brick:Waste_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Waste Storage" ;
    rdfs:subClassOf brick:Storage_Room ;
    skos:definition "A room used for storing waste such as trash or recycling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Waste ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Storage,
        tag:Waste .

brick:Water_Differential_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Temperature Setpoint" ;
    rdfs:subClassOf brick:Differential_Temperature_Setpoint ;
    skos:definition "Sets the target differential temperature between the start and end of a heat transfer cycle in a water circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Water .

brick:Water_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a water distribution source to represent how water is distributed across multiple destinations (pipes)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Water .

brick:Water_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Loss Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates a loss of water e.g. during transport"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Loss,
        tag:Point,
        tag:Water .

brick:Water_Tank a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Tank" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A space used to hold water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tank ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Tank,
        tag:Water .

brick:Weather_Condition a brick:Quantity ;
    rdfs:label "Weather Condition" .

brick:Weather_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Weather Station" ;
    rdfs:seeAlso <https://bedes.lbl.gov/bedes-online/weather-station> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A dedicated weather measurement station"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Weather ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Station,
        tag:Weather .

brick:Wind_Direction_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wind Direction Sensor" ;
    rdfs:subClassOf brick:Direction_Sensor ;
    skos:definition "Measures the direction of wind in degrees relative to North"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Sensor,
        tag:Wind ;
    brick:hasQuantity brick:Wind_Direction .

brick:Wind_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wind Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    skos:definition "Measured speed of wind, caused by air moving from high to low pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Speed,
        tag:Wind ;
    brick:hasQuantity brick:Linear_Speed .

brick:Workshop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Workshop" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space used to house equipment that can be used to repair or fabricate things"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Workshop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Workshop .

brick:Zone_Air_Conditioning_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Conditioning Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates the mode of AC for a zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Conditioning ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Conditioning,
        tag:Mode,
        tag:Point,
        tag:Status,
        tag:Zone .

brick:Zone_Air_Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    skos:definition "The upper (cooling) setpoint for zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Zone_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Point,
        tag:Sensor,
        tag:Zone ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_Air_Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    skos:definition "The lower (heating) setpoint for zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heating,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Zone_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor,
        tag:Zone ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Zone ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_CO2_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone CO2 Level Sensor" ;
    rdfs:subClassOf brick:CO2_Level_Sensor ;
    skos:definition "A physical or virtual sensor which represents the CO2 level of an HVAC Zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Zone ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:Zone_Occupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Occupied Load Shed Command" ;
    rdfs:subClassOf brick:Occupied_Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Occupied,
        tag:Point,
        tag:Shed,
        tag:Zone .

brick:Zone_Standby_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Standby Load Shed Command" ;
    rdfs:subClassOf brick:Standby_Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Standby,
        tag:Zone .

brick:Zone_Unoccupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Unoccupied Load Shed Command" ;
    rdfs:subClassOf brick:Unoccupied_Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Unoccupied,
        tag:Zone .

ref:BACnetReferenceShape a sh:NodeShape ;
    skos:definition "Infers a BACnetReference instance from the object of an hasExternalReference." ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ref:BACnetReference ;
            sh:object ref:BACnetReference ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetObjectsOf ref:hasExternalReference .

ref:IFCReferenceShape a sh:NodeShape ;
    skos:definition "Infers a IFCReference instance from the object of an hasExternalReference." ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ref:IFCReference ;
            sh:object ref:IFCReference ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetObjectsOf ref:hasExternalReference .

ref:TimeseriesReferenceShape a sh:NodeShape ;
    skos:definition "Infers a TimeseriesReference instance from the object of an hasExternalReference." ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ref:TimeseriesReference ;
            sh:object ref:TimeseriesReference ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetObjectsOf ref:hasExternalReference .

ref:bacnet-read-property a owl:DatatypeProperty ;
    rdfs:label "bacnet-read-property" ;
    rdfs:comment "The property of the BACnet object to read to get the current value of this entity." .

ref:hasTimeseriesReference a owl:ObjectProperty ;
    rdfs:label "hasTimeseriesReference" ;
    rdfs:subPropertyOf ref:hasExternalReference ;
    skos:definition "Metadata for accessing related timeseries data: Relates a Brick point to the TimeseriesReference that indicates where and how the data for this point is stored"@en ;
    sh:class ref:TimeseriesReference .

bsh:Absolute_HumidityQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:TON_LONG-PER-YD3 unit:TON_UK-PER-YD3 unit:MilliGM-PER-DeciL unit:KiloGM-PER-M3 unit:TON_US-PER-YD3 unit:OZ-PER-IN3 unit:LB-PER-GAL_UK unit:PlanckDensity unit:OZ-PER-GAL unit:TON_SHORT-PER-YD3 unit:LB-PER-M3 unit:GRAIN-PER-GAL unit:LB-PER-GAL unit:LB-PER-GAL_US unit:SLUG-PER-FT3 unit:LB-PER-YD3 unit:LB-PER-IN3 unit:LB-PER-FT3 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Active_EnergyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloW-HR unit:W-HR unit:MegaW-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Active_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloW unit:W unit:MilliW unit:NanoW unit:MegaW unit:MicroW unit:TeraW unit:GigaW unit:PicoW ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Alternating_Current_FrequencyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:HZ unit:KiloHZ unit:MegaHZ unit:GigaHZ ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Ammonia_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:AngleQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MIN_Angle unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Apparent_EnergyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MegaV-A-HR unit:KiloV-A-HR unit:V-A-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Apparent_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:MegaV-A unit:KiloV-A unit:V-A ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Atmospheric_PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:BuildingMeterRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
        CONSTRUCT {
            $this rdf:type ?newtype .
        }
        WHERE {
            $this brick:meters ?bldg .
            ?bldg rdf:type/rdfs:subClassOf* brick:Building .
            $this rdf:type ?type .
            BIND(IRI(CONCAT("https://brickschema.org/schema/Brick#Building_", strafter(str(?type), "https://brickschema.org/schema/Brick#"))) as ?newtype) .
            FILTER (strEnds(str(?type), "_Meter"))
        }
        """ ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Meter .

bsh:CO2_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:CO_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Complex_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MegaV-A unit:KiloV-A unit:V-A ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:ConductivityQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloGM-PER-M2-PA-SEC unit:MilliS-PER-M unit:S-PER-M unit:PicoS-PER-M unit:NanoS-PER-CentiM unit:S-PER-CentiM unit:KiloS-PER-M unit:DeciS-PER-M unit:MilliS-PER-CentiM unit:MegaS-PER-M unit:NanoS-PER-M unit:MicroS-PER-M unit:MicroS-PER-CentiM ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Current_AngleQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Current_ImbalanceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Current_Total_Harmonic_DistortionQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT unit:DeciB_M ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:DeprecationInferenceForInstancesRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """CONSTRUCT {
$this a ?newClass .
}
WHERE {
$this a ?class .
?class owl:deprecated true .
?class brick:isReplacedBy ?newClass .
FILTER NOT EXISTS {$this a ?newClass}
}""" ;
            sh:message "Deprecated class is temporarily augmented by the new class" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Entity .

bsh:DeprecationRule a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:path brick:deprecatedInVersion ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:path brick:deprecationMitigationMessage ],
        [ sh:class sh:NodeShape ;
            sh:maxCount 1 ;
            sh:path brick:deprecationMitigationRule ],
        [ sh:maxCount 0 ;
            sh:message "This concept is deprecated" ;
            sh:path ( rdf:type brick:deprecation ) ;
            sh:severity sh:Warning ] ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
        CONSTRUCT { $this owl:deprecated true }
        WHERE { $this brick:deprecation ?dep }
        """ ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetSubjectsOf brick:deprecation .

bsh:DeprecationRuleForInstances a sh:NodeShape ;
    sh:severity sh:Warning ;
    sh:sparql [ a sh:SPARQLConstraint ;
            sh:message "{$this} has type {?class} which was deprecated in version {?depver}. For now, it has been updated to also be of type {?newClass}." ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ;
            sh:select """SELECT $this ?class ?newClass ?depver WHERE {
$this a ?class .
?class owl:deprecated true .
?class brick:deprecatedInVersion ?depver .
?class brick:isReplacedBy ?newClass .
}""" ] ;
    sh:targetClass brick:Entity .

bsh:DewpointQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:DEG_C unit:DEG_F unit:K unit:MilliDEG_C unit:PlanckTemperature unit:DEG_R ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Differential_CO2_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Differential_CO_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Differential_Dynamic_PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Differential_Static_PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Differential_TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:DEG_C unit:DEG_F unit:K unit:MilliDEG_C unit:PlanckTemperature unit:DEG_R ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Dry_Bulb_TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:K unit:DEG_C unit:DEG_F ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Electric_EnergyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloV-A_Reactive-HR unit:KiloV-A-HR unit:V-A-HR unit:MegaW-HR unit:J unit:KiloW-HR unit:V-A_Reactive-HR unit:MegaV-A-HR unit:W-HR unit:MegaV-A_Reactive-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Electric_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:MegaV-A unit:KiloV-A unit:BTU_IT-PER-SEC unit:MegaJ-PER-SEC unit:FT-LB_F-PER-MIN unit:PlanckPower unit:TeraW unit:HP unit:GigaW unit:J-PER-HR unit:MegaBTU_IT-PER-HR unit:PicoW unit:BAR-M3-PER-SEC unit:V-A unit:MegaV-A_Reactive unit:HP_Metric unit:PSI-IN3-PER-SEC unit:BTU_IT-PER-HR unit:KiloCAL-PER-MIN unit:KiloCAL-PER-SEC unit:MicroW unit:J-PER-SEC unit:MegaPA-M3-PER-SEC unit:PA-M3-PER-SEC unit:BAR-L-PER-SEC unit:MegaPA-L-PER-SEC unit:PSI-YD3-PER-SEC unit:W unit:HP_Electric unit:THM_US-PER-HR unit:FT-LB_F-PER-HR unit:V-A_Reactive unit:KiloV-A_Reactive unit:HP_Boiler unit:HP_Brake unit:PSI-M3-PER-SEC unit:FT-LB_F-PER-SEC unit:PA-L-PER-SEC unit:KiloW unit:ERG-PER-SEC unit:MilliW unit:NanoW unit:TON_FG unit:KiloBTU_IT-PER-HR unit:MilliBAR-L-PER-SEC unit:MegaW unit:MilliBAR-M3-PER-SEC ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:EnthalpyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:TeraW-HR unit:N-M unit:TonEnergy unit:ExaJ unit:KiloEV unit:BTU_TH unit:TeraJ unit:TOE unit:KiloBTU_IT unit:KiloBTU_TH unit:EV unit:FT-LB_F unit:W-HR unit:KiloV-A_Reactive-HR unit:V-A-HR unit:GigaEV unit:MegaW-HR unit:ERG unit:PlanckEnergy unit:GigaJ unit:THM_EEC unit:CAL_TH unit:MegaV-A-HR unit:THM_US unit:GigaW-HR unit:KiloV-A-HR unit:W-SEC unit:MegaEV unit:J unit:QUAD unit:MicroJ unit:KiloW-HR unit:KiloJ unit:E_h unit:MilliJ unit:KiloCAL unit:MegaV-A_Reactive-HR unit:MegaTOE unit:PetaJ unit:FemtoJ unit:V-A_Reactive-HR unit:MegaJ unit:AttoJ unit:BTU_IT unit:FT-PDL unit:CAL_IT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:FlowQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:OZ_VOL_UK-PER-HR unit:BBL_UK_PET-PER-SEC unit:BBL_US-PER-DAY unit:PK_US_DRY-PER-SEC unit:GAL_US-PER-SEC unit:GI_UK-PER-MIN unit:GI_US-PER-MIN unit:BBL_US_PET-PER-HR unit:QT_US-PER-DAY unit:DeciM3-PER-MIN unit:BBL_UK_PET-PER-DAY unit:BBL_UK_PET-PER-MIN unit:BU_US_DRY-PER-HR unit:GI_US-PER-SEC unit:IN3-PER-SEC unit:FT3-PER-MIN unit:L-PER-MIN unit:PINT_US-PER-HR unit:M3-PER-HR unit:IN3-PER-HR unit:KiloL-PER-HR unit:YD3-PER-SEC unit:PK_UK-PER-SEC unit:L-PER-SEC unit:YD3-PER-HR unit:M3-PER-MIN unit:PINT_UK-PER-SEC unit:PINT_US-PER-DAY unit:QT_US-PER-MIN unit:PINT_US-PER-SEC unit:YD3-PER-DAY unit:CentiM3-PER-MIN unit:QT_UK-PER-MIN unit:GI_UK-PER-SEC unit:L-PER-DAY unit:PK_US_DRY-PER-HR unit:QT_UK-PER-HR unit:QT_UK-PER-SEC unit:PINT_UK-PER-DAY unit:PK_UK-PER-MIN unit:L-PER-HR unit:OZ_VOL_UK-PER-SEC unit:GI_UK-PER-HR unit:MilliL-PER-MIN unit:YD3-PER-MIN unit:BU_US_DRY-PER-MIN unit:IN3-PER-MIN unit:OZ_VOL_US-PER-MIN unit:GAL_UK-PER-DAY unit:BBL_US_PET-PER-SEC unit:PK_UK-PER-DAY unit:BU_UK-PER-HR unit:BU_UK-PER-DAY unit:DeciM3-PER-SEC unit:GI_UK-PER-DAY unit:FT3-PER-SEC unit:BU_US_DRY-PER-DAY unit:M3-PER-DAY unit:GAL_US-PER-HR unit:BU_UK-PER-SEC unit:OZ_VOL_US-PER-DAY unit:OZ_VOL_UK-PER-DAY unit:QT_US-PER-SEC unit:BBL_US-PER-MIN unit:OZ_VOL_US-PER-SEC unit:FT3-PER-HR unit:MilliL-PER-SEC unit:BBL_UK_PET-PER-HR unit:GAL_UK-PER-MIN unit:FT3-PER-DAY unit:BU_US_DRY-PER-SEC unit:M3-PER-SEC unit:QT_UK-PER-DAY unit:MilliL-PER-DAY unit:DeciM3-PER-HR unit:DeciM3-PER-DAY unit:PINT_US-PER-MIN unit:GAL_US-PER-MIN unit:PINT_UK-PER-MIN unit:PK_US_DRY-PER-MIN unit:BU_UK-PER-MIN unit:GAL_UK-PER-HR unit:GI_US-PER-DAY unit:GAL_UK-PER-SEC unit:PINT_UK-PER-HR unit:PK_UK-PER-HR unit:OZ_VOL_UK-PER-MIN unit:PK_US_DRY-PER-DAY unit:OZ_VOL_US-PER-HR unit:CentiM3-PER-DAY unit:CentiM3-PER-HR unit:CentiM3-PER-SEC unit:GI_US-PER-HR unit:QT_US-PER-HR unit:GAL_US-PER-DAY unit:MilliL-PER-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Flow_LossQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:M3-PER-SEC ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Formaldehyde_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:FrequencyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:NUM-PER-YR unit:failures-in-time unit:PER-HR unit:PERCENT-PER-WK unit:PlanckFrequency unit:NUM-PER-SEC unit:PER-MO unit:TeraHZ unit:HZ unit:GigaHZ unit:PER-SEC unit:PER-MIN unit:PERCENT-PER-HR unit:PER-YR unit:PER-MilliSEC unit:NUM-PER-HR unit:PER-DAY unit:PERCENT-PER-DAY unit:KiloHZ unit:MegaHZ unit:SAMPLE-PER-SEC unit:PER-WK ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:GrainsOfMoistureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GRAIN ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:IlluminanceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:FC unit:PHOT unit:LUX ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:InferInverseProperties1 a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
            CONSTRUCT {
$this ?invP ?o .
}
WHERE {
?o ?p $this .
?p owl:inverseOf ?invP .
}
			""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Entity .

bsh:InferInverseProperties2 a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
            CONSTRUCT {
$this ?invP ?o .
}
WHERE {
?o ?p $this .
?invP owl:inverseOf ?p .
}
			""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Entity .

bsh:InferSymmetricProperties a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
?o ?prop $this .
$this ?prop ?o .
}
WHERE {
  { $this ?prop ?o } UNION { ?o ?prop $this } .
  ?prop a owl:SymmetricProperty .
}
			""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Entity .

bsh:IrradianceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:W-PER-FT2 unit:W-PER-IN2 unit:W-PER-M2 unit:W-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:LevelQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloM unit:FT unit:MilliM unit:CentiM unit:M unit:DeciM unit:IN unit:MicroM unit:YD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Linear_SpeedQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:M-PER-SEC unit:FT-PER-SEC unit:FT-PER-HR unit:KiloM-PER-HR unit:KiloM-PER-SEC unit:MI-PER-HR unit:MI-PER-SEC unit:M-PER-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:LuminanceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:CD-PER-M2 unit:STILB unit:LA unit:FT-LA unit:LM unit:CD-PER-IN2 unit:CP unit:CD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Luminous_FluxQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:LM ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Luminous_IntensityQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:CD unit:CP ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:MassQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:LB unit:LB_T unit:MegaGM unit:SLUG unit:Pennyweight unit:Quarter_UK unit:Hundredweight_US unit:DecaGM unit:GRAIN unit:TON_US unit:FemtoGM unit:MilliGM unit:Stone_UK unit:DRAM_UK unit:HectoGM unit:DeciTONNE unit:TON_UK unit:TON_Metric unit:PlanckMass unit:CARAT unit:PicoGM unit:DRAM_US unit:TON_LONG unit:Hundredweight_UK unit:EarthMass unit:TON_Assay unit:DeciTON_Metric unit:U unit:AMU unit:CentiGM unit:OZ unit:MicroGM unit:CWT_LONG unit:KiloTONNE unit:DeciGM unit:SolarMass unit:KiloGM unit:TON_SHORT unit:NanoGM unit:OZ_TROY unit:CWT_SHORT unit:GM unit:LunarMass unit:KiloTON_Metric unit:DWT unit:TONNE unit:Da ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:MeterInferSubclassBuildingMeter a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
        CONSTRUCT {
            $this rdf:type ?metertype .
        } WHERE {
            $this rdf:type/rdfs:subClassOf* brick:Building_Meter .
            $this brick:hasSubstance ?substance .
            ?metertype brick:hasSubstance ?substance .
            ?metertype rdfs:subClassOf+ brick:Building_Meter .
        }
        """ ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Building_Meter .

bsh:MeterInferSubclassNonBuildingMeter a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
        CONSTRUCT {
            $this rdf:type ?metertype .
        } WHERE {
            $this rdf:type/rdfs:subClassOf* brick:Meter .
            $this brick:hasSubstance ?substance .
            ?metertype brick:hasSubstance ?substance .
            FILTER NOT EXISTS {
                $this rdf:type/rdf:subClassOf* brick:Building_Meter
            }
            MINUS {
                ?metertype rdfs:subClassOf* brick:Building_Meter .
            }
        }
        """ ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Meter .

bsh:MeterInferSubstance a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
        CONSTRUCT {
            $this brick:hasSubstance ?substance .
        } WHERE {
            $this rdf:type ?meter .
            ?meter rdfs:subClassOf* brick:Meter .
            ?meter brick:hasSubstance ?substance .
        }
        """ ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Meter .

bsh:MeterRelationshipRule a sh:NodeShape ;
    sh:property [ sh:message "Relationship between meters is hasSubMeter/isSubMeterOf, not meters/isMeteredBy" ;
            sh:path brick:meters ;
            sh:qualifiedMaxCount 0 ;
            sh:qualifiedValueShape [ sh:class brick:Meter ] ],
        [ sh:message "Relationship between meters is hasSubMeter/isSubMeterOf, not meters/isMeteredBy" ;
            sh:path brick:isMeteredBy ;
            sh:qualifiedMaxCount 0 ;
            sh:qualifiedValueShape [ sh:class brick:Meter ] ] ;
    sh:targetClass brick:Meter .

bsh:Methane_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:NO2_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:OWLEquivalentClassRule1 a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?s a ?t2 .
} WHERE {
    ?s a $this .
    { ?t2 owl:equivalentClass $this }
    UNION
    { $this owl:equivalentClass ?t2 }
}""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetSubjectsOf owl:equivalentClass .

bsh:OWLEquivalentClassRule2 a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?s a ?t2 .
} WHERE {
    ?s a $this .
    { ?t2 owl:equivalentClass $this }
    UNION
    { $this owl:equivalentClass ?t2 }
}""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetObjectsOf owl:equivalentClass .

bsh:Occupancy_PercentageQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:OneLastKnownValuePerEntity a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Only one last known value per entity is allowed" ;
            sh:path brick:lastKnownValue ] ;
    sh:targetSubjectsOf brick:lastKnownValue .

bsh:Operative_TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:K unit:DEG_C unit:DEG_F ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Ozone_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:PM10_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MicroGM-PER-M3 unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:PM1_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MicroGM-PER-M3 unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:PM2.5_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MicroGM-PER-M3 unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Peak_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MegaW unit:KiloW unit:W unit:MilliW ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Phasor_AngleQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Phasor_MagnitudeQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:PositionQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Power_FactorQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:UNITLESS ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:PrecipitationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloM unit:FT unit:MilliM unit:CentiM unit:M unit:DeciM unit:IN unit:MicroM unit:YD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:RDFSRangeRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?val a ?shape .
} WHERE {
    $this rdfs:range ?shape .
    ?shape a sh:NodeShape .
    ?ent $this ?val .
}""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetSubjectsOf rdfs:range .

bsh:RDFSSubPropertyOfRuleForEntityProperties a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?s ?super ?o .
} WHERE {
    $this rdfs:subPropertyOf+ ?super .
    ?super a brick:EntityProperty .
    $this a brick:EntityProperty .
    ?s $this ?o .
}""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetSubjectsOf rdfs:subPropertyOf .

bsh:RadianceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:W-PER-M2-SR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Radiant_TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:K unit:DEG_C unit:DEG_F ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Radon_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:BQ-PER-M3 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Reactive_EnergyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloV-A_Reactive-HR unit:MegaV-A_Reactive-HR unit:V-A_Reactive-HR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Reactive_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:V-A_Reactive unit:MegaV-A_Reactive unit:KiloV-A_Reactive ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Real_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloW unit:W unit:MilliW unit:NanoW unit:MegaW unit:MicroW unit:TeraW unit:GigaW unit:PicoW ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Relative_HumidityQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT unit:PERCENT_RH ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Rotational_SpeedQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:RAD-PER-HR unit:RAD-PER-MIN unit:DEG-PER-SEC unit:DEG-PER-MIN unit:DEG-PER-HR unit:RAD-PER-SEC ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Solar_IrradianceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:W-PER-FT2 unit:W-PER-IN2 unit:W-PER-M2 unit:W-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Solar_RadianceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:W-PER-M2-SR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:SpeedQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:RAD-PER-MIN unit:HZ-M unit:MegaHZ-M unit:FT-PER-HR unit:KiloM-PER-HR unit:RAD-PER-SEC unit:KiloM-PER-SEC unit:MI-PER-HR unit:BFT unit:M-PER-SEC unit:RAD-PER-HR unit:GigaHZ-M unit:DEG-PER-SEC unit:FT-PER-SEC unit:DEG-PER-MIN unit:GigaC-PER-M3 unit:DEG-PER-HR unit:MI-PER-SEC unit:M-PER-HR unit:FT3-PER-MIN-FT2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Static_PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:TVOC_ConcentrationQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:MicroGM-PER-M3 unit:PPM unit:PPB ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:TagInferenceRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
$this brick:hasTag ?tag .
} WHERE {
    $this rdf:type/rdfs:subClassOf* ?class .
    ?class brick:hasAssociatedTag ?tag .
}""" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ] ;
    sh:targetClass brick:Entity .

bsh:TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:DEG_C unit:DEG_F unit:K unit:MilliDEG_C unit:PlanckTemperature unit:DEG_R ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Thermal_EnergyQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloCAL_IT unit:N-M unit:J unit:BTU_TH unit:BTU_MEAN unit:KiloJ unit:BTU_IT unit:KiloBTU_IT unit:KiloBTU_TH unit:CAL_15_DEG_C unit:KiloCAL unit:CAL_MEAN unit:GigaJ unit:THM_EEC unit:KiloCAL_Mean unit:KiloCAL_TH unit:CAL_TH unit:MegaJ unit:THM_US unit:CAL_IT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Thermal_PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:MegaW unit:KiloW unit:W unit:BTU_IT unit:MilliW ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:TimeQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:WK unit:MO_Synodic unit:DAY unit:KiloYR unit:MO_MeanGREGORIAN unit:SEC unit:PA-SEC-PER-BAR unit:SH unit:HR_Sidereal unit:MilliH-PER-KiloOHM unit:H-PER-OHM unit:POISE-PER-BAR unit:MicroH-PER-OHM unit:MO_MeanJulian unit:MilliSEC unit:HR unit:YR unit:YR_TROPICAL unit:DAY_Sidereal unit:PlanckTime unit:MicroSEC unit:MIN_Sidereal unit:NanoSEC unit:MilliH-PER-OHM unit:MIN unit:PicoSEC unit:CentiPOISE-PER-BAR unit:H-PER-KiloOHM unit:YR_Common unit:MilliPA-SEC-PER-BAR unit:MicroH-PER-KiloOHM unit:YR_Sidereal unit:KiloSEC unit:MO unit:MegaYR ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:TimeseriesReferenceOnPointsConstraint a sh:NodeShape ;
    sh:sparql [ a sh:SPARQLConstraint ;
            sh:message "Only Brick Points can have external timeseries references" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ;
            sh:select """
            SELECT $this
            WHERE {
                $this ref:hasExternalReference ?ref .
                ?ref rdf:type ref:TimeseriesReference .
                FILTER NOT EXISTS { $this rdf:type/rdfs:subClassOf* brick:Point }
            }
        """ ] ;
    sh:targetSubjectsOf ref:hasExternalReference .

bsh:TorqueQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:N-M unit:N-CentiM unit:OZ_F-IN unit:LB_F-FT unit:KiloGM_F-M unit:MegaN-M unit:J unit:MicroN-M unit:MilliN-M unit:DYN-CentiM unit:LB_F-IN unit:KiloN-M unit:CentiN-M unit:DeciN-M ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Velocity_PressureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloLB_F-PER-IN2 unit:FT_H2O unit:KiloGM_F-PER-M2 unit:IN_HG unit:KIP_F-PER-IN2 unit:PlanckPressure unit:PDL-PER-FT2 unit:KiloPA unit:CentiM_H2O unit:IN_H2O unit:PA unit:DeciBAR unit:CentiBAR unit:DecaPA unit:ATM_T unit:GigaPA unit:N-PER-MilliM2 unit:BAR unit:KiloBAR unit:KiloGM-PER-M-SEC2 unit:MicroBAR unit:MilliM_HG unit:BARAD unit:DYN-PER-CentiM2 unit:MicroTORR unit:MilliM_HGA unit:N-PER-CentiM2 unit:HectoBAR unit:MicroATM unit:PSI unit:HectoPA unit:LB_F-PER-IN2 unit:MilliM_H2O unit:MegaPA unit:TORR unit:CentiM_HG unit:N-PER-M2 unit:BARYE unit:MicroPA unit:MilliTORR unit:MilliBAR unit:ATM unit:MilliPA unit:KiloGM_F-PER-MilliM2 unit:LB_F-PER-FT2 unit:MegaBAR unit:KiloPA_A unit:FT_HG unit:KiloGM_F-PER-CentiM2 unit:PicoPA unit:GM_F-PER-CentiM2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:VirtualMeterRule a sh:NodeShape ;
    sh:sparql [ a sh:SPARQLConstraint ;
            sh:message "Only meters can have the isVirtualMeter property be true" ;
            sh:prefixes <https://brickschema.org/schema/1.3/Brick> ;
            sh:select """
            SELECT $this WHERE {
                $this brick:isVirtualMeter/brick:value true .
                FILTER NOT EXISTS { $this rdf:type/rdfs:subClassOf* brick:Meter } .
            }
        """ ] ;
    sh:targetClass brick:Entity .

bsh:Voltage_AngleQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:Voltage_ImbalanceQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Wet_Bulb_TemperatureQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:K unit:DEG_C unit:DEG_F ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:Wind_DirectionQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:feedsShape a sh:PropertyShape ;
    sh:path brick:feeds .

bsh:hasHotColdDeck a sh:NodeShape ;
    sh:property [ sh:message "DDAHU must have a brick:Hot_Deck" ;
            sh:path brick:hasPart ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class brick:Hot_Deck ] ;
            sh:qualifiedValueShapesDisjoint true ],
        [ sh:message "DDAHU must have a brick:Cold_Deck" ;
            sh:path brick:hasPart ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class brick:Cold_Deck ] ;
            sh:qualifiedValueShapesDisjoint true ] ;
    sh:targetClass brick:DDAHU .

bsh:hasPartShape a sh:PropertyShape ;
    sh:path brick:hasPart .

bsh:hasQuantity a sh:NodeShape ;
    sh:class qudt:QuantityKind ;
    sh:targetObjectsOf brick:hasQuantity .

bsh:hasSubstance a sh:NodeShape ;
    sh:class brick:Substance ;
    sh:targetObjectsOf brick:hasSubstance .

bsh:isFedByShape a sh:PropertyShape ;
    sh:path brick:isFedBy .

bsh:isPartOfShape a sh:PropertyShape ;
    sh:path brick:isPartOf .

ns2:RM206A a brick:HVAC_Zone ;
    brick:hasPart ns2:RM206A_room .

ns2:RM210 a brick:HVAC_Zone ;
    brick:hasPart ns2:RM210_room .

ns2:VAVRM206A a brick:VAV ;
    brick:feeds ns2:RM206A ;
    brick:hasPoint ns2:bldg25.ZONE.AHU04.RM206A.Zone_Air_Temp,
        ns2:bldg25.ZONE.AHU04.RM206A.Zone_Heating_Mode,
        ns2:bldg25.ZONE.AHU04.RM206A.Zone_Reheat_Valve_Command,
        ns2:bldg25.ZONE.AHU04.RM206A.Zone_Supply_Air_Temp .

ns2:VAVRM210 a brick:VAV ;
    brick:feeds ns2:RM210 ;
    brick:hasPoint ns2:bldg25.ZONE.AHU04.RM210.Zone_Air_Temp,
        ns2:bldg25.ZONE.AHU04.RM210.Zone_Heating_Mode,
        ns2:bldg25.ZONE.AHU04.RM210.Zone_Reheat_Valve_Command,
        ns2:bldg25.ZONE.AHU04.RM210.Zone_Supply_Air_Temp .

ns2:bldg25.AHU.AHU04.CCV a brick:Cooling_Command,
        brick:Valve_Command ;
    rdfs:label "bldg25.AHU.AHU04.CCV" ;
    brick:timeseries [ brick:hasTimeseriesId "62bac719-e814-4059-982e-50051608a799" ] .

ns2:bldg25.AHU.AHU04.Cooling_Valve_Output a brick:Cooling_Command,
        brick:Valve_Command ;
    rdfs:label "bldg25.AHU.AHU04.Cooling Valve Output" ;
    brick:timeseries [ brick:hasTimeseriesId "966b6687-1b18-4a0e-8850-fd5ac800d9c0" ] .

ns2:bldg25.AHU.AHU04.Heating_Valve_Output a brick:Command ;
    rdfs:label "bldg25.AHU.AHU04.Heating Valve Output" ;
    brick:timeseries [ brick:hasTimeseriesId "56e836de-0631-4113-a22e-39890036842c" ] .

ns2:bldg25.AHU.AHU04.Mixed_Air_Temp a brick:Mixed_Air_Temperature_Sensor ;
    rdfs:label "bldg25.AHU.AHU04.Mixed Air Temp" .

ns2:bldg25.AHU.AHU04.Outside_Air_Temp_Virtual a brick:Outside_Air_Temperature_Sensor ;
    rdfs:label "bldg25.AHU.AHU04.Outside Air Temp Virtual" ;
    brick:timeseries [ brick:hasTimeseriesId "806fe27d-a4c4-49c1-857e-aabf3d014da4" ] .

ns2:bldg25.AHU.AHU04.Return_Air_Temp a brick:Return_Air_Temperature_Sensor ;
    rdfs:label "bldg25.AHU.AHU04.Return Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "20ad5dad-bb4f-4050-abcc-200135a3fabf" ] .

ns2:bldg25.AHU.AHU04.Supply_Air_Temp a brick:Supply_Air_Temperature_Sensor ;
    rdfs:label "bldg25.AHU.AHU04.Supply Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "ed336d6a-d3dc-4dde-ad6f-c6eb7a2bb68e" ] .

ns2:bldg25.AHU.AHU04.Supply_Air_Temp_Setpoint a brick:Supply_Air_Temperature_Setpoint ;
    rdfs:label "bldg25.AHU.AHU04.Supply Air Temp Setpoint" ;
    brick:timeseries [ brick:hasTimeseriesId "fe170ef2-f381-4fa5-a6fa-e01326335ff9" ] .

ns2:bldg25.AHU.AHU04.Zone_Air_Temp a brick:Zone_Air_Temperature_Sensor ;
    rdfs:label "bldg25.AHU.AHU04.Zone Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "fb8f320c-be98-43b3-821b-2e3d1437246f" ] .

ns2:bldg25.CHW.Pump1_SPEED a brick:Speed_Status ;
    rdfs:label "bldg25.CHW.Pump1_SPEED" ;
    brick:timeseries [ brick:hasTimeseriesId "c791dc9e-a0da-4b2f-95ba-99243bd92211" ] .

ns3:Stop a brick:Start_Stop_Command ;
    rdfs:label "bldg25.CHW.Pump1_Start/Stop" ;
    brick:timeseries [ brick:hasTimeseriesId "e6839890-07ce-4143-8a1d-fbbee8ab5371" ] .

ns2:bldg25.ZONE.AHU04.RM206A.Zone_Air_Temp a brick:Zone_Air_Temperature_Sensor ;
    rdfs:label "bldg25.ZONE.AHU04.RM206A.Zone Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "05604177-d5b4-4890-a68c-5a4b7e9d165d" ] .

ns2:bldg25.ZONE.AHU04.RM206A.Zone_Heating_Mode a brick:Heating_Command ;
    rdfs:label "bldg25.ZONE.AHU04.RM206A.Zone Heating Mode" .

ns2:bldg25.ZONE.AHU04.RM206A.Zone_Reheat_Valve_Command a brick:Command ;
    rdfs:label "bldg25.ZONE.AHU04.RM206A.Zone Reheat Valve Command" ;
    brick:timeseries [ brick:hasTimeseriesId "48226b7e-30f5-4b1f-b7f2-1ca1e2ec53c1" ] .

ns2:bldg25.ZONE.AHU04.RM206A.Zone_Supply_Air_Temp a brick:Supply_Air_Temperature_Sensor ;
    rdfs:label "bldg25.ZONE.AHU04.RM206A.Zone Supply Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "6927570e-bc67-4c30-97cf-f760a6603988" ] .

ns2:bldg25.ZONE.AHU04.RM210.Zone_Air_Temp a brick:Zone_Air_Temperature_Sensor ;
    rdfs:label "bldg25.ZONE.AHU04.RM210.Zone Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "3dac1bfd-ef17-4773-8909-d2d411b8a34b" ] .

ns2:bldg25.ZONE.AHU04.RM210.Zone_Heating_Mode a brick:Heating_Command ;
    rdfs:label "bldg25.ZONE.AHU04.RM210.Zone Heating Mode" .

ns2:bldg25.ZONE.AHU04.RM210.Zone_Reheat_Valve_Command a brick:Command ;
    rdfs:label "bldg25.ZONE.AHU04.RM210.Zone Reheat Valve Command" ;
    brick:timeseries [ brick:hasTimeseriesId "4f8c2575-978a-488d-98ce-589817daad45" ] .

ns2:bldg25.ZONE.AHU04.RM210.Zone_Supply_Air_Temp a brick:Supply_Air_Temperature_Sensor ;
    rdfs:label "bldg25.ZONE.AHU04.RM210.Zone Supply Air Temp" ;
    brick:timeseries [ brick:hasTimeseriesId "c5531b18-291e-4389-bc8a-0d4b0e645a4f" ] .

ns2:chiller a brick:Chiller ;
    brick:hasPoint ns2:bldg25.CHW.Pump1_SPEED,
        ns3:Stop .

bacnet:description a bacnet:StandardProperty,
        owl:DatatypeProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-description ;
    bacnet:propertyName "description" ;
    bacnet:propertyRef bacnet:Description ;
    skos:definition "The content of the description field of the BACnet object." .

bacnet:object-identifier a bacnet:StandardProperty,
        rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "object-identifier" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-identifier ;
    bacnet:propertyName "object-identifier" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Identifier ;
    rdfs:subPropertyOf bacnet:ReadableProperty ;
    skos:definition "The BACnet object identifier" .

bacnet:object-name a bacnet:StandardProperty,
        owl:DatatypeProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-name ;
    bacnet:propertyName "object-name" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Name ;
    rdfs:subPropertyOf bacnet:ReadableProperty ;
    skos:definition "The content of the name field of the BACnet object." .

bacnet:object-type a bacnet:StandardProperty,
        rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "object-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-type ;
    bacnet:propertyName "object-type" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Type ;
    rdfs:subPropertyOf bacnet:ReadableProperty ;
    skos:definition "The type of the BACnet object" .

bacnet:objectOf a owl:ObjectProperty ;
    rdfs:label "objectOf" ;
    rdfs:comment "The 'parent' BACnet device that hosts this BACnet object." ;
    rdfs:range bacnet:BACnetDevice .

dcterms:abstract a owl:AnnotationProperty ;
    rdfs:label "abstract" ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

dcterms:creator a owl:AnnotationProperty ;
    rdfs:label "creator" .

dcterms:isReplacedBy a owl:ObjectProperty ;
    rdfs:label "is replaced by" .

dcterms:source a owl:AnnotationProperty ;
    rdfs:label "source" ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:anyURI .

qudt:BitEncodingType a owl:Class ;
    rdfs:label "Bit Encoding" ;
    dcterms:description "A bit encoding is a correspondence between the two possible values of a bit, 0 or 1, and some interpretation. For example, in a boolean encoding, a bit denotes a truth value, where 0 corresponds to False and 1 corresponds to True." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding ;
    owl:oneOf ( qudt:BitEncoding ) .

qudt:BooleanEncoding a qudt:BooleanEncodingType ;
    rdfs:label "Boolean Encoding" ;
    qudt:bits 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ByteEncodingType a owl:Class ;
    rdfs:label "Byte Encoding" ;
    dcterms:description "This class contains the various ways that information may be encoded into bytes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:CT_COUNTABLY-INFINITE a qudt:CardinalityType ;
    rdfs:label "Countably Infinite Cardinality Type" ;
    dcterms:description "A set of numbers is called countably infinite if there is a way to enumerate them.  Formally this is done with a bijection function that associates each number in the set with exactly one of the positive integers.  The set of all fractions is also countably infinite.  In other words, any set \\(X\\) that has the same cardinality as the set of the natural numbers, or \\(| X | \\; =  \\; | \\mathbb N | \\; = \\; \\aleph0\\), is said to be a countably infinite set."^^qudt:LatexString ;
    qudt:informativeReference "http://www.math.vanderbilt.edu/~schectex/courses/infinity.pdf"^^xsd:anyURI ;
    qudt:literal "countable" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CT_FINITE a qudt:CardinalityType ;
    rdfs:label "Finite Cardinality Type" ;
    dcterms:description "Any set \\(X\\) with cardinality less than that of the natural numbers, or \\(| X | \\\\; <  \\; | \\\\mathbb N | \\), is said to be a finite set."^^qudt:LatexString ;
    qudt:literal "finite" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CharEncoding a qudt:BooleanEncodingType,
        qudt:CharEncodingType ;
    rdfs:label "Char Encoding" ;
    dc:description "7 bits of 1 octet" ;
    qudt:bytes 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CharEncodingType a owl:Class ;
    rdfs:label "Char Encoding Type" ;
    dcterms:description "The class of all character encoding schemes, each of which defines a rule or algorithm for encoding character data as a sequence of bits or bytes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding ;
    owl:oneOf ( qudt:CharEncoding ) .

qudt:Comment a owl:Class ;
    rdfs:label "Comment" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty dcterms:description ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:rationale ],
        qudt:Verifiable,
        owl:Thing .

qudt:DateTimeStringEncodingType a owl:Class ;
    rdfs:label "Date Time String Encoding Type" ;
    dcterms:description "Date Time encodings are logical encodings for expressing date/time quantities as strings by applying unambiguous formatting and parsing rules." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:minCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:allowedPattern ],
        qudt:StringEncodingType .

qudt:DoublePrecisionEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "Single Precision Real Encoding" ;
    qudt:bytes 64 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Figure a owl:Class ;
    rdfs:label "Figure" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:imageLocation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:figureCaption ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:figureLabel ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:height ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:image ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:landscape ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:width ],
        qudt:Concept .

qudt:IEEE754_1985RealEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "IEEE 754 1985 Real Encoding" ;
    qudt:bytes 32 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:LongUnsignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Long Unsigned Integer Encoding" ;
    qudt:bytes 8 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:NumericUnion a owl:Class ;
    rdfs:label "Numeric union" ;
    rdfs:subClassOf qudt:Concept,
        dtype:numericUnion .

qudt:OctetEncoding a qudt:BooleanEncodingType,
        qudt:ByteEncodingType ;
    rdfs:label "OCTET Encoding" ;
    qudt:bytes 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Organization a owl:Class ;
    rdfs:label "Organization" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:url ],
        qudt:Concept .

qudt:PartiallyOrdered a qudt:OrderedType ;
    rdfs:label "Partially Ordered" ;
    qudt:literal "partial" ;
    qudt:plainTextDescription "Partial ordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:PhysicalConstant a owl:Class ;
    rdfs:label "Physical Constant" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Physical_constant"^^xsd:anyURI ;
    rdfs:comment "A physical constant is a physical quantity that is generally believed to be both universal in nature and constant in time. It can be contrasted with a mathematical constant, which is a fixed numerical value but does not directly involve any physical measurement. There are many physical constants in science, some of the most widely recognized being the speed of light in vacuum c, Newton's gravitational constant G, Planck's constant h, the electric permittivity of free space ε0, and the elementary charge e. Physical constants can take many dimensional forms, or may be dimensionless depending on the system of quantities and units used."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexDefinition ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexSymbol ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:mathMLdefinition ],
        qudt:Quantity .

qudt:Rule a owl:Class ;
    rdfs:label "Rule" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:RuleType ;
            owl:onProperty qudt:ruleType ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:example ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:rationale ],
        qudt:Concept,
        qudt:Verifiable .

qudt:RuleType a owl:Class ;
    rdfs:label "Rule Type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue .

qudt:SIGNED a qudt:SignednessType ;
    rdfs:label "Signed" ;
    dtype:literal "signed" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ScaleType a owl:Class ;
    rdfs:label "Scale type" ;
    qudt:plainTextDescription "Scales, or scales of measurement (or categorization) provide ways of quantifying measurements, values and other enumerated values according to a normative frame of reference.  Four different types of scales are typically used. These are interval, nominal, ordinal and ratio scales." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:MathsFunctionType ;
            owl:onProperty qudt:permissibleMaths ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:TransformType ;
            owl:onProperty qudt:permissibleTransformation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dataStructure ],
        qudt:EnumeratedValue .

qudt:SignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Signed Integer Encoding" ;
    qudt:bytes 4 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SinglePrecisionRealEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "Single Precision Real Encoding" ;
    qudt:bytes 32 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:TotallyOrdered a qudt:OrderedType ;
    rdfs:label "Totally Ordered" ;
    qudt:literal "total" ;
    qudt:plainTextDescription "Totally ordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UNSIGNED a qudt:SignednessType ;
    rdfs:label "Unsigned" ;
    dtype:literal "unsigned" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Unordered a qudt:OrderedType ;
    rdfs:label "Unordered" ;
    qudt:literal "unordered" ;
    qudt:plainTextDescription "Unordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UnsignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Unsigned Integer Encoding" ;
    qudt:bytes 4 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:allowedPattern a rdf:Property ;
    rdfs:label "allowed pattern" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ansiSQLName a rdf:Property ;
    rdfs:label "ANSI SQL Name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:applicableCGSUnit a owl:ObjectProperty ;
    rdfs:label "applicable CGS unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableISOUnit a owl:ObjectProperty ;
    rdfs:label "applicable ISO unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableImperialUnit a owl:ObjectProperty ;
    rdfs:label "applicable Imperial unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicablePhysicalConstant a owl:ObjectProperty ;
    rdfs:label "applicable physical constant" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:applicableSIUnit a owl:ObjectProperty ;
    rdfs:label "applicable SI unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableUSCustomaryUnit a owl:ObjectProperty ;
    rdfs:label "applicable US Customary unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:baseUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is base unit of system" ;
    dcterms:description "This property relates a unit of measure to the system of units in which it is defined as a base unit for the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:coherentUnitOfSystem ;
    owl:inverseOf qudt:hasBaseUnit .

qudt:bounded a rdf:Property ;
    rdfs:label "bounded" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:byteOrder a owl:ObjectProperty ;
    rdfs:label "byte order" ;
    dcterms:description "Byte order is an enumeration of two values: 'Big Endian' and 'Little Endian' and is used to denote whether the most signiticant byte is either first or last, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:EndianType .

qudt:cName a rdf:Property ;
    rdfs:label "C Language name" ;
    rdfs:comment "Datatype name in the C programming language" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:conversionMultiplier a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "conversion multiplier" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range dtype:numericUnion .

qudt:conversionOffset a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "conversion offset" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range dtype:numericUnion .

qudt:dbpediaMatch a owl:DatatypeProperty ;
    rdfs:label "dbpedia match" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:definedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "defined unit of system" ;
    dcterms:description "This property relates a unit of measure with the unit system that defines the unit."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isUnitOfSystem ;
    owl:inverseOf qudt:hasDefinedUnit .

qudt:deprecated a owl:DatatypeProperty ;
    rdfs:label "deprecated" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:derivedCoherentUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is coherent derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units with a proportionality constant of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:coherentUnitOfSystem,
        qudt:derivedUnitOfSystem ;
    owl:inverseOf qudt:hasDerivedCoherentUnit .

qudt:derivedNonCoherentUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is non-coherent derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units without proportionality constant of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:SystemOfUnits ;
    rdfs:subPropertyOf qudt:derivedUnitOfSystem ;
    owl:inverseOf qudt:hasDerivedNonCoherentUnit .

qudt:derivedQuantityKindOfSystem a owl:ObjectProperty ;
    rdfs:label "derived quantity kind of system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isQuantityKindOf ;
    owl:inverseOf qudt:systemDerivedQuantityKind .

qudt:dimensionExponentForAmountOfSubstance a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for amount of substance" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForElectricCurrent a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for electric current" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForLength a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for length" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForLuminousIntensity a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for luminous intensity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForMass a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for mass" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForThermodynamicTemperature a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for thermodynamic temperature" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionExponentForTime a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for time" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionInverse a owl:FunctionalProperty,
        owl:InverseFunctionalProperty,
        owl:ObjectProperty,
        owl:SymmetricProperty ;
    rdfs:label "dimension inverse" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:dimensionInverse .

qudt:dimensionlessExponent a owl:DatatypeProperty ;
    rdfs:label "dimensionless exponent" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:elementType a rdf:Property ;
    rdfs:label "element type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:enumeratedValue a owl:ObjectProperty ;
    rdfs:label "enumerated value" ;
    rdfs:range qudt:EnumeratedValue .

qudt:enumeration a owl:ObjectProperty ;
    rdfs:label "enumeration" ;
    rdfs:range qudt:Enumeration .

qudt:exactConstant a owl:DatatypeProperty ;
    rdfs:label "exact constant" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:example a owl:AnnotationProperty ;
    rdfs:label "example" ;
    rdfs:comment "The 'qudt:example' property is used to annotate an instance of a class with a reference to a concept that is an example. The type of this property is 'rdf:Property'. This allows both scalar and object ranges."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:figureCaption a owl:DatatypeProperty ;
    rdfs:label "figure caption" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:figureLabel a owl:DatatypeProperty ;
    rdfs:label "figure label" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:hasDerivedNonCoherentUnit a owl:ObjectProperty ;
    rdfs:label "has coherent derived unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDerivedUnit ;
    owl:inverseOf qudt:derivedNonCoherentUnitOfSystem .

qudt:hasRule a owl:ObjectProperty ;
    rdfs:label "has rule" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:height a owl:DatatypeProperty ;
    rdfs:label "height" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:iec61360Code a owl:DatatypeProperty ;
    rdfs:label "iec-61360 code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:image a owl:DatatypeProperty ;
    rdfs:label "image" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:imageLocation a owl:DatatypeProperty ;
    rdfs:label "image location" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:informativeReference a owl:DatatypeProperty ;
    rdfs:label "informative reference" ;
    dcterms:description "Provides a way to reference a source that provided useful but non-normative information."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:isBaseQuantityKindOfSystem a owl:ObjectProperty ;
    rdfs:label "is base quantity kind of system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isQuantityKindOf ;
    owl:inverseOf qudt:hasBaseQuantityKind .

qudt:isDeltaQuantity a owl:DatatypeProperty ;
    rdfs:label "is Delta Quantity" ;
    rdfs:comment "This property is used to identify a Quantity instance that is a measure of a change, or interval, of some property, rather than a measure of its absolute value. This is important for measurements such as temperature differences where the conversion among units would be calculated differently because of offsets." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:javaName a owl:DatatypeProperty ;
    rdfs:label "java name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:jsName a owl:DatatypeProperty ;
    rdfs:label "Javascript name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:landscape a owl:DatatypeProperty ;
    rdfs:label "landscape" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:boolean .

qudt:length a rdf:Property ;
    rdfs:label "length" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:integer .

qudt:literal a owl:DatatypeProperty ;
    rdfs:label "literal" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf dtype:literal .

qudt:mathDefinition a owl:DatatypeProperty ;
    rdfs:label "math definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:matlabName a owl:DatatypeProperty ;
    rdfs:label "matlab name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:maxExclusive a owl:DatatypeProperty ;
    rdfs:label "max exclusive" ;
    dcterms:description "maxExclusive is the exclusive upper bound of the value space for a datatype with the ordered property. The value of maxExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf qudt:upperBound .

qudt:maxInclusive a owl:DatatypeProperty ;
    rdfs:label "max inclusive" ;
    dcterms:description "maxInclusive is the inclusive upper bound of the value space for a datatype with the ordered property. The value of maxInclusive must be in the value space of the base type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:upperBound .

qudt:microsoftSQLServerName a owl:DatatypeProperty ;
    rdfs:label "Microsoft SQL Server name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:minExclusive a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "min exclusive" ;
    dcterms:description "minExclusive is the exclusive lower bound of the value space for a datatype with the ordered property. The value of minExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:lowerBound .

qudt:minInclusive a owl:DatatypeProperty ;
    rdfs:label "min inclusive" ;
    dcterms:description "minInclusive is the inclusive lower bound of the value space for a datatype with the ordered property. The value of minInclusive must be in the value space of the base type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:lowerBound .

qudt:mySQLName a owl:DatatypeProperty ;
    rdfs:label "MySQL name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:odbcName a owl:DatatypeProperty ;
    rdfs:label "ODBC name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:oleDBName a owl:DatatypeProperty ;
    rdfs:label "OLE DB name" ;
    dcterms:description "OLE DB (Object Linking and Embedding, Database, sometimes written as OLEDB or OLE-DB), an API designed by Microsoft, allows accessing data from a variety of sources in a uniform manner. The API provides a set of interfaces implemented using the Component Object Model (COM); it is otherwise unrelated to OLE. " ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/OLE_DB"^^xsd:anyURI,
        "http://msdn.microsoft.com/en-us/library/windows/desktop/ms714931(v=vs.85).aspx"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:oracleSQLName a rdf:Property ;
    rdfs:label "ORACLE SQL name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:order a owl:DatatypeProperty ;
    rdfs:label "order" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:nonNegativeInteger .

qudt:plainTextDescription a owl:DatatypeProperty ;
    rdfs:label "description (plain text)" ;
    dcterms:description "A plain text description is used to provide a description with only simple ASCII characters for cases where LaTeX , HTML or other markup would not be appropriate."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:prefixMultiplier a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "prefix multiplier" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:double .

qudt:protocolBuffersName a rdf:Property ;
    rdfs:label "protocol buffers name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:pythonName a rdf:Property ;
    rdfs:label "python name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:ruleType a owl:ObjectProperty ;
    rdfs:label "rule type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:siUnitsExpression a owl:DatatypeProperty ;
    rdfs:label "si units expression" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:specialization a owl:ObjectProperty ;
    rdfs:label "specialization" ;
    dcterms:description "This property relates a quantity kind to its specialization(s). For example, linear velocity and angular velocity are both specializations of velocity."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:generalization .

qudt:systemDerivedQuantityKind a owl:ObjectProperty ;
    rdfs:label "system derived quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasQuantityKind ;
    owl:inverseOf qudt:derivedQuantityKindOfSystem .

qudt:udunitsCode a owl:DatatypeProperty ;
    rdfs:label "udunits code" ;
    dcterms:description "The UDUNITS package supports units of physical quantities. Its C library provides for arithmetic manipulation of units and for conversion of numeric values between compatible units. The package contains an extensive unit database, which is in XML format and user-extendable. The package also contains a command-line utility for investigating units and converting values."^^rdf:HTML ;
    dcterms:source "https://www.unidata.ucar.edu/software/udunits/"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:uneceCommonCode a owl:DatatypeProperty ;
    rdfs:label "unece common code" ;
    dcterms:description "The UN/CEFACT Recommendation 20 provides three character alphabetic and alphanumeric codes for representing units of measurement for length, area, volume/capacity, mass (weight), time, and other quantities used in international trade. The codes are intended for use in manual and/or automated systems for the exchange of information between participants in international trade."^^rdf:HTML ;
    dcterms:source "https://service.unece.org/trade/uncefact/vocabulary/rec20/"^^xsd:anyURI,
        "https://unece.org/trade/documents/2021/06/uncefact-rec20-0"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:unitFor a owl:ObjectProperty ;
    rdfs:label "unit for" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:unit .

qudt:vbName a rdf:Property ;
    rdfs:label "Vusal Basic name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:width a owl:DatatypeProperty ;
    rdfs:label "width" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

quantitykind:AcceptorIonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Acceptor Ionization Energy"@en ;
    dcterms:description "&quot;Acceptor Ionization Energy&quot; is the ionization energy of an acceptor."^^rdf:HTML ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Acceptor Ionization Energy\" is the ionization energy of an acceptor." ;
    qudt:symbol "E_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:IonizationEnergy ;
    skos:closeMatch quantitykind:DonorIonizationEnergy .

quantitykind:AcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Acoustic Impediance"@en ;
    qudt:applicableUnit unit:PA-SEC-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z_a= \\frac{p}{q} = \\frac{p}{vS}\\), where \\(p\\) is the sound pressure, \\(q\\) is the sound volume velocity, \\(v\\) is sound particle velocity, and \\(S\\) is the surface area through which an acoustic wave of frequence \\(f\\) propagates."^^qudt:LatexString ;
    qudt:plainTextDescription "Acoustic impedance at a surface is the complex quotient of the average sound pressure over that surface by the sound volume flow rate through that surface." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassPerAreaTime .

quantitykind:ActivityConcentration a qudt:QuantityKind ;
    rdfs:label "Activity Concentration"@en ;
    qudt:applicableUnit unit:BQ-PER-L,
        unit:BQ-PER-M3,
        unit:MicroBQ-PER-L,
        unit:MilliBQ-PER-L,
        unit:NanoBQ-PER-L ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.euronuclear.org/info/encyclopedia/activityconcentration.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c_A = \\frac{A}{V}\\), where \\(A\\) is the activity of a sample and \\(V\\) is its volume."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Activity Concentration\", also known as volume activity, and activity density, is ." ;
    qudt:symbol "c_A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstancePerUnitMass a qudt:QuantityKind ;
    rdfs:label "Amount of Substance per Unit Mass"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:FemtoMOL-PER-KiloGM,
        unit:IU-PER-MilliGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM,
        unit:MicroMOL-PER-GM,
        unit:MicroMOL-PER-KiloGM,
        unit:MilliMOL-PER-GM,
        unit:MilliMOL-PER-KiloGM,
        unit:NanoMOL-PER-KiloGM,
        unit:PicoMOL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    vaem:todo "fix the numerator and denominator dimensions" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngularReciprocalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Angular Reciprocal Lattice Vector"@en ;
    dcterms:description "\"Angular Reciprocal Lattice Vector\" is a vector whose scalar products with all fundamental lattice vectors are integral multiples of \\(2\\pi\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavenumber"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition """\\(k = \\frac{2\\pi}{\\lambda}= \\frac{2\\pi\\upsilon}{\\upsilon_p}=\\frac{\\omega}{\\upsilon_p}\\), where \\(\\upsilon\\) is the frequency of the wave, \\(\\lambda\\) is the wavelength, \\(\\omega = 2\\pi \\upsilon\\) is the angular frequency of the wave, and \\(\\upsilon_p\\) is the phase velocity of the wave.

Alternatively:

\\(k = \\frac{p}{\\hbar}\\), where \\(p\\) is the linear momentum of quasi free electrons in an electron gas and \\(\\hbar\\) is the reduced Planck constant (\\(h\\) divided by \\(2\\pi\\)); for phonons, its magnitude is \\(k = \\frac{2\\pi}{\\lambda}\\), where \\(\\lambda\\) is the wavelength of the lattice vibrations."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"wavenumber\" is the spatial frequency of a wave - the number of waves that exist over a specified distance. More formally, it is the reciprocal of the wavelength. It is also the magnitude of the wave vector." ;
    qudt:symbol "k" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:AreaRatio a qudt:QuantityKind ;
    rdfs:label "Area Ratio"@en ;
    qudt:applicableUnit unit:M2-PER-HA,
        unit:M2-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:AtmosphericPressure a qudt:QuantityKind ;
    rdfs:label "Atmospheric Pressure"@en ;
    dcterms:description "The pressure exerted by the weight of the air above it at any point on the earth's surface. At sea level the atmosphere will support a column of mercury about \\(760 mm\\) high. This decreases with increasing altitude. The standard value for the atmospheric pressure at sea level in SI units is \\(101,325 pascals\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Atmospheric_pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/views/ENTRY.html?subview=Main&entry=t83.e178"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:BloodGlucoseLevel a qudt:QuantityKind ;
    rdfs:label "Blood Glucose Level"@en ;
    dcterms:description "The blood sugar level, blood sugar concentration, or blood glucose level is the amount of glucose present in the blood of humans and other animals. Glucose is a simple sugar and approximately 4 grams of glucose are present in the blood of humans at all times. The body tightly regulates blood glucose levels as a part of metabolic homeostasis. Glucose is stored in skeletal muscle and liver cells in the form of glycogen;[2] in fasted individuals, blood glucose is maintained at a constant level at the expense of glycogen stores in the liver and skeletal muscle. [Wikipedia] \\(\\\\\\) There are two main methods of describing concentrations: by weight, and by molecular count. Weights are in grams, molecular counts in moles. A mole is \\(6.022\\times 10^{23}\\) molecules.) In both cases, the unit is usually modified by \\(milli-\\) or \\(micro-\\) or other prefix, and is always \\(per\\) some volume, often a liter. Conversion factors depend on the molecular weight of the substance in question. \\(\\\\\\) \\(mmol/L\\) is millimoles/liter, and is the world standard unit for measuring glucose in blood. Specifically, it is the designated SI (Systeme International) unit. 'World standard' is not universal; not only the US but a number of other countries use mg/dl. A mole is about \\(6\\times 10^{23}\\) molecules. \\(\\\\\\) \\(mg/dL\\) (milligrams/deciliter) is the traditional unit for measuring bG (blood glucose). There is a trend toward using \\(mmol/L\\) however mg/dL is much in practice. Some use is made of \\(mmol/L\\) as the primary unit with \\(mg/dL\\) quoted in parentheses. This acknowledges the large base of health care providers, researchers and patients who are already familiar with \\(mg/dL|)."^^qudt:LatexString ;
    qudt:applicableUnit unit:MilliMOL-PER-L ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.faqs.org/faqs/diabetes/faq/part1/section-9.html"^^xsd:anyURI ;
    rdfs:comment "citation: https://en.wikipedia.org/wiki/Blood_sugar_level" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:BloodGlucoseLevel_Mass .

quantitykind:BloodGlucoseLevel_Mass a qudt:QuantityKind ;
    rdfs:label "Blood Glucose Level by Mass"@en ;
    dcterms:description "The blood sugar level, blood sugar concentration, or blood glucose level is the amount of glucose present in the blood of humans and other animals. Glucose is a simple sugar and approximately 4 grams of glucose are present in the blood of humans at all times. The body tightly regulates blood glucose levels as a part of metabolic homeostasis. Glucose is stored in skeletal muscle and liver cells in the form of glycogen;[2] in fasted individuals, blood glucose is maintained at a constant level at the expense of glycogen stores in the liver and skeletal muscle. [Wikipedia] \\(\\\\\\) There are two main methods of describing concentrations: by weight, and by molecular count. Weights are in grams, molecular counts in moles. A mole is \\(6.022\\times 10^{23}\\) molecules.) In both cases, the unit is usually modified by \\(milli-\\) or \\(micro-\\) or other prefix, and is always \\(per\\) some volume, often a liter. Conversion factors depend on the molecular weight of the substance in question. \\(\\\\\\) \\(mmol/L\\) is millimoles/liter, and is the world standard unit for measuring glucose in blood. Specifically, it is the designated SI (Systeme International) unit. 'World standard' is not universal; not only the US but a number of other countries use mg/dl. A mole is about \\(6\\times 10^{23}\\) molecules. \\(\\\\\\) \\(mg/dL\\) (milligrams/deciliter) is the traditional unit for measuring bG (blood glucose). There is a trend toward using \\(mmol/L\\) however mg/dL is much in practice. Some use is made of \\(mmol/L\\) as the primary unit with \\(mg/dL\\) quoted in parentheses. This acknowledges the large base of health care providers, researchers and patients who are already familiar with \\(mg/dL|)."^^qudt:LatexString ;
    qudt:applicableUnit unit:MilliGM-PER-DeciL ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://www.faqs.org/faqs/diabetes/faq/part1/section-9.html"^^xsd:anyURI ;
    rdfs:comment "citation: https://en.wikipedia.org/wiki/Blood_sugar_level" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:BloodGlucoseLevel .

quantitykind:BurnRate a qudt:QuantityKind ;
    rdfs:label "Burn Rate"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:Capacity a qudt:QuantityKind ;
    rdfs:label "Capacity"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Capacity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In computer operations, (a) the largest quantity which can be stored, processed, or transferred; (b) the largest number of digits or characters which may regularly be processed; (c) the upper and lower limits of the quantities which may be processed. In other contexts, the amount of material that  can be stored, such as fuel or food." ;
    qudt:symbol "TBD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CenterOfGravity_X a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the X axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CenterOfGravity_Y a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the Y axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CenterOfGravity_Z a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the Z axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ChemicalPotential a qudt:QuantityKind ;
    rdfs:label "Chemical Potential"@en ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_potential"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_B = (\\frac{\\partial G}{\\partial n_B})_{T,p,n_i}\\), where \\(G\\) is Gibbs energy, and \\(n_B\\) is the amount of substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Chemical Potential\", also known as partial molar free energy, is a form of potential energy that can be absorbed or released during a chemical reaction." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MolarEnergy .

quantitykind:Conductance a qudt:QuantityKind ;
    rdfs:label "Conductance"@en ;
    dcterms:description "\\(\\textit{Conductance}\\), for a resistive two-terminal element or two-terminal circuit with terminals A and B, quotient of the electric current i in the element or circuit by the voltage \\(u_{AB}\\) between the terminals: \\(G = \\frac{1}{R}\\), where the electric current is taken as positive if its direction is from A to B and negative in the opposite case. The conductance of an element or circuit is the inverse of its resistance."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciS,
        unit:KiloS,
        unit:MegaS,
        unit:MicroS,
        unit:MilliS,
        unit:NanoS,
        unit:PicoS,
        unit:S ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-06"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition """\\(G = Re\\underline{Y}\\), where \\(\\underline{Y}\\) is admittance.

Alternatively:

\\(G = \\frac{1}{R}\\), where \\(R\\) is resistance."""^^qudt:LatexString ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Admittance .

quantitykind:CorrelatedColorTemperature a qudt:QuantityKind ;
    rdfs:label "Correlated Colour Temperature"@en,
        "Correlated Color Temperature"@en-us ;
    qudt:applicableUnit unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "https://www.lrc.rpi.edu/programs/nlpip/lightinganswers/lightsources/whatiscct.asp#:~:text=Correlated%20color%20temperature%20(CCT)%20is,required%20to%20specify%20a%20chromaticity."^^xsd:anyURI ;
    qudt:plainTextDescription "Correlated color temperature (CCT) is a measure of light source color appearance defined by the proximity of the light source's chromaticity coordinates to the blackbody locus, as a single number rather than the two required to specify a chromaticity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Duv ;
    skos:broader quantitykind:ThermodynamicTemperature .

quantitykind:Curvature a qudt:QuantityKind ;
    rdfs:label "Curvature"@en ;
    dcterms:description "The canonical example of extrinsic curvature is that of a circle, which has curvature equal to the inverse of its radius everywhere. Smaller circles bend more sharply, and hence have higher curvature. The curvature of a smooth curve is defined as the curvature of its osculating circle at each point. The osculating circle of a sufficiently smooth plane curve at a given point on the curve is the circle whose center lies on the inner normal line and whose curvature is the same as that of the given curve at that point. This circle is tangent to the curve at the given point. The magnitude of curvature at points on physical curves can be measured in \\(diopters\\) (also spelled \\(dioptre\\)) — this is the convention in optics."^^qudt:LatexString ;
    qudt:applicableUnit unit:DIOPTER ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Curvature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curvature"^^xsd:anyURI ;
    qudt:plainTextDescription """The canonical example of extrinsic curvature is that of a circle, which has curvature equal to the inverse of its radius everywhere. Smaller circles bend more sharply, and hence have higher curvature. The curvature of a smooth curve is defined as the curvature of its osculating circle at each point. The osculating circle of a sufficiently smooth plane curve at a given point on the curve is the circle whose center lies on the inner normal line and whose curvature is the same as that of the given curve at that point. This circle is tangent to the curve at the given point.
That is, given a point P on a smooth curve C, the curvature of C at P is defined to be 1/R where R is the radius of the osculating circle of C at P. The magnitude of curvature at points on physical curves can be measured in diopters (also spelled dioptre) — this is the convention in optics. [Wikipedia],""" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:DewPointTemperature a qudt:QuantityKind ;
    rdfs:label "Dew Point Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Dew Point Temperature\" is the temperature at which vapour in air reaches saturation." ;
    qudt:symbol "T_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:DiastolicBloodPressure a qudt:QuantityKind ;
    rdfs:label "Diastolic Blood Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780199549351.001.0001/acref-9780199549351-e-1162"^^xsd:anyURI ;
    qudt:plainTextDescription "The pressure of blood in the arteries which rises to a maximum as blood is pumped out by the left ventricle (systole) and drops to a minimum in diastole. The systolic/diastolic pressure is normally ~120/80 mmHg in a young adult." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SystolicBloodPressure ;
    skos:broader quantitykind:Pressure .

quantitykind:DisplacementCurrent a qudt:QuantityKind ;
    rdfs:label "Displacement Current"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement_current"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_D= \\int_S J_D \\cdot e_n dA\\), over a surface \\(S\\), where \\(J_D\\) is displacement current density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Displacement Current\" is a quantity appearing in Maxwell's equations that is defined in terms of the rate of change of electric displacement field. Displacement current has the units of electric current density, and it has an associated magnetic field just as actual currents do. However it is not an electric current of moving charges, but a time-varying electric field. In materials, there is also a contribution from the slight motion of charges bound in atoms, dielectric polarization." ;
    qudt:symbol "I_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:DisplacementCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Displacement Current Density"@en ;
    dcterms:description "\\(\\textbf{Displacement Current Density}\\) is the time rate of change of the \\(\\textit{Electric Flux Density}\\). This is a measure of how quickly the electric field changes if we observe it as a function of time. This is different than if we look at how the electric field changes spatially, that is, over a region of space for a fixed amount of time."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-M2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.maxwells-equations.com/math/partial-electric-flux.php"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_D = \\frac{\\partial D}{\\partial t}\\), where \\(D\\) is electric flux density and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_D\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:DonorIonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Donor Ionization Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Donor Ionization Energy\" is the ionization energy of a donor." ;
    qudt:symbol "E_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:IonizationEnergy ;
    skos:closeMatch quantitykind:AcceptorIonizationEnergy .

quantitykind:Duv a qudt:QuantityKind ;
    rdfs:label "Delta u,v"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://www.waveformlighting.com/tech/calculate-duv-from-cie-1931-xy-coordinates"^^xsd:anyURI,
        "https://www1.eere.energy.gov/buildings/publications/pdfs/ssl/led-color-characteristics-factsheet.pdf"^^xsd:anyURI ;
    qudt:plainTextDescription "Duv is a metric that is short for Delta u,v (not to be confused with Delta u',v') and describes the distance of a light color point from the black body curve." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:CorrelatedColorTemperature .

quantitykind:EffectiveMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Effective Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_chain_reaction#Effective_neutron_multiplication_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Effective Multiplication Factor\" is the multiplication factor for a finite medium." ;
    qudt:symbol "k_{eff}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MultiplicationFactor ;
    skos:closeMatch quantitykind:InfiniteMultiplicationFactor .

quantitykind:ElectricChargePerMass a qudt:QuantityKind ;
    rdfs:label "Electric Charge Per Mass"@en ;
    dcterms:description "\"Electric Charge Per Mass\" is the charge associated with a specific mass of a substance. In the SI and ISO systems this is \\(1 kg\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-M2-PER-J-SEC,
        unit:C-PER-KiloGM,
        unit:HZ-PER-T,
        unit:KiloR,
        unit:MegaHZ-PER-T,
        unit:MilliC-PER-KiloGM,
        unit:MilliR,
        unit:PER-T-SEC,
        unit:R ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDipoleMoment a qudt:QuantityKind ;
    rdfs:label "Electric Dipole Moment"@en ;
    qudt:applicableUnit unit:C-M,
        unit:Debye ;
    qudt:hasDimensionVector qkdv:A0E1L1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_dipole_moment"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition """\\(E_p = -p \\cdot E\\), where \\(E_p\\) is the interaction energy of the molecule with electric dipole moment \\(p\\) and an electric field with electric field strength \\(E\\).

\\(p = q(r_+ - r_i)\\), where \\(r_+\\) and \\(r_-\\) are the position vectors to carriers of electric charge \\(a\\) and \\(-q\\), respectively."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Dipole Moment\" is a measure of the separation of positive and negative electrical charges in a system of (discrete or continuous) charges. It is a vector-valued quantity. If the system of charges is neutral, that is if the sum of all charges is zero, then the dipole moment of the system is independent of the choice of a reference frame; however in a non-neutral system, such as the dipole moment of a single proton, a dependence on the choice of reference point arises. In such cases it is conventional to choose the reference point to be the center of mass of the system or the center of charge, not some arbitrary origin. This convention ensures that the dipole moment is an intrinsic property of the system. The electric dipole moment of a substance within a domain is the vector sum of electric dipole moments of all electric dipoles included in the domain." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDipoleMoment_CubicPerEnergy_Squared a qudt:QuantityKind ;
    rdfs:label "Cubic Electric Dipole Moment per Square Energy"@en ;
    qudt:applicableUnit unit:C3-M-PER-J2 ;
    qudt:hasDimensionVector qkdv:A0E3L-1I0M-2H0T7D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDipoleMoment_QuarticPerEnergy_Cubic a qudt:QuantityKind ;
    rdfs:label "Quartic Electric Dipole Moment per Cubic Energy"@en ;
    qudt:applicableUnit unit:C4-M4-PER-J3 ;
    qudt:hasDimensionVector qkdv:A0E4L-2I0M-3H0T10D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricField a qudt:QuantityKind ;
    rdfs:label "Electric Field"@en ;
    qudt:applicableUnit unit:V-PER-M,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_field"^^xsd:anyURI ;
    qudt:expression "\\(E\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_field"^^xsd:anyURI ;
    qudt:plainTextDescription "The space surrounding an electric charge or in the presence of a time-varying magnetic field has a property called an electric field. This electric field exerts a force on other electrically charged objects. In the idealized case, the force exerted between two point charges is inversely proportional to the square of the distance between them. (Coulomb's Law)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricPolarization a qudt:QuantityKind ;
    rdfs:label "Electric Polarization"@en ;
    qudt:applicableUnit unit:C-PER-M2,
        unit:KiloC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.britannica.com/EBchecked/topic/182690/electric-polarization"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P =\\frac{dp}{dV}\\), where \\(p\\) is electic charge density and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Polarization\" is the relative shift of positive and negative electric charge in opposite directions within an insulator, or dielectric, induced by an external electric field. Polarization occurs when an electric field distorts the negative cloud of electrons around positive atomic nuclei in a direction opposite the field. This slight separation of charge makes one side of the atom somewhat positive and the opposite side somewhat negative. In some materials whose molecules are permanently polarized by chemical forces, such as water molecules, some of the polarization is caused by molecules rotating into the same alignment under the influence of the electric field. One of the measures of polarization is electric dipole moment, which equals the distance between the slightly shifted centres of positive and negative charge multiplied by the amount of one of the charges. Polarization P in its quantitative meaning is the amount of dipole moment p per unit volume V of a polarized material, P = p/V." ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity,
        quantitykind:ElectricDipoleMoment .

quantitykind:EnergyPerMagneticFluxDensity_Squared a qudt:QuantityKind ;
    rdfs:label "Energy Per Square Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:J-PER-T2 ;
    qudt:hasDimensionVector qkdv:A0E2L2I0M-1H0T2D0 ;
    qudt:plainTextDescription "\"Energy Per Square Magnetic Flux Density\" is a measure of energy for a unit of magnetic flux density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Energy_Squared a qudt:QuantityKind ;
    rdfs:label "Square Energy"@en ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M2H0T-4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EquilibriumConstantOnConcentrationBasis a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant on Concentration Basis"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K_c = \\Pi_B(c_B)^{-\\nu_B}\\), for solutions"^^qudt:LatexString ;
    qudt:latexSymbol "\\(K_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:comment "The unit is unit:MOL-PER-M3 raised to the N where N is the summation of stoichiometric numbers. I don't know what to do with this." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EquilibriumConstant .

quantitykind:EquilibriumConstantOnPressureBasis a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant on Pressure Basis"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K_p = \\Pi_B(p_B)^{-\\nu_B}\\), for gases"^^qudt:LatexString ;
    qudt:latexSymbol "\\(K_p\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    qudt:qkdvDenominator qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-2I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EquilibriumConstant .

quantitykind:ForceMagnitude a qudt:QuantityKind ;
    rdfs:label "Force Magnitude"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://wiki.answers.com/Q/What_is_magnitude_of_force"^^xsd:anyURI ;
    qudt:plainTextDescription "The 'magnitude' of a force is its 'size' or 'strength', regardless of the direction in which it acts." ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:ForcePerAngle a qudt:QuantityKind ;
    rdfs:label "Force per Angle"@en ;
    qudt:applicableUnit unit:N-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GapEnergy a qudt:QuantityKind ;
    rdfs:label "Gap Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Band_gap"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Gap Energy\" is the difference in energy between the lowest level of conduction band and the highest level of valence band. It is an energy range in a solid where no electron states can exist." ;
    qudt:symbol "E_g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:HeadEndPressure a qudt:QuantityKind ;
    rdfs:label "Head End Pressure"@en ;
    qudt:abbreviation "HEP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:HeatCapacity a qudt:QuantityKind ;
    rdfs:label "Heat Capacity"@en ;
    dcterms:description "\"Heat Capacity\" (usually denoted by a capital \\(C\\), often with subscripts), or thermal capacity, is the measurable physical quantity that characterizes the amount of heat required to change a substance's temperature by a given amount. In the International System of Units (SI), heat capacity is expressed in units of joule(s) (J) per kelvin (K)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-DEG_F,
        unit:BTU_IT-PER-DEG_R,
        unit:EV-PER-K,
        unit:J-PER-K,
        unit:MegaJ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_capacity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C = dQ/dT\\), where \\(Q\\) is amount of heat and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:symbol "C_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerTemperature .

quantitykind:IncidenceProportion a qudt:QuantityKind ;
    rdfs:label "Incidence Proportion"@en ;
    qudt:applicableUnit unit:CASES-PER-KiloINDIV-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Cumulative_incidence"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "Incidence proportion (also known as cumulative incidence) is the number of new cases within a specified time period divided by the size of the population initially at risk. For example, if a population initially contains 1,000 non-diseased persons and 28 develop a condition over two years of observation, the incidence proportion is 28 cases per 1,000 persons per two years, i.e. 2.8% per two years." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IncidenceRate ;
    skos:broader quantitykind:Incidence .

quantitykind:IncidenceRate a qudt:QuantityKind ;
    rdfs:label "Incidence Rate"@en ;
    qudt:applicableUnit unit:CASES-PER-KiloINDIV-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "The incidence rate is a measure of the frequency with which a disease or other incident occurs over a specified time period. It is also known as the incidence density rate or person-time incidence rate, when the denominator is the combined person-time of the population at risk (the sum of the time duration of exposure across all persons exposed)" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IncidenceProportion ;
    skos:broader quantitykind:Incidence .

quantitykind:InfiniteMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Infinite Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(k_\\infty\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Infinite Multiplication Factor\" is the multiplication factor for an infinite medium or for an infinite repeating lattice." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MultiplicationFactor ;
    skos:closeMatch quantitykind:EffectiveMultiplicationFactor .

quantitykind:InformationEntropy a qudt:QuantityKind ;
    rdfs:label "Information Entropy"@en ;
    qudt:applicableUnit unit:BAN,
        unit:BIT,
        unit:BYTE,
        unit:ERLANG,
        unit:ExaBYTE,
        unit:ExbiBYTE,
        unit:GibiBYTE,
        unit:GigaBYTE,
        unit:HART,
        unit:KibiBYTE,
        unit:KiloBYTE,
        unit:MebiBYTE,
        unit:MegaBYTE,
        unit:NAT,
        unit:PebiBYTE,
        unit:PetaBYTE,
        unit:SHANNON,
        unit:TebiBYTE,
        unit:TeraBYTE ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://simple.wikipedia.org/wiki/Information_entropy"^^xsd:anyURI ;
    qudt:plainTextDescription "Information Entropy is a concept from information theory. It tells how much information there is in an event. In general, the more uncertain or random the event is, the more information it will contain. The concept of information entropy was created by a mathematician. He was named Claude Elwood Shannon. It has applications in many areas, including lossless data compression, statistical inference, cryptography and recently in other disciplines as biology, physics or machine learning." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:InverseEnergy_Squared a qudt:QuantityKind ;
    rdfs:label "Inverse Square Energy"@en ;
    qudt:applicableUnit unit:PER-GigaEV2 ;
    qudt:hasDimensionVector qkdv:A0E0L-4I0M-2H0T4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseMass_Squared a qudt:QuantityKind ;
    rdfs:label "Inverse Square Mass"@en ;
    qudt:applicableUnit unit:PER-PlanckMass2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-2H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareTime a qudt:QuantityKind ;
    rdfs:label "Inverse Square Time"@en ;
    dcterms:isReplacedBy quantitykind:InverseTime_Squared ;
    qudt:deprecated true ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTime_Squared a qudt:QuantityKind ;
    rdfs:label "Inverse Square Time"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonDensity a qudt:QuantityKind ;
    rdfs:label "Ion Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.answers.com/topic/ion-density"^^xsd:anyURI ;
    qudt:latexDefinition """\\(n^+ = \\frac{N^+}{V}\\), \\(n^- = \\frac{N^-}{V}\\)

where \\(N^+\\) and \\(N^-\\) are the number of positive and negative ions, respectively, in a 3D domain with volume \\(V\\)."""^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Ion Density\" is the number of ions per unit volume. Also known as ion concentration." ;
    qudt:symbol "N, n^+, n^-" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:IsentropicCompressibility a qudt:QuantityKind ;
    rdfs:label "Isentropic Compressibility"@en ;
    qudt:applicableUnit unit:PER-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa_S = \\frac{1}{V}\\left (\\frac{\\partial V}{\\partial p} \\right )_S\\), where \\(V\\) is volume, \\(p\\) is \\(pressure\\), and \\(S\\) is entropy,"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa_S\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Isentropic compressibility is the extent to which a material reduces its volume when it is subjected to compressive stresses at a constant value of entropy." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IsentropicExponent a qudt:QuantityKind ;
    rdfs:label "Isentropic Exponent"@en ;
    dcterms:description "Isentropic exponent is a variant of \"Specific Heat Ratio Capacities}. For an ideal gas \\textit{Isentropic Exponent\"\\(, \\varkappa\\). is equal to \\(\\gamma\\), the ratio of its specific heat capacities \\(c_p\\) and \\(c_v\\) under steady pressure and volume."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Specific_heat_ratio"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa = -\\frac{V}{p}\\left \\{  \\frac{\\partial p}{\\partial  V}\\right \\}_S\\), where \\(V\\) is volume, \\(p\\) is pressure, and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IsentropicCompressibility .

quantitykind:LatticeVector a qudt:QuantityKind ;
    rdfs:label "Lattice Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lattice Vector\" is a translation vector that maps the crystal lattice on itself." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:LengthRatio a qudt:QuantityKind ;
    rdfs:label "Length Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LinearElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Linear Electric Current"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.asknumbers.com/ElectricalConversion.aspx"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Linear Electric Linear Current\" is the electric current per unit line." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LinearElectricCurrentDensity .

quantitykind:LinearElectricCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Linear Electric Current Density"@en ;
    dcterms:description "\"Linear Electric Linear Current Density\" is the electric current per unit length. Electric current, \\(I\\), through a curve \\(C\\) is defined as \\(I = \\int_C J _s \\times e_n\\), where \\(e_n\\) is a unit vector perpendicular to the surface and line vector element, and \\(dr\\) is the differential of position vector \\(r\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.asknumbers.com/ElectricalConversion.aspx"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_s = \\rho_A v\\), where \\(\\rho_A\\) is surface density of electric charge and \\(v\\) is velocity."^^qudt:LatexString ;
    qudt:symbol "J_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeSurfaceDensity,
        quantitykind:ElectricCurrentDensity .

quantitykind:LowerCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Lower Critical Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:GAUSS,
        unit:Gamma,
        unit:Gs,
        unit:KiloGAUSS,
        unit:MicroT,
        unit:MilliT,
        unit:NanoT,
        unit:T,
        unit:T_Ab ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lower Critical Magnetic Flux Density\" for type II superconductors, is the threshold magnetic flux density for magnetic flux entering the superconductor." ;
    qudt:symbol "B_{c1}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFluxDensity ;
    skos:closeMatch quantitykind:UpperCriticalMagneticFluxDensity .

quantitykind:Luminance a qudt:QuantityKind ;
    rdfs:label "Luminance"@en ;
    qudt:applicableUnit unit:CD-PER-IN2,
        unit:CD-PER-M2,
        unit:FT-LA,
        unit:LA,
        unit:STILB ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_v = \\frac{dI_v}{dA}\\), where \\(dI_v\\) is the luminous intensity of an element of the surface with the area \\(dA\\) of the orthogonal projection of this element on a plane perpendicular to the given direction."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminance is a photometric measure of the luminous intensity per unit area of light travelling in a given direction. It describes the amount of light that passes through or is emitted from a particular area, and falls within a given solid angle." ;
    qudt:symbol "L_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousFlux a qudt:QuantityKind ;
    rdfs:label "Luminous Flux"@en ;
    qudt:applicableUnit unit:LM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminous_flux"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I1M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_flux"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi_v = K_m \\int_{0}^{\\infty}{\\Phi_\\lambda(\\lambda)}{V(\\lambda)d\\lambda}\\), where \\(K_m\\) is the maximum spectral luminous efficacy, \\(\\Phi_\\lambda(\\lambda)\\) is the spectral radiant flux, \\(V(\\lambda)\\) is the spectral luminous efficiency, and \\(\\lambda\\) is the wavelength."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Flux or Luminous Power is the measure of the perceived power of light. It differs from radiant flux, the measure of the total power of light emitted, in that luminous flux is adjusted to reflect the varying sensitivity of the human eye to different wavelengths of light." ;
    qudt:symbol "F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousFluxRatio a qudt:QuantityKind ;
    rdfs:label "Luminous Flux Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_flux"^^xsd:anyURI ;
    qudt:plainTextDescription "Luminous Flux Ratio (or Relative Luminous Flux or Relative Luminous Power) is the measure of the perceived power of light. It differs from radiant flux, the measure of the total power of light emitted, in that luminous flux is adjusted to reflect the varying sensitivity of the human eye to different wavelengths of light. It is expressed as a percentage or fraction of full power." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LuminousIntensity a qudt:QuantityKind ;
    rdfs:label "Luminous Intensity"@en ;
    qudt:applicableUnit unit:CD,
        unit:CP ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminous_intensity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I1M0H0T0D0 ;
    qudt:plainTextDescription "Luminous Intensity is a measure of the wavelength-weighted power emitted by a light source in a particular direction per unit solid angle. The weighting is determined by the luminosity function, a standardized model of the sensitivity of the human eye to different wavelengths." ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticField a qudt:QuantityKind ;
    rdfs:label "Magnetic Field"@en ;
    dcterms:description "The Magnetic Field, denoted \\(B\\), is a fundamental field in electrodynamics which characterizes the magnetic force exerted by electric currents.  It is closely related to the auxillary magnetic field H (see quantitykind:AuxillaryMagneticField)."^^qudt:LatexString ;
    qudt:applicableUnit unit:Gamma,
        unit:T,
        unit:T_Ab ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticTension a qudt:QuantityKind ;
    rdfs:label "Magnetic Tension"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-57"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_m = \\int_{r_a(C)}^{r_b} \\mathbf{H} \\cdot dr\\), where \\(\\mathbf{H}\\) is magnetic field strength and \\(r\\) is the position vector along a given curve \\(C\\) from point \\(a\\) to point \\(b\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Tension} is a scalar quantity equal to the line integral of the magnetic field strength \\mathbf{H\" along a specified path linking two points a and b." ;
    qudt:symbol "U_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:MassAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-GM,
        unit:M2-PER-GM_DRY,
        unit:M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_m = \\frac{\\mu}{\\rho}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(\\rho\\) is the mass density of the medium."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per unit mass." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassDefect a qudt:QuantityKind ;
    rdfs:label "Mass Defect"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Binding_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = Zm(^{1}\\textrm{H}) + Nm_n - m_a\\), where \\(Z\\) is the proton number of the atom, \\(m(^{1}\\textrm{H})\\) is atomic mass of \\(^{1}\\textrm{H}\\), \\(N\\) is the neutron number, \\(m_n\\) is the rest mass of the neutron, and \\(m_a\\) is the rest mass of the atom."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Defect\", also termed mass deficit, or mass packing fraction, describes mass change (decrease) in bound systems, particularly atomic nuclei." ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassFlowRate a qudt:QuantityKind ;
    rdfs:label "Mass Flow Rate"@en ;
    dcterms:description "\"Mass Flow Rate\" is a measure of Mass flux. The common symbol is \\(\\dot{m}\\) (pronounced \"m-dot\"), although sometimes \\(\\mu\\) is used. The SI units are \\(kg s-1\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN-SEC-PER-CentiM,
        unit:GM-PER-DAY,
        unit:GM-PER-HR,
        unit:GM-PER-MIN,
        unit:GM-PER-SEC,
        unit:KiloGM-PER-DAY,
        unit:KiloGM-PER-HR,
        unit:KiloGM-PER-MIN,
        unit:KiloGM-PER-SEC,
        unit:LB-PER-DAY,
        unit:LB-PER-HR,
        unit:LB-PER-MIN,
        unit:LB-PER-SEC,
        unit:MilliGM-PER-DAY,
        unit:MilliGM-PER-HR,
        unit:MilliGM-PER-MIN,
        unit:MilliGM-PER-SEC,
        unit:OZ-PER-DAY,
        unit:OZ-PER-HR,
        unit:OZ-PER-MIN,
        unit:OZ-PER-SEC,
        unit:SLUG-PER-DAY,
        unit:SLUG-PER-HR,
        unit:SLUG-PER-MIN,
        unit:SLUG-PER-SEC,
        unit:TONNE-PER-DAY,
        unit:TONNE-PER-HR,
        unit:TONNE-PER-MIN,
        unit:TONNE-PER-SEC,
        unit:TON_Metric-PER-DAY,
        unit:TON_Metric-PER-HR,
        unit:TON_Metric-PER-MIN,
        unit:TON_Metric-PER-SEC,
        unit:TON_SHORT-PER-HR,
        unit:TON_UK-PER-DAY,
        unit:TON_US-PER-DAY,
        unit:TON_US-PER-HR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mass_flow_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_flow_rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_m = \\frac{dm}{dt}\\), where \\(m\\) is mass and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{m}\\)"^^qudt:LatexString ;
    qudt:symbol "q_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificImpulse .

quantitykind:MassFractionOfDryMatter a qudt:QuantityKind ;
    rdfs:label "Mass Fraction of Dry Matter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_d= 1 - w_{h2o}\\), where \\(w_{h2o}\\) is mass fraction of water."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Fraction of Dry Matter} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFractionOfWater .

quantitykind:MassFractionOfWater a qudt:QuantityKind ;
    rdfs:label "Mass Fraction of Water"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_{H_2o} = \\frac{u}{1+u}\\), where \\(u\\) is mass ratio of water to dry water."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Fraction of Water} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w_{H_2o}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFractionOfDryMatter .

quantitykind:MassPerAreaTime a qudt:QuantityKind ;
    rdfs:label "Mass per Area Time"@en ;
    dcterms:description "In Physics and Engineering, mass flux is the rate of mass flow per unit area. The common symbols are \\(j\\), \\(J\\), \\(\\phi\\), or \\(\\Phi\\)  (Greek lower or capital Phi), sometimes with subscript \\(m\\) to indicate mass is the flowing quantity.  Its SI units are \\( kg s^{-1} m^{-2}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN-SEC-PER-CentiM3,
        unit:GM-PER-M2-DAY,
        unit:GM_Carbon-PER-M2-DAY,
        unit:GM_Nitrogen-PER-M2-DAY,
        unit:KiloGM-PER-M2-SEC,
        unit:KiloGM-PER-SEC-M2,
        unit:MicroGM-PER-M2-DAY,
        unit:MilliGM-PER-M2-DAY,
        unit:MilliGM-PER-M2-HR,
        unit:MilliGM-PER-M2-SEC,
        unit:TONNE-PER-HA-YR ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_flux"^^xsd:anyURI ;
    qudt:latexSymbol "\\(j_m = \\lim\\limits_{A \\rightarrow 0}\\frac{I_m}{A}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MaxOperatingThrust a qudt:QuantityKind ;
    rdfs:label "Max Operating Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOT" ;
    skos:broader quantitykind:Thrust .

quantitykind:MolarEnergy a qudt:QuantityKind ;
    rdfs:label "Molar Energy"@en ;
    dcterms:description "\"Molar Energy\" is the total energy contained by a thermodynamic system. The unit is \\(J/mol\\), also expressed as \\(joule/mole\\),  or \\(joules per mole\\). This unit is commonly used in the SI unit system. The quantity has the dimension of \\(M \\cdot L^2 \\cdot  T^{-2} \\cdot N^{-1}\\) where \\(M\\) is mass, \\(L\\) is length, \\(T\\) is time, and \\(N\\) is amount of substance."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units-molar_energy-joule_per_mole.cfm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_m = \\frac{U}{n}\\), where \\(U\\) is internal energy and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:symbol "U_M" ;
    vaem:todo "dimensions are wrong" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MutualInductance a qudt:QuantityKind ;
    rdfs:label "Mutual Inductance"@en ;
    dcterms:description "\\(\\textit{Mutual Inductance}\\) is the non-diagonal term of the inductance matrix. For two loops, the symbol \\(M\\) is used for \\(L_{12}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:H,
        unit:H_Ab,
        unit:H_Stat,
        unit:MicroH,
        unit:MilliH,
        unit:NanoH,
        unit:PicoH ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-36"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_{mn} = \\frac{\\Psi_m}{I_n}\\), where \\(I_n\\) is an electric current in a thin conducting loop \\(n\\) and \\(\\Psi_m\\) is the linked flux caused by that electric current in another loop \\(m\\)."^^qudt:LatexString ;
    qudt:symbol "L_{mn}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Inductance ;
    skos:broader quantitykind:Inductance .

quantitykind:NonNegativeLength a qudt:QuantityKind ;
    rdfs:label "Positive Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "\"NonNegativeLength\" is a measure of length greater than or equal to zero." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:NozzleThroatDiameter a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Permittivity a qudt:QuantityKind ;
    rdfs:label "Permittivity"@en ;
    qudt:applicableUnit unit:FARAD-PER-KiloM,
        unit:FARAD-PER-M,
        unit:FARAD_Ab-PER-CentiM,
        unit:MicroFARAD-PER-KiloM,
        unit:MicroFARAD-PER-M,
        unit:NanoFARAD-PER-M,
        unit:PicoFARAD-PER-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permittivity?oldid=494094133"^^xsd:anyURI,
        "http://maxwells-equations.com/materials/permittivity.php"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\epsilon = \\frac{D}{E}\\), where \\(D\\) is electric flux density and \\(E\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\epsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Permittivity\" is a physical quantity that describes how an electric field affects, and is affected by a dielectric medium, and is determined by the ability of a material to polarize in response to the field, and thereby reduce the total electric field inside the material.  Permittivity is often a scalar valued quantity, however in the general case it is tensor-valued." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PositionVector a qudt:QuantityKind ;
    rdfs:label "Position Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r = \\overrightarrow{OP}\\), where \\(O\\) and \\(P\\) are two points in space."^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Position Vector\", also known as location vector or radius vector, is a Euclidean vector which represents the position of a point P in space in relation to an arbitrary reference origin O." ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PowerFactor a qudt:QuantityKind ;
    rdfs:label "Power Factor"@en ;
    dcterms:description "\"Power Factor\", under periodic conditions, is the ratio of the absolute value of the active power \\(P\\) to the apparent power \\(S\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(power-factor\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-46"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\left | P \\right | / \\left | S \\right |\\), where \\(P\\) is active power and \\(S\\) is apparent power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ActivePower,
        quantitykind:ApparentPower .

quantitykind:PowerPerAreaAngle a qudt:QuantityKind ;
    rdfs:label "Power per Area Angle"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PropellantMass a qudt:QuantityKind ;
    rdfs:label "Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:PropellantTemperature a qudt:QuantityKind ;
    rdfs:label "Propellant Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:QualityFactor a qudt:QuantityKind ;
    rdfs:label "Quality Factor"@en ;
    dcterms:description "\"Quality Factor\", of a resonant circuit, is a measure of the \"goodness\" or quality of a resonant circuit. A higher value for this figure of merit correspondes to a more narrow bandwith, which is desirable in many applications. More formally, \\(Q\\) is the ratio of power stored to power dissipated in the circuit reactance and resistance, respectively"^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.sourcetronic.com/electrical-measurement-glossary/quality-factor.html"^^xsd:anyURI,
        "http://www.allaboutcircuits.com/vol_2/chpt_6/6.html"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "If \\(\\underline{Z} = R + jX\\), then \\(Q = \\left | X \\right |/R\\), where \\(\\underline{Z}\\) is impedance, \\(R\\) is resistance, and \\(X\\) is reactance."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    vaem:todo "Resolve Quality Facor - electronics and also doses" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance,
        quantitykind:Resistance .

quantitykind:RadiantEnergy a qudt:QuantityKind ;
    rdfs:label "Radiant Energy"@en ;
    qudt:abbreviation "M-L2-PER-T2" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q_e\\)"^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "In radiometry,\"Radiant Energy} is the energy of electromagnetic waves. The quantity of radiant energy may be calculated by integrating radiant flux (or power) with respect to time.  In nuclear physics, \\textit{Radiant Energy\" is energy, excluding rest energy, of the particles that are emitted, transferred, or received." ;
    qudt:symbol "Q_e",
        "R" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy ;
    skos:closeMatch quantitykind:LuminousEnergy .

quantitykind:Reactance a qudt:QuantityKind ;
    rdfs:label "Reactance"@en ;
    qudt:applicableUnit unit:OHM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electrical_reactance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electrical_reactance?oldid=494180019"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-46"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(X = im \\underline{Z}\\), where \\(\\underline{Z}\\) is impedance and \\(im\\) denotes the imaginary part."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reactance\" is the opposition of a circuit element to a change of electric current or voltage, due to that element's inductance or capacitance. A built-up electric field resists the change of voltage on the element, while a magnetic field resists the change of current. The notion of reactance is similar to electrical resistance, but they differ in several respects. Capacitance and inductance are inherent properties of an element, just like resistance." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:ReactivePower a qudt:QuantityKind ;
    rdfs:label "Reactive Power"@en ;
    dcterms:description "\"Reactive Power}, for a linear two-terminal element or two-terminal circuit, under sinusoidal conditions, is the quantity equal to the product of the apparent power \\(S\\) and the sine of the displacement angle \\(\\psi\\). The absolute value of the reactive power is equal to the non-active power. The ISO (and SI) unit for reactive power is the voltampere. The special name \\(\\textit{var}\\) and symbol \\(\\textit{var}\\) are given in IEC 60027 1."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A_Reactive,
        unit:MegaV-A_Reactive,
        unit:V-A_Reactive ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-44"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q = lm \\underline{S}\\), where \\(\\underline{S}\\) is complex power. Alternatively expressed as: \\(Q = S \\cdot \\sin  \\psi\\), where \\(\\psi\\) is the displacement angle."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ComplexPower ;
    skos:broader quantitykind:ComplexPower .

quantitykind:Reluctance a qudt:QuantityKind ;
    rdfs:label "Reluctance"@en ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Magnetic_reluctance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R_m = \\frac{U_m}{\\Phi}\\), where \\(U_m\\) is magnetic tension, and \\(\\Phi\\) is magnetic flux."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reluctance\" or magnetic resistance, is a concept used in the analysis of magnetic circuits. It is analogous to resistance in an electrical circuit, but rather than dissipating electric energy it stores magnetic energy. In likeness to the way an electric field causes an electric current to follow the path of least resistance, a magnetic field causes magnetic flux to follow the path of least magnetic reluctance. It is a scalar, extensive quantity, akin to electrical resistance." ;
    qudt:symbol "R_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFlux,
        quantitykind:MagneticTension .

quantitykind:ResistanceRatio a qudt:QuantityKind ;
    rdfs:label "Resistance Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-2L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:SecondOrderReactionRateConstant a qudt:QuantityKind ;
    rdfs:label "Reaction Rate Constant"@en ;
    qudt:applicableUnit unit:CentiM3-PER-MOL-SEC ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T-1D0 ;
    qudt:plainTextDescription "A quantity kind that is a proportionality constant that quantifies the relationship between the molar concentrations of the reactants and the rate of a second order chemical reaction." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SignalStrength a qudt:QuantityKind ;
    rdfs:label "Signal Strength"@en ;
    qudt:applicableUnit unit:KiloV-PER-M,
        unit:MegaV-PER-M,
        unit:MicroV-PER-M,
        unit:MilliV-PER-M,
        unit:V-PER-CentiM,
        unit:V-PER-IN,
        unit:V-PER-M,
        unit:V-PER-MilliM,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Signal_strength"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:plainTextDescription "In telecommunications, particularly in radio, signal strength refers to the magnitude of the electric field at a reference point that is a significant distance from the transmitting antenna. It may also be referred to as received signal level or field strength. Typically, it is expressed in voltage per length or signal power received by a reference antenna. High-powered transmissions, such as those used in broadcasting, are expressed in dB-millivolts per metre (dBmV/m)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricField,
        quantitykind:ElectricFieldStrength .

quantitykind:SoundIntensity a qudt:QuantityKind ;
    rdfs:label "Sound intensity"@en ;
    qudt:abbreviation "w/m2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_intensity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = pv\\), where \\(p\\) is the sound pressure and \\(v\\) is sound particle velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound intensity or acoustic intensity (\\(I\\)) is defined as the sound power \\(P_a\\) per unit area \\(A\\). The usual context is the noise measurement of sound intensity in the air at a listener's location as a sound energy quantity." ;
    qudt:symbol "I" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:SoundPowerLevel a qudt:QuantityKind ;
    rdfs:label "Sound power level"@en ;
    dcterms:description "Sound Power Level abbreviated as \\(SWL\\) expresses sound power more practically as a relation to the threshold of hearing - 1 picoW - in a logarithmic scale."^^qudt:LatexString ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_power#Sound_power_level"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_W = 10 \\log_{10} \\frac{P}{P_0} dB\\), where \\(P\\) is sound power and the reference value is \\(P_0 =1pW\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StochasticProcess a qudt:QuantityKind ;
    rdfs:label "Stochastic Process"@en ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Stochastic_process"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stochastic_process"^^xsd:anyURI ;
    qudt:plainTextDescription "In probability theory, a stochastic process, or sometimes random process  is a collection of random variables; this is often used to represent the evolution of some random value, or system, over time. This is the probabilistic counterpart to a deterministic process (or deterministic system)." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Frequency .

quantitykind:SystolicBloodPressure a qudt:QuantityKind ;
    rdfs:label "Systolic Blood Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780199549351.001.0001/acref-9780199549351-e-1162"^^xsd:anyURI ;
    qudt:plainTextDescription "The pressure of blood in the arteries which rises to a maximum as blood is pumped out by the left ventricle (systole) and drops to a minimum in diastole. The systolic/diastolic pressure is normally ~120/80 mmHg in a young adult." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DiastolicBloodPressure ;
    skos:broader quantitykind:Pressure .

quantitykind:TemperaturePerTime a qudt:QuantityKind ;
    rdfs:label "Temperature per Time"@en ;
    qudt:applicableUnit unit:DEG_C-PER-HR,
        unit:DEG_C-PER-MIN,
        unit:DEG_C-PER-SEC,
        unit:DEG_C-PER-YR,
        unit:DEG_F-PER-HR,
        unit:DEG_F-PER-MIN,
        unit:DEG_F-PER-SEC,
        unit:DEG_R-PER-HR,
        unit:DEG_R-PER-MIN,
        unit:DEG_R-PER-SEC,
        unit:K-PER-HR,
        unit:K-PER-MIN,
        unit:K-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalInsulance a qudt:QuantityKind ;
    rdfs:label "Thermal Insulance"@en ;
    dcterms:description "\\(\\textit{Thermal Insulance}\\) is the reduction of heat transfer (the transfer of thermal energy between objects of differing temperature) between objects in thermal contact or in range of radiative influence. In building technology, this quantity is often called \\(\\textit{Thermal Resistance}\\), with the symbol \\(R\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CLO,
        unit:DEG_F-HR-FT2-PER-BTU_IT,
        unit:DEG_F-HR-FT2-PER-BTU_TH,
        unit:FT2-HR-DEG_F-PER-BTU_IT,
        unit:M2-HR-DEG_C-PER-KiloCAL_IT,
        unit:M2-K-PER-W ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_insulation"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = 1/K\\), where \\(K\\) is \"Coefficient of Heat Transfer\""^^qudt:LatexString ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:CoefficientOfHeatTransfer .

quantitykind:TimeRatio a qudt:QuantityKind ;
    rdfs:label "Time Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:TimeTemperature a qudt:QuantityKind ;
    rdfs:label "Time Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-WK,
        unit:K-DAY,
        unit:K-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Time_Squared a qudt:QuantityKind ;
    rdfs:label "Time Squared"@en ;
    qudt:applicableUnit unit:SEC2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Time_Squared"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TorquePerAngle a qudt:QuantityKind ;
    rdfs:label "Torque per Angle"@en ;
    qudt:applicableUnit unit:N-M-PER-RAD ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:UpperCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Upper Critical Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:GAUSS,
        unit:Gamma,
        unit:Gs,
        unit:KiloGAUSS,
        unit:MicroT,
        unit:MilliT,
        unit:NanoT,
        unit:T,
        unit:T_Ab ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Upper Critical Magnetic Flux Density\" for type II superconductors, is the threshold magnetic flux density for disappearance of bulk superconductivity." ;
    qudt:symbol "B_{c2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFluxDensity ;
    skos:closeMatch quantitykind:LowerCriticalMagneticFluxDensity .

quantitykind:VacuumThrust a qudt:QuantityKind ;
    rdfs:label "Vacuum Thrust"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:expression "\\(VT\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:VoltageRatio a qudt:QuantityKind ;
    rdfs:label "Voltage Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-1L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Work a qudt:QuantityKind ;
    rdfs:label "Work"@en ;
    dcterms:description "The net work is equal to the change in kinetic energy. This relationship is called the work-energy theorem: \\(Wnet = K. E._f − K. E._o \\), where \\(K. E._f\\) is the final kinetic energy and \\(K. E._o\\) is the original kinetic energy. Potential energy, also referred to as stored energy, is the ability of a system to do work due to its position or internal structure. Change in potential energy is equal to work. The potential energy equations can also be derived from the integral form of work, \\(\\Delta P. E. = W = \\int  F \\cdot dx\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Work_(physics)"^^xsd:anyURI,
        "http://www.cliffsnotes.com/study_guide/Work-and-Energy.topicArticleId-10453,articleId-10418.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = \\int Pdt\\), where \\(P\\) is power and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "A force is said to do Work when it acts on a body so that there is a displacement of the point of application, however small, in the direction of the force.  The concepts of work and energy are closely tied to the concept of force because an applied force can do work on an object and cause a change in energy. Energy is defined as the ability to do work. Work is done on an object when an applied force moves it through a distance. Kinetic energy is the energy of an object in motion. The net work is equal to the change in kinetic energy." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

voag:QUDT-QUANTITY-KINDS-VocabCatalogEntry_v1.2 a vaem:CatalogEntry ;
    rdfs:label "QUDT Quantity Kinds Vocabulary Catalog Entry v1.2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

<http://www.linkedmodel.org/schema/dtype> vaem:namespace "http://www.linkedmodel.org/schema/dtype#"^^xsd:anyURI ;
    vaem:namespacePrefix "dtype" .

vaem:GMD_QUDT-QUANTITY-KINDS-ALL a vaem:GraphMetaData ;
    rdfs:label "QUDT Quantity Kinds Vocabulary Version 2.1.26" ;
    dcterms:contributor "Jack Hodges",
        "Steve Ray" ;
    dcterms:created "2019-08-01T16:25:54.850000+00:00"^^xsd:dateTime ;
    dcterms:creator "Ralph Hodgson",
        "Steve Ray" ;
    dcterms:description "Provides the set of all quantity kinds."^^rdf:HTML ;
    dcterms:modified "2023-04-12T16:08:34.746000-04:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "QUANTITY-KINDS-ALL" ;
    dcterms:title "QUDT Quantity Kinds Version 2.1 Vocabulary" ;
    vaem:applicableDiscipline "All disciplines" ;
    vaem:applicableDomain "Science, Medicine and Engineering" ;
    vaem:dateCreated "2019-08-01T21:26:38"^^xsd:dateTime ;
    vaem:graphTitle "QUDT Quantity Kinds Version 2.1.26" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:intent "Provides a vocabulary of all quantity kinds." ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/quantitykind> ;
    vaem:latestPublishedVersion "https://qudt.org/doc/2023/04/DOC_VOCAB-QUANTITY-KINDS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:logo "https://qudt.org/linkedmodels.org/assets/lib/lm/images/logos/qudt_logo-300x110.png" ;
    vaem:namespace "http://qudt.org/vocab/quantitykind/" ;
    vaem:namespacePrefix "quantitykind" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "https://qudt.org/doc/2023/03/DOC_VOCAB-QUANTITY-KINDS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:specificity 1 ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/quantitykind" ;
    vaem:usesNonImportedResource dc:contributor,
        dc:creator,
        dc:description,
        dc:rights,
        dc:subject,
        dc:title,
        dcterms:contributor,
        dcterms:created,
        dcterms:creator,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution,
        voag:QUDT-QUANTITY-KINDS-VocabCatalogEntry_v1.2,
        <http://voag.linkedmodel.org/voag/QUDT-Attribution>,
        skos:closeMatch,
        skos:exactMatch ;
    vaem:withAttributionTo voag:QUDT-Attribution,
        <http://voag.linkedmodel.org/voag/QUDT-Attribution> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

vaem:GMD_QUDT-SCHEMA a vaem:GraphMetaData ;
    rdfs:label "QUDT Schema - Version 2.1.26" ;
    dcterms:contributor "Daniel Mekonnen",
        "David Price",
        "Jack Hodges",
        "James E. Masters",
        "Simon J D Cox",
        "Steve Ray" ;
    dcterms:created "2011-04-20"^^xsd:date ;
    dcterms:creator "Ralph Hodgson" ;
    dcterms:description """<p class="lm-para">The QUDT, or &quot;Quantity, Unit, Dimension and Type&quot; schema defines the base classes properties, and restrictions used for modeling physical quantities, units of measure, and their dimensions in various measurement systems. The goal of the QUDT ontology is to provide a unified model of, measurable quantities, units for measuring different kinds of quantities, the numerical values of quantities in different units of measure and the data structures and data types used to store and manipulate these objects in software.</p>

<p class="lm-para">Except for unit prefixes, all units are specified in separate vocabularies. Descriptions are provided in both HTML and LaTeX formats. A quantity is a measure of an observable phenomenon, that, when associated with something, becomes a property of that thing; a particular object, event, or physical system. </p>

<p class="lm-para">A quantity has meaning in the context of a measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying quantity kind is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc.  Or, as stated at Wikipedia, in the language of measurement, quantities are quantifiable aspects of the world, such as time, distance, velocity, mass, momentum, energy, and weight, and units are used to describe their measure. Many of these quantities are related to each other by various physical laws, and as a result the units of some of the quantities can be expressed as products (or ratios) of powers of other units (e.g., momentum is mass times velocity and velocity is measured in distance divided by time).</p>"""^^rdf:HTML ;
    dcterms:modified "2023-04-12T14:49:00.763000-04:00"^^xsd:dateTime ;
    dcterms:rights """
  This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at ​http://unitsofmeasure.org. The current complete UCUM table, UCUM Specification are available for download at ​http://unitsofmeasure.org. The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.

THE UCUM TABLE (IN ALL FORMATS), UCUM DEFINITIONS, AND SPECIFICATION ARE PROVIDED 'AS IS.' ANY EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  """,
        "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "QUDT" ;
    dcterms:title "QUDT Schema - Version 2.1.26" ;
    qudt:informativeReference "http://unitsofmeasure.org/trac"^^xsd:anyURI,
        "http://www.bipm.org/en/publications/si-brochure"^^xsd:anyURI,
        "http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf"^^xsd:anyURI,
        "https://books.google.com/books?id=pIlCAAAAIAAJ&dq=dimensional+analysis&hl=en"^^xsd:anyURI,
        "https://www.nist.gov/physical-measurement-laboratory/special-publication-811"^^xsd:anyURI ;
    vaem:graphName "qudt" ;
    vaem:graphTitle "Quantities, Units, Dimensions and Types (QUDT) Schema - Version 2.1.26" ;
    vaem:hasGraphRole vaem:SchemaGraph ;
    vaem:hasOwner vaem:QUDT ;
    vaem:hasSteward vaem:QUDT ;
    vaem:intent "Specifies the schema for quantities, units and dimensions. Types are defined in other schemas." ;
    vaem:isMetadataFor <http://qudt.org/2.1/schema/qudt> ;
    vaem:latestPublishedVersion "https://qudt.org/doc/2023/04/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
    vaem:logo "https://qudt.org/linkedmodels.org/assets/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:namespace "http://qudt.org/schema/qudt/" ;
    vaem:namespacePrefix "qudt" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "https://qudt.org/doc/2023/03/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:turtleFileURL "http://qudt.org/2.1/schema/qudt"^^xsd:anyURI ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:contributor,
        dcterms:created,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:source,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution ;
    vaem:withAttributionTo voag:QUDT-Attribution ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:versionIRI <http://qudt.org/2.1/schema/qudt> .

skos:narrower a rdf:Property ;
    rdfs:label "has narrower"@en ;
    owl:inverseOf skos:broader .

vcard:Address a owl:Class .

vcard:hasAddress a owl:ObjectProperty .

sosa:FeatureOfInterest a owl:Class .

sosa:ObservableProperty a owl:Class .

brick:AED a owl:Class,
        sh:NodeShape ;
    rdfs:label "AED" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    owl:equivalentClass brick:Automated_External_Defibrillator ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AED ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Defibrillator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AED,
        tag:Defibrillator,
        tag:Equipment,
        tag:Safety .

brick:Acceleration_Time a brick:Quantity ;
    rdfs:label "Acceleration Time" ;
    skos:broader brick:Time .

brick:Access_Control_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Access Control Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Access ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Access,
        tag:Control,
        tag:Equipment,
        tag:Security .

brick:Active_Energy a brick:Quantity ;
    rdfs:label "Active_Energy" ;
    qudt:applicableUnit unit:KiloW-HR,
        unit:MegaW-HR,
        unit:W-HR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Electric_Energy ;
    skos:definition "The integral of the active power over a time interval" .

brick:Air_Flow_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint,
        brick:Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Air_Handling_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Handling Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:AHU,
        brick:Air_Handler_Unit ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Handling,
        tag:Unit .

brick:Air_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, distribution systems and terminals that introduce or exhaust, either collectively or individually, the air into and from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:System .

brick:Air_Wet_Bulb_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Wet Bulb Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor,
        brick:Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bulb ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bulb,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Wet ;
    brick:hasQuantity brick:Wet_Bulb_Temperature ;
    brick:hasSubstance brick:Air .

brick:Angle a brick:Quantity ;
    rdfs:label "Angle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    skos:definition "The inclination to each other of two intersecting lines, measured by the arc of a circle intercepted between the two lines forming the angle, the center of the circle being the point of intersection.  An acute angle is less than (90^\\circ), a right angle (90^\\circ); an obtuse angle, more than (90^\\circ) but less than (180^\\circ); a straight angle, (180^\\circ); a reflex angle, more than (180^\\circ) but less than (360^\\circ); a perigon, (360^\\circ). Any angle not a multiple of (90^\\circ) is an oblique angle. If the sum of two angles is (90^\\circ), they are complementary angles; if (180^\\circ), supplementary angles; if (360^\\circ), explementary angles."@en ;
    brick:hasQUDTReference quantitykind:Angle .

brick:Apparent_Energy a brick:Quantity ;
    rdfs:label "Apparent_Energy" ;
    qudt:applicableUnit unit:KiloV-A-HR,
        unit:MegaV-A-HR,
        unit:V-A-HR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Electric_Energy ;
    skos:definition "The integral of the apparent power over a time interval" .

brick:Apparent_Power a brick:Quantity ;
    rdfs:label "Apparent Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    skos:broader brick:Electric_Power ;
    skos:definition "Apparent Power is the product of the rms voltage (U) between the terminals of a two-terminal element or two-terminal circuit and the rms electric current I in the element or circuit. Under sinusoidal conditions, the apparent power is the modulus of the complex power."@en ;
    brick:hasQUDTReference quantitykind:ApparentPower .

brick:Atmospheric_Pressure a brick:Quantity ;
    rdfs:label "Atmospheric Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    skos:definition "The pressure exerted by the weight of the air above it at any point on the earth's surface. At sea level the atmosphere will support a column of mercury about (760 mm) high. This decreases with increasing altitude. The standard value for the atmospheric pressure at sea level in SI units is (101,325 pascals)."@en ;
    brick:hasQUDTReference quantitykind:AtmosphericPressure .

brick:Automated_External_Defibrillator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automated External Defibrillator" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    owl:equivalentClass brick:AED ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AED ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Defibrillator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AED,
        tag:Defibrillator,
        tag:Equipment,
        tag:Safety .

brick:Average_Discharge_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Discharge Air Flow Sensor" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Sensor ;
    skos:definition "The computed average flow of discharge air over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor .

brick:Blowdown_Water a brick:Substance ;
    rdfs:label "Blowdown Water" ;
    skos:broader brick:Water ;
    skos:definition "Water expelled from a system to remove mineral build up"@en .

brick:Break_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Break Room" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Breakroom ;
    skos:definition "A space for people to relax while not working"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Break ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Break,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Breakroom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Breakroom" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Break_Room ;
    skos:definition "A space for people to relax while not working"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Breakroom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Breakroom,
        tag:Location,
        tag:Room,
        tag:Space .

brick:CAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "CAV" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CAV,
        tag:Equipment .

brick:CO a brick:Substance ;
    rdfs:label "CO" ;
    skos:broader brick:Gas ;
    skos:definition "Carbon Monoxide in the vapor phase"@en .

brick:CO2 a brick:Substance ;
    rdfs:label "CO2" ;
    skos:broader brick:Gas ;
    skos:definition "Carbon Dioxide in the vapor phase"@en .

brick:CO2_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the presence of carbon dioxide."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:CO2,
        tag:Point .

brick:CO2_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Level Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Level,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets some property of CO2"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:CO2_Concentration .

brick:CRAH a owl:Class,
        sh:NodeShape ;
    rdfs:label "CRAH" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:Computer_Room_Air_Handler ;
    skos:definition "a computer room air handler (CRAH) uses fans, cooling coils and a water-chiller system to remove heat."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAH ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAH,
        tag:Equipment .

brick:Camera a owl:Class,
        sh:NodeShape ;
    rdfs:label "Camera" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Camera ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Camera,
        tag:Equipment .

brick:Capacity a brick:Quantity ;
    rdfs:label "Capacity" ;
    brick:hasQUDTReference quantitykind:Capacity .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Water_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit used to carry chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Meter" ;
    rdfs:subClassOf brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Chilled_Water .

brick:Cold_Deck a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cold Deck" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Part of a dual duct air handling unit that supplies cooling to a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cold ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deck ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cold,
        tag:Deck,
        tag:Equipment .

brick:Complex_Power a brick:Quantity ;
    rdfs:label "Complex Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    skos:broader brick:Electric_Power ;
    skos:definition "Complex Power, under sinusoidal conditions, is the product of the phasor (U) representing the voltage between the terminals of a linear two-terminal element or two-terminal circuit and the complex conjugate of the phasor (I) representing the electric current in the element or circuit."@en ;
    brick:hasQUDTReference quantitykind:ComplexPower .

brick:Computer_Room_Air_Conditioning a owl:Class,
        sh:NodeShape ;
    rdfs:label "Computer Room Air Conditioning" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:CRAC ;
    skos:definition "A device that monitors and maintains the temperature, air distribution and humidity in a network room or data center."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Computer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Conditioning ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Computer,
        tag:Conditioning,
        tag:Equipment,
        tag:Room .

brick:Computer_Room_Air_Handler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Computer Room Air Handler" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:CRAH ;
    skos:definition "a computer room air handler (CRAH) uses fans, cooling coils and a water-chiller system to remove heat."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Computer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Computer,
        tag:Equipment,
        tag:Handler,
        tag:Room .

brick:Conductivity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Conductivity Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures electrical conductance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conductivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conductivity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Conductivity .

brick:Cooling_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor ;
    skos:definition "Measures the amount of power consumed by a cooling process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Cooling_Setpoint,
        brick:Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of cooling discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Cool,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:Current_Angle a brick:Quantity ;
    rdfs:label "CurrentAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Phasor_Angle ;
    skos:definition "Angle of current phasor",
        "Angle of current phasor"@en ;
    skos:related brick:Electric_Current .

brick:Current_Total_Harmonic_Distortion a brick:Quantity ;
    rdfs:label "CurrentTotalHarmonicDistortion" ;
    qudt:applicableUnit unit:DeciB_M,
        unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "Measurement of harmonic distortion present in a signal defined as the sum of the powers of all harmonic components to the power of the fundamental frequency. (https://en.wikipedia.org/wiki/Total_harmonic_distortion)",
        "Measurement of harmonic distortion present in a signal defined as the sum of the powers of all harmonic components to the power of the fundamental frequency. (https://en.wikipedia.org/wiki/Total_harmonic_distortion)"@en ;
    skos:related brick:Electric_Current .

brick:Cycle_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cycle Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates off-normal conditions associated with HVAC cycles"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Cycle,
        tag:Point .

brick:DOAS a owl:Class,
        sh:NodeShape ;
    rdfs:label "DOAS" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Dedicated_Outdoor_Air_System_Unit ;
    skos:definition "See Dedicated_Outdoor_Air_System_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:DOAS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:DOAS,
        tag:Equipment .

brick:Damper_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls properties of dampers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Damper,
        tag:Point .

brick:Deceleration_Time a brick:Quantity ;
    rdfs:label "Deceleration Time" ;
    skos:broader brick:Time .

brick:Dedicated_Outdoor_Air_System_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dedicated Outdoor Air System Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:DOAS ;
    skos:definition "A device that conditions and delivers 100% outdoor air to its assigned spaces. It decouples air-conditioning of the outdoor air, usually used to provide minimum outdoor air ventilation, from conditioning of the internal loads."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dedicated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dedicated,
        tag:Equipment,
        tag:Outdoor,
        tag:System .

brick:Delay_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Delay Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter determining how long to delay a subsequent action to take place after a received signal"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Delay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Delay,
        tag:Parameter,
        tag:Point .

brick:DeprecationShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "A SHACL rule which will mitigate the deprecation" ;
            sh:class sh:NodeShape ;
            sh:path brick:deprecationMigitationRule ],
        [ a sh:PropertyShape ;
            skos:definition "A message describing how to mitigate or address the deprecation" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:deprecationMitigationMessage ],
        [ a sh:PropertyShape ;
            skos:definition "The version in which the entity was deprecated" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:deprecatedInVersion ] .

brick:Differential_Dry_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Differential Dry Bulb Temperature" ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Dry_Bulb_Temperature .

brick:Differential_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Step .

brick:Direction_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the direction in degrees in which a phenomenon is occuring"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Direction .

brick:Direction_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which direction a device is operating in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Status ;
    brick:hasQuantity brick:Direction .

brick:Discharge_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Discharge,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Sensor .

brick:Discharge_Air_Duct_Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Duct Pressure Status" ;
    rdfs:subClassOf brick:Pressure_Status ;
    skos:definition "Indicates if air pressure in discharge duct is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Duct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Duct,
        tag:Point,
        tag:Pressure,
        tag:Status .

brick:Discharge_Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Demand_Setpoint,
        brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets the rate of discharge air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Flow_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow High Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Discharge_Air_Flow_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Low Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Discharge_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Integral_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Integral Gain Parameter" ;
    rdfs:subClassOf brick:Integral_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Gain,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:Discharge_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Plenum" ;
    rdfs:subClassOf brick:Air_Plenum ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Equipment,
        tag:Plenum .

brick:Discharge_Air_Proportional_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Proportional Gain Parameter" ;
    rdfs:subClassOf brick:Proportional_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Discharge_Air_Smoke_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Smoke Detection Alarm" ;
    rdfs:subClassOf brick:Air_Alarm,
        brick:Smoke_Detection_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Detection,
        tag:Discharge,
        tag:Point,
        tag:Smoke .

brick:Discharge_Air_Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Static_Pressure_Setpoint,
        brick:Static_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Time .

brick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Discharge_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within discharge regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Air_Static_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Discharge_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Discharge_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving air discharged from HVAC vents"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Equipment,
        tag:Fan .

brick:Discharge_Hot_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Discharge Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water_Temperature_Setpoint .

brick:Domestic_Water a brick:Substance ;
    rdfs:label "Domestic Water" ;
    skos:broader brick:Water ;
    skos:definition "A collection of equipment that transport and regulate domestic water among each other"@en .

brick:Dual_Duct_Air_Handling_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dual Duct Air Handling Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:DDAHU ;
    skos:definition "An air handling unit that contains hot and cold decks to supply heating and cooling to a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AHU,
        tag:Dual,
        tag:Equipment .

brick:ESS_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "ESS Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Embedded_Surface_System_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:ESS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:ESS,
        tag:Equipment,
        tag:Panel .

brick:Effective_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Effective_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Electric_Energy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Energy Sensor" ;
    rdfs:subClassOf brick:Energy_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Energy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Electric_Energy .

brick:Electric_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Electric heating device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Equipment,
        tag:Radiator .

brick:Electrical_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Equipment,
        tag:Meter .

brick:Electrical_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "Devices that serve or are part of the electrical subsystem in the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:System .

brick:Elevator_Shaft a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator Shaft" ;
    rdfs:subClassOf brick:Vertical_Space ;
    owl:equivalentClass brick:Elevator_Space ;
    skos:definition "The vertical space in which an elevator ascends and descends"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shaft ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Location,
        tag:Shaft,
        tag:Space,
        tag:Vertical .

brick:Elevator_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator Space" ;
    rdfs:subClassOf brick:Vertical_Space ;
    owl:equivalentClass brick:Elevator_Shaft ;
    skos:definition "The vertical space in whcih an elevator ascends and descends"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Location,
        tag:Space,
        tag:Vertical .

brick:Embedded_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the internal temperature of the radiant layer of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Embedded_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the internal material, e.g. concrete slab, of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Emergency_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarms that indicate off-normal conditions associated with emergency systems"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Emergency,
        tag:Point .

brick:Enable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a system or piece of functionality has been enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enable,
        tag:Point,
        tag:Status .

brick:Energy_Generation_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Generation System" ;
    rdfs:subClassOf brick:Energy_System ;
    skos:definition "A collection of devices that generates electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Generation,
        tag:System .

brick:Energy_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Storage" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Devices or equipment that store energy in its various forms"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Equipment,
        tag:Storage .

brick:Energy_Storage_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Storage System" ;
    rdfs:subClassOf brick:Energy_System ;
    skos:definition "A collection of devices that stores electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Storage,
        tag:System .

brick:Entering_Chilled_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Chilled Water Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Entering_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of chilled entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Chilled_Water .

brick:Entering_Chilled_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Chilled Water Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water that is enteringed to a cooling tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Entering,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Chilled_Water .

brick:Entering_Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint,
        brick:Entering_Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of entering (downstream of the chilled water load) chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Entering,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Chilled_Water .

brick:Entering_Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Entering_Water_Flow_Sensor ;
    skos:definition "Measures the flow of the entering condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Condenser_Water .

brick:Entering_Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the entering condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Entering,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Entering_Condenser_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Setpoint ;
    skos:definition "The temperature setpoint for the entering condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Entering,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Condenser_Water .

brick:Entering_High_Temperature_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering High Temperature Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of high-temperature hot water enteringed to a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:High,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Entering_Hot_Water_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:High,
        tag:Hot,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Entering_Hot_Water_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Temperature,
        tag:Water .

brick:Entering_Hot_Water_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Entering_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Entering_Water_Temperature_Setpoint,
        brick:Hot_Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of entering (downstream of the hot water load) hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Hot_Water .

brick:Entering_Medium_Temperature_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Medium Temperature Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Entering_Hot_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of medium-temperature hot water entering a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Entering_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Water .

brick:Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enthalpy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the total heat content of some substance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enthalpy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy .

brick:Exhaust_Air_Flow_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Exhaust_Air_Flow_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:Flow,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Exhaust_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets exhaust air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Stack_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Setpoint" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Setpoint ;
    skos:definition "Sets exhaust air stack flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Stack .

brick:FCU a owl:Class,
        sh:NodeShape ;
    rdfs:label "FCU" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "See Fan_Coil_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:FCU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:FCU .

brick:Fan_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls properties of fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fan,
        tag:Point .

brick:Fan_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates properties of fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fan,
        tag:Point,
        tag:Status .

brick:Filter_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a filter needs to be replaced"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Filter,
        tag:Point,
        tag:Status .

brick:Flow_Loss a brick:Quantity ;
    rdfs:label "FlowLoss" ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Flow ;
    skos:definition "The amount of flow rate that is lost during distribution" .

brick:Food_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Food Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space used in the production, storage, serving, or cleanup of food and beverages"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Food ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Food,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Frequency_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frequency Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the frequency of a phenomenon or aspect of a phenomenon, e.g. the frequency of a fan turning"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frequency,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Frequency .

brick:Fuel_Oil a brick:Substance ;
    rdfs:label "Fuel Oil" ;
    skos:broader brick:Oil ;
    skos:definition "Petroleum based oil burned for energy"@en .

brick:Furniture a owl:Class,
        sh:NodeShape ;
    rdfs:label "Furniture" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Furniture> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Movable objects intended to support various human activities such as seating, eating and sleeping"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Furniture ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Furniture .

brick:Gas_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of gas"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Gas,
        tag:Meter ;
    brick:hasSubstance brick:Natural_Gas .

brick:Gasoline a brick:Substance ;
    rdfs:label "Gasoline" ;
    skos:broader brick:Liquid ;
    skos:definition "Petroleum derived liquid used as a fuel source"@en .

brick:Generation_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Generation Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "A sensor measuring how much something has been generated."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Generation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Generation,
        tag:Point,
        tag:Sensor .

brick:Glycol a brick:Substance ;
    rdfs:label "Glycol" ;
    skos:broader brick:Liquid .

brick:HVAC_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "See Heating_Ventilation_Air_Conditioning_System"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:HVAC,
        tag:System .

brick:HX a owl:Class,
        sh:NodeShape ;
    rdfs:label "HX" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "See Heat_Exchanger"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HX ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HX .

brick:Heat_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures heat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Heating_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor ;
    skos:definition "Measures the amount of power consumed by a heating process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Deadband_Setpoint,
        brick:Discharge_Air_Temperature_Heating_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of heating discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Heat,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:Heat,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:High_Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Alarm,
        brick:High_Temperature_Alarm ;
    skos:definition "An alarm that indicates that discharge air temperature is too high"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:High,
        tag:Point,
        tag:Temperature .

brick:Hot_Deck a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Deck" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Part of a dual duct air handling unit that supplies heating to a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deck ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deck,
        tag:Equipment,
        tag:Hot .

brick:Hot_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure on either side of a hot water valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Water_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit used to carry hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Meter" ;
    rdfs:subClassOf brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Radiator that uses hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Radiator,
        tag:Water .

brick:Hot_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water System Enable Command" ;
    rdfs:subClassOf brick:System_Enable_Command ;
    skos:definition "Enables operation of the hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Hot,
        tag:Point,
        tag:System,
        tag:Water .

brick:Ice a brick:Substance ;
    rdfs:label "Ice" ;
    skos:broader brick:Solid ;
    skos:definition "Water in its solid form"@en .

brick:Illuminance a brick:Quantity ;
    rdfs:label "Illuminance" ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    brick:hasQUDTReference quantitykind:Illuminance .

brick:Illuminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Illuminance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the total luminous flux incident on a surface, per unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Illuminance .

brick:Irradiance a brick:Quantity ;
    rdfs:label "Irradiance" ;
    qudt:applicableUnit unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:definition "The power per unit area of electromagnetic radiation incident on a surface",
        "The power per unit area of electromagnetic radiation incident on a surface"@en ;
    skos:narrower brick:Solar_Irradiance .

brick:Isolation_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Isolation Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Isolation_valve> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that stops the flow of a fluid, usually for maintenance or safety purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Isolation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Isolation,
        tag:Valve .

brick:Leak_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leak Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates leaks occured in systems containing fluids"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Leak,
        tag:Point .

brick:Leaving_Chilled_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Chilled Water Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Leaving_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Chilled_Water .

brick:Leaving_Hot_Water_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Hot_Water .

brick:Leaving_Hot_Water_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Temperature,
        tag:Water .

brick:Leaving_Hot_Water_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Hot_Water .

brick:Liquid_CO2 a brick:Substance ;
    rdfs:label "Liquid CO2" ;
    skos:broader brick:Liquid ;
    skos:definition "Carbon Dioxide in the liquid phase"@en .

brick:Load_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Setpoint .

brick:Load_Shed_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint,
        brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed .

brick:Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Lockout,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Lounge a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lounge" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A room for lesiure activities or relaxing"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lounge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Lounge,
        tag:Space .

brick:Low_Discharge_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Discharge Air Flow Alarm" ;
    rdfs:subClassOf brick:Low_Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the discharge air flow is lower than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Flow,
        tag:Low,
        tag:Point .

brick:Low_Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Alarm,
        brick:Low_Temperature_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Low,
        tag:Point,
        tag:Temperature .

brick:Luminous_Flux a brick:Quantity ;
    rdfs:label "Luminous Flux" ;
    qudt:applicableUnit unit:LM ;
    skos:broader brick:Luminance ;
    brick:hasQUDTReference quantitykind:LuminousFlux .

brick:Luminous_Intensity a brick:Quantity ;
    rdfs:label "Luminous Intensity" ;
    qudt:applicableUnit unit:CD,
        unit:CP ;
    skos:broader brick:Luminance ;
    brick:hasQUDTReference quantitykind:LuminousIntensity .

brick:MAU a owl:Class,
        sh:NodeShape ;
    rdfs:label "MAU" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Makeup_Air_Unit ;
    skos:definition "See Makeup_Air_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:MAU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:MAU .

brick:Makeup_Air_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Makeup Air Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:MAU ;
    skos:definition "A device designed to condition ventilation air introduced into a space or to replace air exhausted from a process or general area exhaust. The device may be used to prevent negative pressure within buildings or to reduce airborne contaminants in a space."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Makeup ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Makeup,
        tag:Unit .

brick:Makeup_Water a brick:Substance ;
    rdfs:label "Makeup Water" ;
    skos:broader brick:Water ;
    skos:definition "Water used used to makeup water loss through leaks, evaporation, or blowdown"@en .

brick:Mass a brick:Quantity ;
    rdfs:label "Mass" ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:Da,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    skos:narrower brick:GrainsOfMoisture ;
    brick:hasQUDTReference quantitykind:Mass .

brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Discharge Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Max_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Discharge_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Max_Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint_Limit,
        brick:Max_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Mechanical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mechanical Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A class of service rooms where mechanical equipment (HVAC) operates"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mechanical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mechanical,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Medical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medical Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of rooms used for medical purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Medical,
        tag:Room,
        tag:Space .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Temperature .

brick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Discharge Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Min_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Discharge_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Min_Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint_Limit,
        brick:Min_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Min_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Min_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Mixed_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Mixed,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Mixed_Air .

brick:Motion_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motion Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Detects the presence of motion in some area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motion,
        tag:Point,
        tag:Sensor .

brick:NVR a owl:Class,
        sh:NodeShape ;
    rdfs:label "NVR" ;
    rdfs:subClassOf brick:Video_Surveillance_Equipment ;
    owl:equivalentClass brick:Network_Video_Recorder ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NVR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:NVR,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Network_Video_Recorder a owl:Class,
        sh:NodeShape ;
    rdfs:label "Network Video Recorder" ;
    rdfs:subClassOf brick:Video_Surveillance_Equipment ;
    owl:equivalentClass brick:NVR ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NVR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Network ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Recorder ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:NVR,
        tag:Network,
        tag:Recorder,
        tag:Security,
        tag:Video .

brick:Occupancy_Percentage a brick:Quantity ;
    rdfs:label "Occupancy_Percentage" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless,
        brick:Occupancy ;
    skos:definition "Percent of total occupancy of space that is occupied",
        "Percent of total occupancy of space that is occupied"@en .

brick:Occupancy_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a room or space is occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Status .

brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Discharge_Air_Flow_Setpoint,
        brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Occupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Discharge_Air_Flow_Setpoint,
        brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Load Shed Command" ;
    rdfs:subClassOf brick:Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Occupied,
        tag:Point,
        tag:Shed .

brick:Operating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Operating Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates the current operating mode of a system, device or control loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Operating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Operating,
        tag:Point,
        tag:Status .

brick:Operative_Temperature a brick:Quantity ;
    rdfs:label "Operative_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The uniform temperature of an imaginary black enclosure in which an occupant would exchange the same amount of heat by radiation plus convection as in the actual nonuniform environment (https://en.wikipedia.org/wiki/Operative_temperature)",
        "The uniform temperature of an imaginary black enclosure in which an occupant would exchange the same amount of heat by radiation plus convection as in the actual nonuniform environment (https://en.wikipedia.org/wiki/Operative_temperature)"@en .

brick:Outside_Air_Temperature_Enable_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Enable Differential Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Enable,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Outside_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving outside air; air that is supplied into the building from the outdoors"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Outside .

brick:Override_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Override Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports whether or not a device or control loop is in 'override'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Override ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Override,
        tag:Point .

brick:PM10_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM10 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 10 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM10 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM10,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM10_Concentration ;
    brick:hasSubstance brick:Air .

brick:PM1_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM1 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 1 micron"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM1 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM1,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM1_Concentration ;
    brick:hasSubstance brick:Air .

brick:PM2.5_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM2.5 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 2.5 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM2.5 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM2.5,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM2.5_Concentration ;
    brick:hasSubstance brick:Air .

brick:PV_Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Output_Sensor ;
    skos:definition "See Photovoltaic_Current_Output_Sensor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:PV,
        tag:Point,
        tag:Sensor .

brick:Phasor_Magnitude a brick:Quantity ;
    rdfs:label "PhasorMagnitude" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:definition "Magnitude component of a phasor" ;
    skos:related brick:Phasor .

brick:Photovoltaic_Array a owl:Class,
        sh:NodeShape ;
    rdfs:label "Photovoltaic Array" ;
    rdfs:subClassOf brick:Collection ;
    owl:equivalentClass brick:PV_Array ;
    skos:definition "A collection of photovoltaic panels"@en ;
    sh:property [ sh:or ( [ sh:class brick:PV_Panel ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Array ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Photovoltaic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Array,
        tag:Collection,
        tag:Photovoltaic .

brick:Potable_Water a brick:Substance ;
    rdfs:label "Potable Water" ;
    skos:broader brick:Water ;
    skos:definition "Water that is safe to drink"@en .

brick:Power_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with electrical power."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Power .

brick:Power_Factor a brick:Quantity ;
    rdfs:label "Power Factor" ;
    qudt:applicableUnit unit:UNITLESS ;
    skos:definition "Power Factor, under periodic conditions, is the ratio of the absolute value of the active power (P) to the apparent power (S)."@en ;
    brick:hasQUDTReference quantitykind:PowerFactor .

brick:Preheat_Discharge_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Discharge Air Temperature Sensor" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of discharge air before heating is applied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Preheat,
        tag:Sensor,
        tag:Temperature .

brick:Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Machine for imparting energy to a fluid, causing it to do work, drawing a fluid into itself through an entrance port, and forcing the fluid out through an exhaust port."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump .

brick:RC_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "RC Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Radiant_Ceiling_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:RC .

brick:RTU a owl:Class,
        sh:NodeShape ;
    rdfs:label "RTU" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Rooftop_Unit ;
    skos:definition "see Rooftop_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RTU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:RTU .

brick:RVAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "RVAV" ;
    rdfs:subClassOf brick:Variable_Air_Volume_Box ;
    skos:definition "See Variable_Air_Volume_Box_With_Reheat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RVAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:RVAV .

brick:Radiance a brick:Quantity ;
    rdfs:label "Radiance" ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    skos:narrower brick:Solar_Radiance ;
    brick:hasQUDTReference quantitykind:Radiance .

brick:Radiant_Temperature a brick:Quantity ;
    rdfs:label "Radiant_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "the uniform temperature of an imaginary enclosure in which the radiant heat transfer from the human body is equal to the radiant heat transfer in the actual non-uniform enclosure. (https://en.wikipedia.org/wiki/Mean_radiant_temperature)",
        "the uniform temperature of an imaginary enclosure in which the radiant heat transfer from the human body is equal to the radiant heat transfer in the actual non-uniform enclosure. (https://en.wikipedia.org/wiki/Mean_radiant_temperature)"@en .

brick:Radioactivity_Concentration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radioactivity Concentration Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of radioactivity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concentration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radioactivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concentration,
        tag:Point,
        tag:Radioactivity,
        tag:Sensor ;
    brick:hasQuantity brick:Radioactivity_Concentration ;
    brick:hasSubstance brick:Air .

brick:Region a owl:Class,
        sh:NodeShape ;
    rdfs:label "Region" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A unit of geographic space, usually contigious or somehow related to a geopolitical feature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Region ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Region .

brick:Rest_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rest Room" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Restroom ;
    skos:definition "A room that provides toilets and washbowls. Alternate spelling of Restroom"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Rest,
        tag:Room,
        tag:Space .

brick:Restroom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Restroom" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Rest_Room ;
    skos:definition "A room that provides toilets and washbowls."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Restroom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Restroom,
        tag:Room,
        tag:Space .

brick:Return_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Rooftop_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rooftop Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:RTU ;
    skos:definition "Packaged air conditioner mounted on a roof, the conditioned air being discharged directly into the rooms below or through a duct system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rooftop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AHU,
        tag:Equipment,
        tag:Rooftop .

brick:Rotational_Speed a brick:Quantity ;
    rdfs:label "Rotational_Speed" ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Frequency,
        quantitykind:Speed,
        brick:Speed ;
    skos:definition "Rotational speed" .

brick:Run_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Run,
        tag:Status .

brick:Run_Time_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Time Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor ;
    skos:definition "Measures the duration for which a device was in an active or \"on\" state"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Run,
        tag:Sensor,
        tag:Time .

brick:Security_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Security Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used by the security staff of a facility"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Security,
        tag:Service,
        tag:Space .

brick:Shading_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shading System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "Devices that can control daylighting through various means"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Shade,
        tag:System .

brick:Smoke_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with smoke."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Smoke .

brick:Solar_Irradiance a brick:Quantity ;
    rdfs:label "SolarIrradiance" ;
    qudt:applicableUnit unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Irradiance ;
    skos:definition "The power per unit area of solar electromagnetic radiation incident on a surface",
        "The power per unit area of solar electromagnetic radiation incident on a surface"@en .

brick:Solar_Thermal_Collector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Thermal Collector" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A type of solar panels that converts solar radiation into thermal energy."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collector,
        tag:Equipment,
        tag:Solar,
        tag:Thermal .

brick:Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Standby_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Load Shed Command" ;
    rdfs:subClassOf brick:Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Standby .

brick:Standby_Unit_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Unit On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    skos:definition "Indicates the on/off status of a standby unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Standby,
        tag:Status,
        tag:Unit .

brick:Start_Stop_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Start Stop Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "A Start/Stop Command controls or reports the active/inactive status of a control sequence"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Start,
        tag:Stop .

brick:Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Steam a brick:Substance ;
    rdfs:label "Steam" ;
    skos:broader brick:Gas ;
    skos:definition "water in the vapor phase."@en .

brick:Steam_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Radiator that uses steam"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Radiator,
        tag:Steam .

brick:Storey a owl:Class,
        sh:NodeShape ;
    rdfs:label "Storey" ;
    rdfs:subClassOf brick:Location ;
    owl:equivalentClass brick:Floor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storey ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Storey .

brick:Supply_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a supply air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Plenum" ;
    rdfs:subClassOf brick:Air_Plenum ;
    owl:equivalentClass brick:Discharge_Air_Plenum ;
    skos:definition "A component of the HVAC the receives air from the air handling unit to distribute to the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Hot_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Supply Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water_Temperature_Setpoint .

brick:Supply_Water_Flow_Setpoint a owl:Class ;
    rdfs:label "Supply Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Flow_Setpoint .

brick:Switch a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switch" ;
    rdfs:subClassOf brick:Interface ;
    skos:definition "A switch used to operate all or part of a lighting installation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface,
        tag:Switch .

brick:TABS_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "TABS Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Thermally_Activated_Building_System_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TABS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:TABS .

brick:TVOC_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "TVOC Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TVOC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor,
        tag:TVOC ;
    brick:hasQuantity brick:TVOC_Concentration ;
    brick:hasSubstance brick:Air .

brick:Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Thermal_Energy a brick:Quantity ;
    rdfs:label "Thermal Energy" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:N-M,
        unit:THM_EEC,
        unit:THM_US ;
    skos:broader brick:Energy ;
    skos:definition "Thermal Energy} is the portion of the thermodynamic or internal energy of a system that is responsible for the temperature of the system. From a macroscopic thermodynamic description, the thermal energy of a system is given by its constant volume specific heat capacity C(T), a temperature coefficient also called thermal capacity, at any given absolute temperature (T): (U_{thermal = C(T) \\cdot T)."@en ;
    brick:hasQUDTReference quantitykind:ThermalEnergy .

brick:Thermal_Power a brick:Quantity ;
    rdfs:label "ThermalPower" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Power,
        brick:Power ;
    skos:definition "`"@en .

brick:Thermal_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermal Power Sensor" ;
    rdfs:subClassOf brick:Power_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Power,
        tag:Sensor,
        tag:Thermal .

brick:Torque a brick:Quantity ;
    rdfs:label "Torque" ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:J,
        unit:KiloGM_F-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    skos:definition "In physics, a torque (τ) is a vector that measures the tendency of a force to rotate an object about some axis. The magnitude of a torque is defined as force times its lever arm. Just as a force is a push or a pull, a torque can be thought of as a twist. The SI unit for torque is newton meters ((N m)). In U.S. customary units, it is measured in foot pounds (ft lbf) (also known as \"pounds feet\"). Mathematically, the torque on a particle (which has the position r in some reference frame) can be defined as the cross product: (τ = r x F) where, r is the particle's position vector relative to the fulcrum  F is the force acting on the particles,  or, more generally, torque can be defined as the rate of change of angular momentum: (τ = dL/dt) where, L is the angular momentum vector  t stands for time."@en ;
    brick:hasQUDTReference quantitykind:Torque .

brick:Torque_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Torque Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures torque, the tendency of a force to rotate an object about some axis"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Torque ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Torque ;
    brick:hasQuantity brick:Torque .

brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Discharge_Air_Flow_Setpoint,
        brick:Unoccupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling when unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Unoccupied_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Heating Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Discharge_Air_Flow_Setpoint,
        brick:Unoccupied_Discharge_Air_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Unoccupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Load Shed Command" ;
    rdfs:subClassOf brick:Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Unoccupied .

brick:Voltage_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the voltage is not in a normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Voltage .

brick:Voltage_Angle a brick:Quantity ;
    rdfs:label "VoltageAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Phasor_Angle ;
    skos:definition "Angle of voltage phasor",
        "Angle of voltage phasor"@en ;
    skos:related brick:Voltage .

brick:Water_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Usage Sensor" ;
    rdfs:subClassOf brick:Usage_Sensor ;
    skos:definition "Measures the amount of water that is consumed, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Usage,
        tag:Water .

brick:Wing a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wing" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A wing is part of a building – or any feature of a building – that is subordinate to the main, central structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Wing .

brick:aggregate a brick:EntityProperty ;
    rdfs:label "Aggregate" ;
    skos:definition "Description of how the dta for this point is aggregated" .

brick:aggregationFunction a owl:ObjectProperty .

brick:aggregationInterval a owl:DatatypeProperty .

brick:azimuth a brick:EntityProperty ;
    rdfs:label "Azimuth" ;
    skos:definition "(Horizontal) angle between a projected vector and a reference vector (typically a compass bearing). The projected vector usually indicates the direction of a face or plane." .

brick:buildingPrimaryFunction a brick:EntityProperty ;
    rdfs:label "Building primary function" ;
    rdfs:seeAlso "https://project-haystack.org/tag/primaryFunction" ;
    skos:definition "Enumerated string applied to a site record to indicate the building's primary function. The list of primary functions is derived from the US Energy Star program (adopted from Project Haystack)" .

brick:buildingThermalTransmittance a brick:EntityProperty ;
    rdfs:label "Building thermal transmittance" ;
    rdfs:seeAlso "https://www.iso.org/obp/ui/#iso:std:iso:13789:ed-3:v1:en" ;
    rdfs:subPropertyOf brick:thermalTransmittance ;
    skos:definition "The area-weighted average heat transfer coefficient (commonly referred to as a U-value) for a building envelope" .

brick:coolingCapacity a brick:EntityProperty ;
    rdfs:label "Cooling capacity" ;
    rdfs:seeAlso "https://project-haystack.org/tag/coolingCapacity" ;
    skos:definition "Measurement of a chiller ability to remove heat (adopted from Project Haystack)" .

brick:coordinates a brick:EntityProperty ;
    rdfs:label "Coordinates" ;
    skos:definition "The location of an entity in latitude/longitude" .

brick:currentFlowType a brick:EntityProperty ;
    rdfs:label "Current flow type" ;
    skos:definition "The current flow type of the entity" .

brick:deprecationMigitationRule a owl:ObjectProperty .

brick:electricalPhaseCount a brick:EntityProperty ;
    rdfs:label "Electrical phase count" ;
    skos:definition "Entity has these phases" .

brick:electricalPhases a brick:EntityProperty ;
    rdfs:label "Electrical phases" ;
    skos:definition "Entity has these electrical AC phases" .

brick:grossArea a brick:EntityProperty ;
    rdfs:label "Gross area" ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Entity has gross 2-dimensional area" .

brick:hasAddress rdfs:label "Has address" ;
    rdfs:subPropertyOf vcard:hasAddress,
        brick:Relationship ;
    skos:definition "To specify the address of a building."@en .

brick:hasInputSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has input substance" ;
    rdfs:subPropertyOf brick:Relationship ;
    skos:definition "The subject receives the given substance as an input to its internal process"@en .

brick:hasOutputSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has output substance" ;
    rdfs:subPropertyOf brick:Relationship ;
    skos:definition "The subject produces or exports the given substance from its internal process"@en .

brick:hasQUDTReference a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has QUDT reference" ;
    rdfs:subPropertyOf brick:Relationship ;
    skos:definition "Points to the relevant QUDT definition"@en .

brick:isReplacedBy a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is replaced by" ;
    rdfs:subPropertyOf brick:Relationship .

brick:isVirtualMeter a brick:EntityProperty ;
    rdfs:label "is virtual meter" ;
    skos:definition "True if the associated meter is 'virtual', i.e. a logical meter which includes or aggregates information from a variety of sources such as other submeters or equipment." .

brick:measuredModuleConversionEfficiency a brick:EntityProperty ;
    rdfs:label "Measured module conversion efficiency" ;
    rdfs:subPropertyOf brick:conversionEfficiency ;
    skos:definition "The measured percentage of sunlight that is converted into usable power" .

brick:measuredPowerInput a brick:EntityProperty ;
    rdfs:label "Measured power input" ;
    skos:definition "The nominal measured power input of the entity" .

brick:measuredPowerOutput a brick:EntityProperty ;
    rdfs:label "Measured power output" ;
    skos:definition "The nominal measured power output of the entity" .

brick:netArea a brick:EntityProperty ;
    rdfs:label "Net area" ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Entity has net 2-dimensional area" .

brick:operationalStage a brick:EntityProperty ;
    rdfs:label "Operational stage" ;
    skos:definition "The associated operational stage" .

brick:operationalStageCount a brick:EntityProperty ;
    rdfs:label "Operational stage count" ;
    skos:definition "The number of operational stages supported by this eqiupment" .

brick:panelArea a brick:EntityProperty ;
    rdfs:label "Panel area" ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Surface area of a panel, such as a PV panel" .

brick:powerComplexity a brick:EntityProperty ;
    rdfs:label "Power complexity" ;
    skos:definition "Entity has this power complexity" .

brick:powerFlow a brick:EntityProperty ;
    rdfs:label "Power flow" ;
    skos:definition "Entity has this power flow relative to the building'" .

brick:ratedMaximumCurrentInput a brick:EntityProperty ;
    rdfs:label "Rated maximum current input" ;
    rdfs:subPropertyOf brick:ratedCurrentInput ;
    skos:definition "The maximum current that can be input to the entity" .

brick:ratedMaximumCurrentOutput a brick:EntityProperty ;
    rdfs:label "Rated maximum current output" ;
    rdfs:subPropertyOf brick:ratedCurrentOutput ;
    skos:definition "The maximum current that can be output by the entity" .

brick:ratedMaximumVoltageInput a brick:EntityProperty ;
    rdfs:label "Rated maximum voltage input" ;
    rdfs:subPropertyOf brick:ratedVoltageInput ;
    skos:definition "The maximum voltage that can be input to the entity" .

brick:ratedMaximumVoltageOutput a brick:EntityProperty ;
    rdfs:label "Rated maximum voltage output" ;
    rdfs:subPropertyOf brick:ratedVoltageOutput ;
    skos:definition "The maximum voltage that can be output by the entity" .

brick:ratedMinimumCurrentInput a brick:EntityProperty ;
    rdfs:label "Rated minimum current input" ;
    rdfs:subPropertyOf brick:ratedCurrentInput ;
    skos:definition "The minimum current that can be input to the entity" .

brick:ratedMinimumCurrentOutput a brick:EntityProperty ;
    rdfs:label "Rated minimum current output" ;
    rdfs:subPropertyOf brick:ratedCurrentOutput ;
    skos:definition "The minimum current that can be output by the entity" .

brick:ratedMinimumVoltageInput a brick:EntityProperty ;
    rdfs:label "Rated minimum voltage input" ;
    rdfs:subPropertyOf brick:ratedVoltageInput ;
    skos:definition "The minimum voltage that can be input to the entity" .

brick:ratedMinimumVoltageOutput a brick:EntityProperty ;
    rdfs:label "Rated minimum voltage output" ;
    rdfs:subPropertyOf brick:ratedVoltageOutput ;
    skos:definition "The minimum voltage that can be output by the entity" .

brick:ratedModuleConversionEfficiency a brick:EntityProperty ;
    rdfs:label "Rated module conversion efficiency" ;
    rdfs:subPropertyOf brick:conversionEfficiency ;
    skos:definition "The *rated* percentage of sunlight that is converted into usable power, as measured using Standard Test Conditions (STC): 1000 W/sqm irradiance, 25 degC panel temperature, no wind" .

brick:ratedPowerInput a brick:EntityProperty ;
    rdfs:label "Rated power input" ;
    skos:definition "The nominal rated power input of the entity" .

brick:ratedPowerOutput a brick:EntityProperty ;
    rdfs:label "Rated power output" ;
    skos:definition "The nominal rated power output of the entity" .

brick:temperatureCoefficientofPmax a brick:EntityProperty ;
    rdfs:label "Temperature coefficient" ;
    skos:definition "The % change in power output for every degree celsius that the entity is hotter than 25 degrees celsius" .

brick:tilt a brick:EntityProperty ;
    rdfs:label "Tilt" ;
    skos:definition "The direction an entity is facing in degrees above the horizon" .

brick:volume a brick:EntityProperty ;
    rdfs:label "Volume" ;
    skos:definition "Entity has 3-dimensional volume" .

brick:yearBuilt a brick:EntityProperty ;
    rdfs:label "Year built" ;
    rdfs:seeAlso "https://project-haystack.org/tag/yearBuilt" ;
    skos:definition "Four digit year that a building was first built. (adopted from Project Haystack)" .

ref:BACnetURI a owl:DatatypeProperty ;
    rdfs:label "BACnetURI" ;
    rdfs:comment "Clause Q.8 BACnet URI scheme: bacnet:// <device> / <object> [ / <property> [ / <index> ]]" .

ref:hasIfcProjectReference a owl:ObjectProperty ;
    rdfs:label "hasIfcProjectReference" ;
    skos:definition "A reference to the IFC Project that defines this entity" .

ref:hasTimeseriesId a owl:DatatypeProperty ;
    rdfs:label "hasTimeseriesId" ;
    rdfs:range xsd:string ;
    skos:definition "The unique identifier (primary key) for this TimeseriesReference in some database"@en .

ref:ifcFileLocation a owl:DatatypeProperty ;
    rdfs:label "The location of the IFC file defining a project" ;
    rdfs:range xsd:string .

ref:ifcGlobalID a owl:DatatypeProperty ;
    rdfs:label "ifcGlobalID" ;
    rdfs:range xsd:string ;
    skos:definition "The IFC Global ID of the entity" .

ref:ifcName a owl:DatatypeProperty ;
    rdfs:label "ifcName" ;
    rdfs:range xsd:string ;
    skos:definition "The name of the IFC entity" .

ref:ifcProject a owl:Class,
        sh:NodeShape ;
    rdfs:label "IfcProject" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path ref:ifcFileLocation ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path ref:ifcProjectID ] .

ref:ifcProjectID a owl:DatatypeProperty ;
    rdfs:label "ifcProjectID" ;
    rdfs:range xsd:string ;
    skos:definition "The IFC ID of the containing project" .

ref:storedAt a owl:DatatypeProperty ;
    rdfs:label "storedAt" ;
    rdfs:range xsd:anyURI ;
    skos:definition "A reference to where the data for this TimeseriesReference is stored"@en .

bsh:AggregationShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The aggregation function applied to data in the interval which produces the value" ;
            sh:in ( "max" "min" "count" "mean" "sum" "median" "mode" ) ;
            sh:minCount 1 ;
            sh:path brick:aggregationFunction ],
        [ a sh:PropertyShape ;
            skos:definition "Interval expressed in an ISO 8601 Duration string, e.g. RP1D" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:aggregationInterval ] .

bsh:AzimuthShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MIN_Angle unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:maxInclusive 360 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:BuildingPrimaryFunctionShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "Adult Education"^^xsd:string "Ambulatory Surgical Center"^^xsd:string "Aquarium"^^xsd:string "Automobile Dealership"^^xsd:string "Bank Branch"^^xsd:string "Bar/Nightclub"^^xsd:string "Barracks"^^xsd:string "Bowling Alley"^^xsd:string "Casino"^^xsd:string "College/University"^^xsd:string "Convenience Store with Gas Station"^^xsd:string "Convenience Store without Gas Station"^^xsd:string "Convention Center"^^xsd:string "Courthouse"^^xsd:string "Data Center"^^xsd:string "Distribution Center"^^xsd:string "Drinking Water Treatment & Distribution"^^xsd:string "Enclosed Mall"^^xsd:string "Energy/Power Station"^^xsd:string "Fast Food Restaurant"^^xsd:string "Financial Office"^^xsd:string "Fire Station"^^xsd:string "Fitness Center/Health Club/Gym"^^xsd:string "Food Sales"^^xsd:string "Food Service"^^xsd:string "Hospital (General Medical & Surgical)"^^xsd:string "Hotel"^^xsd:string "Ice/Curling Rink"^^xsd:string "Indoor Arena"^^xsd:string "K-12 School"^^xsd:string "Laboratory"^^xsd:string "Library"^^xsd:string "Lifestyle Center"^^xsd:string "Mailing Center/Post Office"^^xsd:string "Manufacturing/Industrial Plant"^^xsd:string "Medical Office"^^xsd:string "Mixed Use Property"^^xsd:string "Movie Theater"^^xsd:string "Multifamily Housing"^^xsd:string "Museum"^^xsd:string "Non-Refrigerated Warehouse"^^xsd:string "Office"^^xsd:string "Other - Education"^^xsd:string "Other - Entertainment/Public Assembly"^^xsd:string "Other - Lodging/Residential"^^xsd:string "Other - Mall"^^xsd:string "Other - Public Services"^^xsd:string "Other - Recreation"^^xsd:string "Other - Restaurant/Bar"^^xsd:string "Other - Services"^^xsd:string "Other - Stadium"^^xsd:string "Other - Technology/Science"^^xsd:string "Other - Utility"^^xsd:string "Other"^^xsd:string "Other/Specialty Hospital"^^xsd:string "Outpatient Rehabilitation/Physical Therapy"^^xsd:string "Parking"^^xsd:string "Performing Arts"^^xsd:string "Personal Services (Health/Beauty, Dry Cleaning, etc)"^^xsd:string "Police Station"^^xsd:string "Pre-school/Daycare"^^xsd:string "Prison/Incarceration"^^xsd:string "Race Track"^^xsd:string "Refrigerated Warehouse"^^xsd:string "Repair Services (Vehicle, Shoe, Locksmith, etc)"^^xsd:string "Residence Hall/Dormitory"^^xsd:string "Restaurant"^^xsd:string "Retail Store"^^xsd:string "Roller Rink"^^xsd:string "Self-Storage Facility"^^xsd:string "Senior Care Community"^^xsd:string "Single Family Home"^^xsd:string "Social/Meeting Hall"^^xsd:string "Stadium (Closed)"^^xsd:string "Stadium (Open)"^^xsd:string "Strip Mall"^^xsd:string "Supermarket/Grocery Store"^^xsd:string "Swimming Pool"^^xsd:string "Transportation Terminal/Station"^^xsd:string "Urgent Care/Clinic/Other Outpatient"^^xsd:string "Veterinary Office"^^xsd:string "Vocational School"^^xsd:string "Wastewater Treatment Plant"^^xsd:string "Wholesale Club/Supercenter"^^xsd:string "Worship Facility"^^xsd:string "Zoo"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:CoolingCapacityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:TON_FG unit:BTU_IT-PER-HR unit:BTU_TH-PER-HR unit:W ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:CoordinateShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:latitude ],
        [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:longitude ] .

bsh:CurrentFlowTypeShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "AC"^^xsd:string "DC"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:LastKnownValueShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:dateTime ;
            sh:minCount 1 ;
            sh:path brick:timestamp ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:PhaseCountShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "1"^^xsd:string "2"^^xsd:string "3"^^xsd:string "Total"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:PhasesShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "A"^^xsd:string "B"^^xsd:string "C"^^xsd:string "AB"^^xsd:string "BC"^^xsd:string "AC"^^xsd:string "ABC"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:PowerComplexityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "real"^^xsd:string "reactive"^^xsd:string "apparent"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:PowerFlowShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "import"^^xsd:string "export"^^xsd:string "net"^^xsd:string "absolute"^^xsd:string ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:TemperatureCoefficientPerDegreeCelsiusShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:TiltShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:GON unit:MicroRAD unit:REV unit:DEG unit:MIN_Angle unit:MilliARCSEC unit:MIL unit:ARCSEC unit:ARCMIN unit:MilliRAD unit:GRAD unit:RAD ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:VirtualMeterShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:VolumeShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:FT3 unit:M3 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:YearBuiltShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:hasAddressShape a sh:PropertyShape ;
    sh:class vcard:Address ;
    sh:path brick:hasAddress .

bsh:hasAssociatedTagShape a sh:PropertyShape ;
    sh:class brick:Tag ;
    sh:path brick:hasAssociatedTag .

bsh:hasInputSubstanceShape a sh:PropertyShape ;
    sh:class brick:Substance ;
    sh:path brick:hasInputSubstance .

bsh:hasLocationShape a sh:PropertyShape ;
    sh:class brick:Location ;
    sh:path brick:hasLocation .

bsh:hasOutputSubstanceShape a sh:PropertyShape ;
    sh:class brick:Substance ;
    sh:path brick:hasOutputSubstance .

bsh:hasQUDTReferenceShape a sh:PropertyShape ;
    sh:class qudt:QuantityKind ;
    sh:path brick:hasQUDTReference .

bsh:hasQuantityShape a sh:PropertyShape ;
    sh:class brick:Quantity ;
    sh:path brick:hasQuantity .

bsh:hasSubMeterShape a sh:PropertyShape ;
    sh:class brick:Meter ;
    sh:path brick:hasSubMeter .

bsh:hasTagShape a sh:PropertyShape ;
    sh:class brick:Tag ;
    sh:path brick:hasTag .

bsh:hasUnitShape a sh:PropertyShape ;
    sh:class qudt:Unit ;
    sh:path brick:hasUnit .

bsh:hasaggregateShape a sh:PropertyShape ;
    rdfs:label "has Aggregate property" ;
    sh:node bsh:AggregationShape ;
    sh:path brick:aggregate .

bsh:hasareaShape a sh:PropertyShape ;
    rdfs:label "has Area property" ;
    sh:node bsh:AreaShape ;
    sh:path brick:area .

bsh:hasazimuthShape a sh:PropertyShape ;
    rdfs:label "has Azimuth property" ;
    sh:node bsh:AzimuthShape ;
    sh:path brick:azimuth .

bsh:hasbuildingPrimaryFunctionShape a sh:PropertyShape ;
    rdfs:label "has Building primary function property" ;
    sh:node bsh:BuildingPrimaryFunctionShape ;
    sh:path brick:buildingPrimaryFunction .

bsh:hasbuildingThermalTransmittanceShape a sh:PropertyShape ;
    rdfs:label "has Building thermal transmittance property" ;
    sh:node bsh:ThermalTransmittanceShape ;
    sh:path brick:buildingThermalTransmittance .

bsh:hasconversionEfficiencyShape a sh:PropertyShape ;
    rdfs:label "has Conversion efficiency property" ;
    sh:node bsh:EfficiencyShape ;
    sh:path brick:conversionEfficiency .

bsh:hascoolingCapacityShape a sh:PropertyShape ;
    rdfs:label "has Cooling capacity property" ;
    sh:node bsh:CoolingCapacityShape ;
    sh:path brick:coolingCapacity .

bsh:hascurrentFlowTypeShape a sh:PropertyShape ;
    rdfs:label "has Current flow type property" ;
    sh:node bsh:CurrentFlowTypeShape ;
    sh:path brick:currentFlowType .

bsh:hasdeprecationShape a sh:PropertyShape ;
    rdfs:label "has Deprecation Notice property" ;
    sh:node brick:DeprecationShape ;
    sh:path brick:deprecation .

bsh:haselectricalPhaseCountShape a sh:PropertyShape ;
    rdfs:label "has Electrical phase count property" ;
    sh:node bsh:PhaseCountShape ;
    sh:path brick:electricalPhaseCount .

bsh:haselectricalPhasesShape a sh:PropertyShape ;
    rdfs:label "has Electrical phases property" ;
    sh:node bsh:PhasesShape ;
    sh:path brick:electricalPhases .

bsh:hasgrossAreaShape a sh:PropertyShape ;
    rdfs:label "has Gross area property" ;
    sh:node bsh:AreaShape ;
    sh:path brick:grossArea .

bsh:hasisVirtualMeterShape a sh:PropertyShape ;
    rdfs:label "has is virtual meter property" ;
    sh:node bsh:VirtualMeterShape ;
    sh:path brick:isVirtualMeter .

bsh:haslastKnownValueShape a sh:PropertyShape ;
    rdfs:label "has Last known value property" ;
    sh:node bsh:LastKnownValueShape ;
    sh:path brick:lastKnownValue .

bsh:hasmeasuredModuleConversionEfficiencyShape a sh:PropertyShape ;
    rdfs:label "has Measured module conversion efficiency property" ;
    sh:node bsh:EfficiencyShape ;
    sh:path brick:measuredModuleConversionEfficiency .

bsh:hasmeasuredPowerInputShape a sh:PropertyShape ;
    rdfs:label "has Measured power input property" ;
    sh:node bsh:PowerQuantityShape ;
    sh:path brick:measuredPowerInput .

bsh:hasmeasuredPowerOutputShape a sh:PropertyShape ;
    rdfs:label "has Measured power output property" ;
    sh:node bsh:PowerQuantityShape ;
    sh:path brick:measuredPowerOutput .

bsh:hasnetAreaShape a sh:PropertyShape ;
    rdfs:label "has Net area property" ;
    sh:node bsh:AreaShape ;
    sh:path brick:netArea .

bsh:hasoperationalStageCountShape a sh:PropertyShape ;
    rdfs:label "has Operational stage count property" ;
    sh:node bsh:StageShape ;
    sh:path brick:operationalStageCount .

bsh:hasoperationalStageShape a sh:PropertyShape ;
    rdfs:label "has Operational stage property" ;
    sh:node bsh:StageShape ;
    sh:path brick:operationalStage .

bsh:haspanelAreaShape a sh:PropertyShape ;
    rdfs:label "has Panel area property" ;
    sh:node bsh:AreaShape ;
    sh:path brick:panelArea .

bsh:hasratedCurrentInputShape a sh:PropertyShape ;
    rdfs:label "has Rated current input property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedCurrentInput .

bsh:hasratedCurrentOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated current output property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedCurrentOutput .

bsh:hasratedMaximumCurrentInputShape a sh:PropertyShape ;
    rdfs:label "has Rated maximum current input property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedMaximumCurrentInput .

bsh:hasratedMaximumCurrentOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated maximum current output property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedMaximumCurrentOutput .

bsh:hasratedMaximumVoltageInputShape a sh:PropertyShape ;
    rdfs:label "has Rated maximum voltage input property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedMaximumVoltageInput .

bsh:hasratedMaximumVoltageOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated maximum voltage output property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedMaximumVoltageOutput .

bsh:hasratedMinimumCurrentInputShape a sh:PropertyShape ;
    rdfs:label "has Rated minimum current input property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedMinimumCurrentInput .

bsh:hasratedMinimumCurrentOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated minimum current output property" ;
    sh:node bsh:Electric_CurrentQuantityShape ;
    sh:path brick:ratedMinimumCurrentOutput .

bsh:hasratedMinimumVoltageInputShape a sh:PropertyShape ;
    rdfs:label "has Rated minimum voltage input property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedMinimumVoltageInput .

bsh:hasratedMinimumVoltageOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated minimum voltage output property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedMinimumVoltageOutput .

bsh:hasratedModuleConversionEfficiencyShape a sh:PropertyShape ;
    rdfs:label "has Rated module conversion efficiency property" ;
    sh:node bsh:EfficiencyShape ;
    sh:path brick:ratedModuleConversionEfficiency .

bsh:hasratedPowerInputShape a sh:PropertyShape ;
    rdfs:label "has Rated power input property" ;
    sh:node bsh:PowerQuantityShape ;
    sh:path brick:ratedPowerInput .

bsh:hasratedPowerOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated power output property" ;
    sh:node bsh:PowerQuantityShape ;
    sh:path brick:ratedPowerOutput .

bsh:hasratedVoltageInputShape a sh:PropertyShape ;
    rdfs:label "has Measured voltage input property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedVoltageInput .

bsh:hasratedVoltageOutputShape a sh:PropertyShape ;
    rdfs:label "has Rated voltage output property" ;
    sh:node bsh:VoltageQuantityShape ;
    sh:path brick:ratedVoltageOutput .

bsh:hastemperatureCoefficientofPmaxShape a sh:PropertyShape ;
    rdfs:label "has Temperature coefficient property" ;
    sh:node bsh:TemperatureCoefficientPerDegreeCelsiusShape ;
    sh:path brick:temperatureCoefficientofPmax .

bsh:hasthermalTransmittanceShape a sh:PropertyShape ;
    rdfs:label "has Thermal transmittance property" ;
    sh:node bsh:ThermalTransmittanceShape ;
    sh:path brick:thermalTransmittance .

bsh:hastiltShape a sh:PropertyShape ;
    rdfs:label "has Tilt property" ;
    sh:node bsh:TiltShape ;
    sh:path brick:tilt .

bsh:hasyearBuiltShape a sh:PropertyShape ;
    rdfs:label "has Year built property" ;
    sh:node bsh:YearBuiltShape ;
    sh:path brick:yearBuilt .

bsh:isAssociatedWithShape a sh:PropertyShape ;
    sh:class owl:Class ;
    sh:path brick:isAssociatedWith .

bsh:isLocationOfShape a sh:PropertyShape ;
    sh:class brick:Entity ;
    sh:path brick:isLocationOf .

bsh:isPointOfShape a sh:PropertyShape ;
    sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] ) ;
    sh:path brick:isPointOf .

bsh:isReplacedByShape a sh:PropertyShape ;
    sh:class brick:Entity ;
    sh:path brick:isReplacedBy .

bsh:isSubMeterOfShape a sh:PropertyShape ;
    sh:class brick:Meter ;
    sh:path brick:isSubMeterOf .

bsh:isTagOfShape a sh:PropertyShape ;
    sh:class owl:Class ;
    sh:path brick:isTagOf .

bsh:latitudeShape a sh:PropertyShape ;
    sh:or bsh:NumericValue ;
    sh:path brick:latitude .

bsh:longitudeShape a sh:PropertyShape ;
    sh:or bsh:NumericValue ;
    sh:path brick:longitude .

bsh:metersShape a sh:PropertyShape ;
    sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] [ sh:class brick:Collection ] ) ;
    sh:path brick:meters .

bsh:timestampShape a sh:PropertyShape ;
    sh:datatype xsd:dateTime ;
    sh:path brick:timestamp .

bsh:valueShape a sh:PropertyShape ;
    sh:class rdfs:Resource ;
    sh:path brick:value .

ns2:RM206A_room a brick:Room .

ns2:RM210_room a brick:Room .

dcterms:contributor a rdf:Property ;
    rdfs:label "contributor" .

dcterms:created a rdf:Property ;
    rdfs:label "created" ;
    rdfs:range xsd:date .

dcterms:modified a rdf:Property ;
    rdfs:label "modified" ;
    rdfs:range xsd:date .

dcterms:rights a owl:AnnotationProperty ;
    rdfs:label "rights" ;
    rdfs:range xsd:string .

dcterms:subject a owl:AnnotationProperty ;
    rdfs:label "subject" ;
    rdfs:range xsd:string .

dcterms:title a owl:AnnotationProperty ;
    rdfs:label "title" ;
    rdfs:range xsd:string .

qudt:AbstractQuantityKind a owl:Class ;
    rdfs:label "Quantity Kind (abstract)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty skos:broader ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexSymbol ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:symbol ],
        qudt:Concept .

qudt:AngleUnit a owl:Class ;
    rdfs:label "Angle unit" ;
    dcterms:description "All units relating to specification of angles. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit ;
    skos:exactMatch <http://dbpedia.org/resource/Category:Units_of_angle> .

qudt:BitEncoding a qudt:BitEncodingType ;
    rdfs:label "Bit Encoding" ;
    qudt:bits 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:DataEncoding a owl:Class ;
    rdfs:label "Data Encoding" ;
    rdfs:comment "<p><em>Data Encoding</em> expresses the properties that specify how data is represented at the bit and byte level. These properties are applicable to describing raw data.</p>"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:Encoding ;
            owl:onProperty qudt:encoding ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:EndianType ;
            owl:onProperty qudt:bitOrder ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bitOrder ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:byteOrder ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:encoding ],
        qudt:Aspect .

qudt:LatexString a rdfs:Datatype ;
    rdfs:label "Latex String" ;
    rdfs:comment "A type of string in which some characters may be wrapped with '\\(' and '\\) characters for LaTeX rendering." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:string .

qudt:MathsFunctionType a owl:Class ;
    rdfs:label "Maths Function Type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:Quantifiable a owl:Class ;
    rdfs:label "Quantifiable" ;
    rdfs:comment "<p><em>Quantifiable</em> ascribes to some thing the capability of being measured, observed, or counted.</p>"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:dataType ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:relativeStandardUncertainty ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:standardUncertainty ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dataEncoding ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:unit ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:value ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:DataEncoding ;
            owl:onProperty qudt:dataEncoding ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Datatype ;
            owl:onProperty qudt:dataType ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:unit ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:double ;
            owl:onProperty qudt:relativeStandardUncertainty ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:double ;
            owl:onProperty qudt:standardUncertainty ],
        qudt:Aspect .

qudt:Quantity a owl:Class ;
    rdfs:label "Quantity" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Quantity"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A <b>quantity</b> is the measurement of an observable property of a particular object, event, or physical system. A quantity is always associated with the context of measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying <b>quantity kind</b> is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc. Examples of physical quantities include physical constants, such as the speed of light in a vacuum, Planck's constant, the electric permittivity of free space, and the fine structure constant. </p>

<p class="lm-para">In other words, quantities are quantifiable aspects of the world, such as the duration of a movie, the distance between two points, velocity of a car, the pressure of the atmosphere, and a person's weight; and units are used to describe their numerical measure. 

</p><p class="lm-para">Many <b>quantity kinds</b> are related to each other by various physical laws, and as a result, the associated units of some quantity kinds can be expressed as products (or ratios) of powers of other quantity kinds (e.g., momentum is mass times velocity and velocity is defined as distance divided by time). In this way, some quantities can be calculated from other measured quantities using their associations to the quantity kinds in these expressions. These quantity kind relationships are also discussed in dimensional analysis. Those that cannot be so expressed can be regarded as &quot;fundamental&quot; in this sense.</p>
<p class="lm-para">A quantity is distinguished from a &quot;quantity kind&quot; in that the former carries a value and the latter is a type specifier.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:hasQuantityKind ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityValue ;
            owl:onProperty qudt:quantityValue ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:boolean ;
            owl:onProperty qudt:isDeltaQuantity ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:hasQuantityKind ],
        qudt:Concept,
        qudt:Quantifiable .

qudt:QuantityKindDimensionVector_SI a owl:Class ;
    rdfs:label "Quantity Kind Dimension vector (SI)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:ShortUnsignedIntegerEncoding a qudt:BooleanEncodingType,
        qudt:IntegerEncodingType ;
    rdfs:label "Short Unsigned Integer Encoding" ;
    qudt:bytes 2 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SignednessType a owl:Class ;
    rdfs:label "Signedness type" ;
    dcterms:description "Specifics whether a value should be signed or unsigned." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:SIGNED qudt:UNSIGNED ) .

qudt:SystemOfQuantityKinds a owl:Class ;
    rdfs:label "System of Quantity Kinds" ;
    rdfs:comment "A system of quantity kinds is a set of one or more quantity kinds together with a set of zero or more algebraic equations that define relationships between quantity kinds in the set. In the physical sciences, the equations relating quantity kinds are typically physical laws and definitional relations, and constants of proportionality. Examples include Newton’s First Law of Motion, Coulomb’s Law, and the definition of velocity as the instantaneous change in position.  In almost all cases, the system identifies a subset of base quantity kinds. The base set is chosen so that all other quantity kinds of interest can be derived from the base quantity kinds and the algebraic equations. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind.  From a scientific point of view, the division of quantities into base quantities and derived quantities is a matter of convention."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:Enumeration ;
            owl:onProperty qudt:baseDimensionEnumeration ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:hasQuantityKind ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:SystemOfUnits ;
            owl:onProperty qudt:hasUnitSystem ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:baseDimensionEnumeration ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:hasQuantityKind ],
        qudt:Concept .

qudt:TransformType a owl:Class ;
    rdfs:label "Transform type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    skos:prefLabel "Transform type" .

qudt:UCUMcs a rdfs:Datatype ;
    rdfs:label "case-sensitive UCUM code" ;
    dcterms:source "https://ucum.org/ucum.html"^^xsd:anyURI ;
    rdfs:comment "Lexical pattern for the case-sensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21-\\x7e]+" ] ) .

qudt:UCUMcs-term a rdfs:Datatype ;
    rdfs:label "case-sensitive UCUM terminal" ;
    dcterms:source "https://ucum.org/ucum.html"^^xsd:anyURI ;
    rdfs:comment "Lexical pattern for the terminal symbols in the case-sensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" ] ) .

qudt:applicableSystem a owl:ObjectProperty ;
    rdfs:label "applicable system" ;
    dcterms:description "This property relates a unit of measure with a unit system that may or may not define the unit, but within which the unit is compatible."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:baseDimensionEnumeration a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "base dimension enumeration" ;
    dcterms:description "This property associates a system of quantities with an enumeration that enumerates the base dimensions of the system in canonical order."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Enumeration .

qudt:basis a rdf:Property ;
    rdfs:label "basis" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:bitOrder a owl:ObjectProperty ;
    rdfs:label "bit order" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:EndianType .

qudt:bits a rdf:Property ;
    rdfs:label "bits" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:integer .

qudt:bytes a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "bytes" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:integer .

qudt:cardinality a rdf:Property ;
    rdfs:label "cardinality" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dataEncoding a owl:ObjectProperty ;
    rdfs:label "data encoding" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:DataEncoding .

qudt:dataStructure a owl:DatatypeProperty ;
    rdfs:label "data structure" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:dataType a owl:ObjectProperty ;
    rdfs:label "datatype" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:default a owl:ObjectProperty ;
    rdfs:label "default" ;
    dcterms:description "The default element in an enumeration"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionVectorForSI a owl:ObjectProperty ;
    rdfs:label "dimension vector for SI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector_SI .

qudt:element a owl:ObjectProperty ;
    rdfs:label "element" ;
    dcterms:description "An element of an enumeration"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:encoding a owl:ObjectProperty ;
    rdfs:label "encoding" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:expression a owl:AnnotationProperty ;
    rdfs:label "expression" ;
    dcterms:description "An 'expression' is a finite combination of symbols that are well-formed according to rules that apply to units of measure, quantity kinds and their dimensions."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasAllowedUnit a owl:ObjectProperty ;
    rdfs:label "allowed unit" ;
    dcterms:description "This property relates a unit system with a unit of measure that is not defined by or part of the system, but is allowed for use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnit .

qudt:hasBaseUnit a owl:ObjectProperty ;
    rdfs:label "base unit" ;
    dcterms:description "This property relates a system of units to a base unit defined within the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasCoherentUnit ;
    owl:inverseOf qudt:baseUnitOfSystem .

qudt:hasDerivedCoherentUnit a owl:ObjectProperty ;
    rdfs:label "derived coherent unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasCoherentUnit,
        qudt:hasDerivedUnit ;
    owl:inverseOf qudt:derivedCoherentUnitOfSystem .

qudt:hasUnitSystem a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "has unit system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:id a owl:DatatypeProperty ;
    rdfs:label "qudt id" ;
    dcterms:description "The &quot;qudt:id&quot; is an identifier string that uniquely identifies a QUDT concept.  The identifier is constructed using a prefix. For example, units are coded using the pattern: &quot;UCCCENNNN&quot;, where &quot;CCC&quot; is a numeric code or a category and &quot;NNNN&quot; is a digit string for a member element of that category. For scaled units there may be an addition field that has the format &quot;QNN&quot; where &quot;NN&quot; is a digit string representing an exponent power, and &quot;Q&quot; is a qualifier that indicates with the code &quot;P&quot; that the power is a positive decimal exponent, or the code &quot;N&quot; for a negative decimal exponent, or the code &quot;B&quot; for binary positive exponents."^^rdf:HTML ;
    rdfs:domain qudt:Concept ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:isoNormativeReference a owl:DatatypeProperty ;
    rdfs:label "normative reference (ISO)" ;
    dcterms:description "Provides a way to reference the ISO unit definition."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI ;
    rdfs:subPropertyOf qudt:normativeReference .

qudt:lowerBound a owl:DatatypeProperty ;
    rdfs:label "lower bound" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:orderedType a rdf:Property ;
    rdfs:label "ordered type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:permissibleMaths a owl:ObjectProperty ;
    rdfs:label "permissible maths" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:permissibleTransformation a owl:ObjectProperty ;
    rdfs:label "permissible transformation" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:quantityValue a owl:ObjectProperty ;
    rdfs:label "quantity value" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityValue .

qudt:rationale a owl:DatatypeProperty ;
    rdfs:label "rationale" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range rdf:HTML .

qudt:rdfsDatatype a rdf:Property ;
    rdfs:label "rdfs datatype" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:relativeStandardUncertainty a owl:DatatypeProperty ;
    rdfs:label "relative standard uncertainty" ;
    dcterms:description "The relative standard uncertainty of a measurement is the (absolute) standard uncertainty divided by the magnitude of the exact value."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:double .

qudt:scaleType a owl:ObjectProperty ;
    rdfs:label "scale type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:standardUncertainty a owl:DatatypeProperty ;
    rdfs:label "standard uncertainty" ;
    dcterms:description "The standard uncertainty of a quantity is the estimated standard deviation of the mean taken from a series of measurements."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:double .

qudt:upperBound a owl:DatatypeProperty ;
    rdfs:label "upper bound" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anySimpleType .

qudt:url a owl:DatatypeProperty ;
    rdfs:label "url" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:value a rdf:Property ;
    rdfs:label "value" ;
    dcterms:description "A property to relate an observable thing with a value of any kind"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:vectorMagnitude a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "vector magnitude" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:float .

quantitykind:AbsoluteHumidity a qudt:QuantityKind ;
    rdfs:label "Absolute Humidity"@en ;
    dcterms:description "\"Absolute Humidity\" is an amount of water vapor, usually discussed per unit volume. Absolute humidity in air ranges from zero to roughly 30 grams per cubic meter when the air is saturated at \\(30 ^\\circ C\\). The absolute humidity changes as air temperature or pressure changes. This is very inconvenient for chemical engineering calculations, e.g. for clothes dryers, where temperature can vary considerably. As a result, absolute humidity is generally defined in chemical engineering as mass of water vapor per unit mass of dry air, also known as the mass mixing ratio, which is much more rigorous for heat and mass balance calculations. Mass of water per unit volume as in the equation above would then be defined as volumetric humidity. Because of the potential confusion."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ-PER-GAL,
        unit:OZ-PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Humidity"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Humidity#Absolute_humidity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """\\(AH = \\frac{\\mathcal{M}_\\omega}{\\vee_{net}}\\),
where \\(\\mathcal{M}_\\omega\\) is the mass of water vapor per unit volume of total air and \\(\\vee_{net}\\) is water vapor mixture."""^^qudt:LatexString ;
    qudt:symbol "AH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:RelativeHumidity ;
    skos:broader quantitykind:Density .

quantitykind:Admittance a qudt:QuantityKind ;
    rdfs:label "Admittance"@en ;
    dcterms:description "\"Admittance\" is a measure of how easily a circuit or device will allow a current to flow. It is defined as the inverse of the impedance (\\(Z\\)). "^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciS,
        unit:KiloS,
        unit:MegaS,
        unit:MicroS,
        unit:MilliS,
        unit:NanoS,
        unit:PicoS,
        unit:S ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Admittance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-51"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Y = \\frac{1}{Z}\\), where \\(Z\\) is impedance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(Y\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:AmountOfSubstancePerUnitVolume a qudt:QuantityKind ;
    rdfs:label "Amount of Substance per Unit Volume"@en ;
    qudt:applicableUnit unit:FemtoMOL-PER-L,
        unit:KiloMOL-PER-M3,
        unit:MOL-PER-DeciM3,
        unit:MOL-PER-L,
        unit:MOL-PER-M3,
        unit:MicroMOL-PER-L,
        unit:MilliMOL-PER-L,
        unit:MilliMOL-PER-M3,
        unit:NanoMOL-PER-L,
        unit:PicoMOL-PER-L,
        unit:PicoMOL-PER-M3 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.ask.com/answers/72367781/what-is-defined-as-the-amount-of-substance-per-unit-of-volume"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Molar_concentration"^^xsd:anyURI ;
    qudt:plainTextDescription "The amount of substance per unit volume is called the molar density. Molar density is an intensive property of a substance and depends on the temperature and pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Concentration .

quantitykind:AngularCrossSection a qudt:QuantityKind ;
    rdfs:label "Angular Cross-section"@en ;
    dcterms:description "\"Angular Cross-section\" is the cross-section for ejecting or scattering a particle into an elementary cone, divided by the solid angle \\(d\\Omega\\) of that cone."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-SR ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\sigma_\\Omega d\\Omega\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_\\Omega\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:SpectralCrossSection .

quantitykind:AngularImpulse a qudt:QuantityKind ;
    rdfs:label "Angular Impulse"@en ;
    dcterms:description "The Angular Impulse, also known as angular momentum, is the moment of linear momentum around a point. It is defined as\\(H = \\int Mdt\\), where \\(M\\) is the moment of force and \\(t\\) is time."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/AngularMomentum"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:AngularMomentum ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://emweb.unl.edu/NEGAHBAN/EM373/note13/note.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:AngularMomentum .

quantitykind:AngularVelocity a qudt:QuantityKind ;
    rdfs:label "Angular Velocity"@en ;
    dcterms:description "Angular Velocity refers to how fast an object rotates or revolves relative to another point."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_velocity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Angular_velocity"^^xsd:anyURI ;
    qudt:plainTextDescription "The change of angle per unit time; specifically, in celestial mechanics, the change in angle of the radius vector per unit time." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\sum_r e^{-\\frac{E_r}{kT}}\\), where the sum is over all quantum states consistent with given energy, volume, external fields, and content, \\(E_r\\) is the energy in the \\(rth\\) quantum state, \\(k\\) is the Boltzmann constant, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Canonical Partition Function\" applies to a canonical ensemble, in which the system is allowed to exchange heat with the environment at fixed temperature, volume, and number of particles." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Concentration a qudt:QuantityKind ;
    rdfs:label "Concentration"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Concentration"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Concentration"^^xsd:anyURI ;
    qudt:plainTextDescription "In chemistry, concentration is defined as the abundance of a constituent divided by the total volume of a mixture. Furthermore, in chemistry, four types of mathematical description can be distinguished: mass concentration, molar concentration, number concentration, and volume concentration. The term concentration can be applied to any kind of chemical mixture, but most frequently it refers to solutes in solutions." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CurieTemperature a qudt:QuantityKind ;
    rdfs:label "Curie Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curie_temperature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Curie Temperature\" is the critical thermodynamic temperature of a ferromagnet." ;
    qudt:symbol "T_C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:NeelTemperature,
        quantitykind:SuperconductionTransitionTemperature .

quantitykind:DynamicPressure a qudt:QuantityKind ;
    rdfs:label "Dynamic Pressure"@en ;
    dcterms:description "Dynamic Pressure (indicated with q, or Q, and sometimes called velocity pressure) is the quantity defined by: \\(q = 1/2 * \\rho v^{2}\\), where (using SI units),  \\(q\\) is dynamic pressure in \\(pascals\\), \\(\\rho\\) is fluid density in \\(kg/m^{3}\\) (for example, density of air) and \\(v \\) is fluid velocity in \\(m/s\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dynamic_pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ElectricCharge a qudt:QuantityKind ;
    rdfs:label "Electric Charge"@en ;
    dcterms:description "\"Electric Charge\" is a fundamental conserved property of some subatomic particles, which determines their electromagnetic interaction. Electrically charged matter is influenced by, and produces, electromagnetic fields. The electric charge on a body may be positive or negative. Two positively charged bodies experience a mutual repulsive force, as do two negatively charged bodies. A positively charged body and a negatively charged body experience an attractive force. Electric charge is carried by discrete particles and can be positive or negative. The sign convention is such that the elementary electric charge \\(e\\), that is, the charge of the proton, is positive. The SI derived unit of electric charge is the coulomb."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-HR,
        unit:A-SEC,
        unit:AttoC,
        unit:C,
        unit:C_Ab,
        unit:C_Stat,
        unit:CentiC,
        unit:DecaC,
        unit:DeciC,
        unit:E,
        unit:ElementaryCharge,
        unit:ExaC,
        unit:F,
        unit:FR,
        unit:FemtoC,
        unit:GigaC,
        unit:HectoC,
        unit:KiloA-HR,
        unit:KiloC,
        unit:MegaC,
        unit:MicroC,
        unit:MilliA-HR,
        unit:MilliC,
        unit:NanoC,
        unit:PetaC,
        unit:PicoC,
        unit:PlanckCharge,
        unit:TeraC,
        unit:YoctoC,
        unit:YottaC,
        unit:ZeptoC,
        unit:ZettaC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_charge"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Electric_charge?oldid=492961669"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(dQ = Idt\\), where \\(I\\) is electric current."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent .

quantitykind:ElectricChargeSurfaceDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Surface Density"@en ;
    qudt:applicableUnit unit:C-PER-M2 ;
    qudt:expression "\\(surface-charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac{dQ}{dA}\\), where \\(Q\\) is electric charge and \\(A\\) is Area."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity .

quantitykind:ElectricCurrentPerUnitLength a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Length"@en ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPhasor a qudt:QuantityKind ;
    rdfs:label "Electric Current Phasor"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Phasor_(electronics)"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-26"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "When \\(i = \\hat{I} \\cos{(\\omega t + \\alpha)}\\), where \\(i\\) is the electric current, \\(\\omega\\) is angular frequence, \\(t\\) is time, and \\(\\alpha\\) is initial phase, then \\(\\underline{I} = Ie^{ja}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{I}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Current Phasor\" is a representation of current as a sinusoidal integral quantity using a complex quantity whose argument is equal to the initial phase and whose modulus is equal to the root-mean-square value. A phasor is a constant complex number, usually expressed in exponential form, representing the complex amplitude (magnitude and phase) of a sinusoidal function of time. Phasors are used by electrical engineers to simplify computations involving sinusoids, where they can often reduce a differential equation problem to an algebraic one." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDisplacement a qudt:QuantityKind ;
    rdfs:label "Electric Displacement"@en ;
    dcterms:description "In a dielectric material the presence of an electric field E causes the bound charges in the material (atomic nuclei and their electrons) to slightly separate, inducing a local electric dipole moment. The Electric Displacement Field, \\(D\\), is a vector field that accounts for the effects of free charges within such dielectric materials. This describes also the charge density on an extended surface that could be causing the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:exactMatch quantitykind:ElectricFluxDensity ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D = \\epsilon_0 E + P\\), where \\(\\epsilon_0\\) is the electric constant, \\(E\\) is electric field strength, and \\(P\\) is electric polarization."^^qudt:LatexString ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricFluxDensity ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:ElectromagneticEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Energy Density"@en ;
    dcterms:description "\\(\\textbf{Electromagnetic Energy Density}\\), also known as the \\(\\color{indigo} {\\textit{Volumic Electromagnetic Energy}}\\), is the energy associated with an electromagnetic field, per unit volume of the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:exactMatch quantitykind:VolumicElectromagneticEnergy ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-64"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = (1/2) ( \\mathbf{E} \\cdot \\mathbf{D} + \\mathbf{B} \\cdot \\mathbf{H})\\), where \\(\\mathbf{E}\\) is electric field strength, \\(\\mathbf{D}\\) is electric flux density, \\(\\mathbf{M}\\) is magnetic flux density, and \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:symbol "w" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricFluxDensity,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity ;
    owl:sameAs quantitykind:VolumicElectromagneticEnergy .

quantitykind:EnergyDensity a qudt:QuantityKind ;
    rdfs:label "Energy Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:baseISOUnitDimensions "\\(m^{-1} \\cdot kg \\cdot s^{-2}\\)" ;
    qudt:baseImperialUnitDimensions "\\(ft^{-1} \\cdot lb \\cdot s^{-2}\\)"^^qudt:LatexString ;
    qudt:baseSIUnitDimensions "\\(m^{-1} \\cdot kg \\cdot s^{-2}\\)"^^qudt:LatexString ;
    qudt:baseUSCustomaryUnitDimensions "\\(L^{-1} \\cdot M \\cdot T^{-2}\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Energy_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Energy_density"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy density is defined as energy per unit volume. The SI unit for energy density is the joule per cubic meter." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerArea a qudt:QuantityKind ;
    rdfs:label "Energy per Area"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:KiloW-HR-PER-M2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.calculator.org/property.aspx?name=energy%20per%20unit%20area"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy per unit area is a measure of the energy either impinging upon or generated from a given unit of area. This can be a measure of the \"toughness\" of a material, being the amount of energy that needs to be applied per unit area of a crack to cause it to fracture. This is a constant for a given material.." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerTemperature a qudt:QuantityKind ;
    rdfs:label "Energy per temperature"@en ;
    qudt:applicableUnit unit:KiloJ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Entropy a qudt:QuantityKind ;
    rdfs:label "Entropy"@en ;
    dcterms:description "When a small amount of heat \\(dQ\\) is received by a system whose thermodynamic temperature is \\(T\\), the entropy of the system increases by \\(dQ/T\\), provided that no irreversible change takes place in the system."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EquilibriumConstant a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K^\\Theta = \\Pi_B(\\lambda_B^\\Theta)^{-\\nu_B}\\), where \\(\\Pi_B\\) denotes the product for all substances \\(B\\), \\(\\lambda_B^\\Theta\\) is the standard absolute activity of substance \\(B\\), and \\(\\nu_B\\) is the stoichiometric number of the substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(K^\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:EquilibriumConstantOnConcentrationBasis,
        quantitykind:EquilibriumConstantOnPressureBasis .

quantitykind:ForcePerLength a qudt:QuantityKind ;
    rdfs:label "Force per Length"@en ;
    qudt:applicableUnit unit:DYN-PER-CentiM,
        unit:KiloGM_F-M-PER-CentiM2,
        unit:KiloLB_F-PER-FT,
        unit:LB_F-PER-FT,
        unit:LB_F-PER-IN,
        unit:MilliN-PER-M,
        unit:N-M-PER-M2,
        unit:N-PER-CentiM,
        unit:N-PER-M,
        unit:N-PER-MilliM,
        unit:PicoPA-PER-KiloM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Friction a qudt:QuantityKind ;
    rdfs:label "Friction"@en ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Friction\" is the force of two surfaces In contact, or the force of a medium acting on a moving object (that is air on an aircraft). When contacting surfaces move relative to each other, the friction between the two objects converts kinetic energy into thermal energy." ;
    qudt:url "http://wiki.answers.com/Q/What_is_the_symbol_of_friction"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:FrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Friction Coefficient\" is the ratio of the force of friction between two bodies and the force pressing them together" ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:url "http://wiki.answers.com/Q/What_is_the_symbol_of_friction"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:HeatFlowRate a qudt:QuantityKind ;
    rdfs:label "Heat Flow Rate"@en ;
    dcterms:description "The rate of heat flow between two systems is measured in watts (joules per second). The formula for rate of heat flow is \\(\\bigtriangleup Q / \\bigtriangleup t = -K \\times A \\times \\bigtriangleup T/x\\), where \\(\\bigtriangleup Q / \\bigtriangleup t\\) is the rate of heat flow; \\(-K\\) is the thermal conductivity factor; A is the surface area; \\(\\bigtriangleup T\\) is the change in temperature and \\(x\\) is the thickness of the material. \\(\\bigtriangleup  T/ x\\) is called the temperature gradient and is always negative because of the heat of flow always goes from more thermal energy to less)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-MIN,
        unit:BTU_IT-PER-SEC,
        unit:BTU_TH-PER-HR,
        unit:BTU_TH-PER-MIN,
        unit:BTU_TH-PER-SEC,
        unit:CAL_TH-PER-MIN,
        unit:CAL_TH-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloBTU_TH-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloCAL_TH-PER-HR,
        unit:KiloCAL_TH-PER-MIN,
        unit:KiloCAL_TH-PER-SEC,
        unit:MegaBTU_IT-PER-HR,
        unit:THM_US-PER-HR,
        unit:TON_FG ;
    qudt:expression "\\(heat-flow-rate\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rate_of_heat_flow"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:Illuminance a qudt:QuantityKind ;
    rdfs:label "Illuminance"@en ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Illuminance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Illuminance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E_v = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the luminous flux incident on an element of the surface with area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Illuminance is the total luminous flux incident on a surface, per unit area. It is a measure of the intensity of the incident light, wavelength-weighted by the luminosity function to correlate with human brightness perception." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LuminousFluxPerArea .

quantitykind:Inductance a qudt:QuantityKind ;
    rdfs:label "Inductance"@en ;
    qudt:applicableUnit unit:H,
        unit:H_Ab,
        unit:H_Stat,
        unit:MicroH,
        unit:MilliH,
        unit:NanoH,
        unit:PicoH ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Inductance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-19"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L =\\frac{\\Psi}{I}\\), where \\(I\\) is an electric current in a thin conducting loop, and \\(\\Psi\\) is the linked flux caused by that electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Inductance\" is an electromagentic quantity that characterizes a circuit's resistance to any change of electric current; a change in the electric current through induces an opposing electromotive force (EMF). Quantitatively, inductance is proportional to the magnetic flux per unit of electric current." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MutualInductance .

quantitykind:InformationFlowRate a qudt:QuantityKind ;
    rdfs:label "Information flow rate"@en ;
    qudt:applicableUnit unit:HART-PER-SEC,
        unit:NAT-PER-SEC,
        unit:SHANNON-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InversePressure a qudt:QuantityKind ;
    rdfs:label "Inverse Pressure"@en ;
    qudt:applicableUnit unit:PER-BAR,
        unit:PER-MILLE-PER-PSI,
        unit:PER-PA,
        unit:PER-PSI ;
    qudt:exactMatch quantitykind:IsothermalCompressibility ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:IsothermalCompressibility .

quantitykind:InverseTime a qudt:QuantityKind ;
    rdfs:label "Inverse Time"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseVolume a qudt:QuantityKind ;
    rdfs:label "Inverse Volume"@en ;
    qudt:applicableUnit unit:PER-CentiM3,
        unit:PER-FT3,
        unit:PER-IN3,
        unit:PER-L,
        unit:PER-M3,
        unit:PER-MilliM3,
        unit:PER-YD3 ;
    qudt:hasDimension qudt:DIM_SI-m-3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Ionization Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Ionization Energy\" is the energy difference between an electron at rest at infinity and an electron at a certain energy level. The amount of energy required to remove an electron from that atom or molecule in the gas phase." ;
    qudt:symbol "E_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:IsothermalCompressibility a qudt:QuantityKind ;
    rdfs:label "Isothermal compressibility"@en ;
    qudt:applicableUnit unit:PER-MILLE-PER-PSI,
        unit:PER-PA ;
    qudt:exactMatch quantitykind:InversePressure ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa_T = \\frac{1}{V}\\left (\\frac{\\partial V}{\\partial p} \\right )_T\\), where \\(V\\) is volume, \\(p\\) is \\(pressure\\), and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The isothermal compressibility defines the rate of change of system volume with pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:InversePressure .

quantitykind:LinearAcceleration a qudt:QuantityKind ;
    rdfs:label "Linear Acceleration"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Acceleration"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Acceleration ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Acceleration .

quantitykind:LinearMomentum a qudt:QuantityKind ;
    rdfs:label "Linear Momentum"@en ;
    dcterms:description "Linear momentum is the quantity obtained by multiplying the mass of a body by its linear velocity. The momentum of a continuous medium is given by the integral of the velocity over the mass of the medium or by the product of the total mass of the medium and the velocity of the center of gravity of the medium.The SI unit for linear momentum is meter-kilogram per second (\\(m-kg/s\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-M-PER-SEC,
        unit:MegaEV-PER-SpeedOfLight,
        unit:N-M-SEC-PER-M,
        unit:N-SEC,
        unit:PlanckMomentum ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Momentum"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Momentum ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:latexDefinition "p = m\\upsilon"^^qudt:LatexString ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Momentum .

quantitykind:LinearStrain a qudt:QuantityKind ;
    rdfs:label "Linear Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:exactMatch quantitykind:Strain ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\xi = \\frac{\\Delta l}{l_0}\\), where \\(\\Delta l\\) is the increase in length and \\(l_0\\) is the length in a reference state to be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A strain is a normalized measure of deformation representing the displacement between particles in the body relative to a reference length." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Strain ;
    skos:broader quantitykind:Strain .

quantitykind:LinearVelocity a qudt:QuantityKind ;
    rdfs:label "Linear Velocity"@en ;
    dcterms:description "Linear Velocity, as the name implies deals with speed in a straight line, the units are often \\(km/hr\\) or \\(m/s\\) or \\(mph\\) (miles per hour). Linear Velocity (v) = change in distance/change in time, where \\(v = \\bigtriangleup d/\\bigtriangleup t\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Velocity"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Velocity ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://au.answers.yahoo.com/question/index?qid=20080319082534AAtrClv"^^xsd:anyURI ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Velocity .

quantitykind:LuminousEnergy a qudt:QuantityKind ;
    rdfs:label "Luminous Energy"@en ;
    qudt:applicableUnit unit:LM-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q_v = \\int_{0}^{\\Delta t}{\\Phi_v}{dt}\\), where \\(\\Phi_v\\) is the luminous flux occurring during the time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Energy is the perceived energy of light. This is sometimes also called the quantity of light." ;
    qudt:symbol "Q_v",
        "Qv" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:RadiantEnergy .

quantitykind:LuminousFluxPerArea a qudt:QuantityKind ;
    rdfs:label "Luminous Flux per Area"@en ;
    dcterms:description "In photometry, illuminance is the total luminous flux incident on a surface, per unit area. It is a measure of how much the incident light illuminates the surface, wavelength-weighted by the luminosity function to correlate with human brightness perception. Similarly, luminous emittance is the luminous flux per unit area emitted from a surface. In SI derived units these are measured in \\(lux (lx)\\) or \\(lumens per square metre\\) (\\(cd \\cdot m^{-2}\\)). In the CGS system, the unit of illuminance is the \\(phot\\), which is equal to \\(10,000 lux\\). The \\(foot-candle\\) is a non-metric unit of illuminance that is used in photography."^^qudt:LatexString ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Illuminance"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticAreaMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Area Moment"@en ;
    qudt:exactMatch quantitykind:MagneticMoment ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-49"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m = I e_n A\\), where \\(I\\) is electric current in a small closed loop, \\(e_n\\) is a unit vector perpendicular to the loop, and \\(A\\) is the area of the loop. The magnetic moment of a substance within a domain is the vector sum of the magnetic moments of all entities included in the domain."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Area Moment\", for a magnetic dipole, is a vector quantity equal to the product of the current, the loop area, and the unit vector normal to the loop plane, the direction of which corresponds to the loop orientation. \"Magnetic Area Moment\" is also referred to as \"Magnetic Moment\"." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MagneticMoment .

quantitykind:MagneticFlux a qudt:QuantityKind ;
    rdfs:label "Magnetic Flux"@en ;
    qudt:applicableUnit unit:KiloLB_F-FT-PER-A,
        unit:KiloWB,
        unit:MX,
        unit:MilliWB,
        unit:N-M-PER-A,
        unit:UnitPole,
        unit:V_Ab-SEC,
        unit:WB ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetic_flux"^^xsd:anyURI ;
    qudt:expression "\\(magnetic-flux\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1800"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi = \\int_S B \\cdot e_n d A\\), over a surface \\(S\\), where \\(B\\) is magnetic flux density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString,
        "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Flux\" is the product of the average magnetic field times the perpendicular area that it penetrates." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Moment"@en ;
    qudt:applicableUnit unit:A-M2,
        unit:EV-PER-T,
        unit:J-PER-T ;
    qudt:exactMatch quantitykind:MagneticAreaMoment ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-49"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "https://www.simetric.co.uk/siderived.htm"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m = I e_n A\\), where \\(I\\) is electric current in a small closed loop, \\(e_n\\) is a unit vector perpendicular to the loop, and \\(A\\) is the area of the loop. The magnetic moment of a substance within a domain is the vector sum of the magnetic moments of all entities included in the domain."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Moment\", for a magnetic dipole, is a vector quantity equal to the product of the current, the loop area, and the unit vector normal to the loop plane, the direction of which corresponds to the loop orientation. \"Magnetic Moment\" is also referred to as \"Magnetic Area Moment\", and is not to be confused with Magnetic Dipole Moment." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MagneticAreaMoment .

quantitykind:Magnetization a qudt:QuantityKind ;
    rdfs:label "Magnetization"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-52"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = dm/dV\\), where \\(m\\) is magentic moment of a substance in a domain with Volume \\(V\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetization\" is defined as the ratio of magnetic moment per unit volume. It is a vector-valued quantity." ;
    qudt:symbol "H_i",
        "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LinearElectricCurrent .

quantitykind:MassDensity a qudt:QuantityKind ;
    rdfs:label "Mass Density"@en ;
    qudt:applicableUnit unit:DEGREE_BALLING,
        unit:DEGREE_BAUME,
        unit:DEGREE_BAUME_US_HEAVY,
        unit:DEGREE_BAUME_US_LIGHT,
        unit:DEGREE_BRIX,
        unit:DEGREE_OECHSLE,
        unit:DEGREE_PLATO,
        unit:DEGREE_TWADDELL,
        unit:FemtoGM-PER-L,
        unit:GM-PER-CentiM3,
        unit:GM-PER-DeciM3,
        unit:GM-PER-L,
        unit:GM-PER-M3,
        unit:GM-PER-MilliL,
        unit:GRAIN-PER-GAL_US,
        unit:KiloGM-PER-CentiM3,
        unit:KiloGM-PER-DeciM3,
        unit:KiloGM-PER-L,
        unit:KiloGM-PER-M3,
        unit:MegaGM-PER-M3,
        unit:MicroGM-PER-L,
        unit:MicroGM-PER-M3,
        unit:MicroGM-PER-MilliL,
        unit:MilliGM-PER-L,
        unit:MilliGM-PER-M3,
        unit:MilliGM-PER-MilliL,
        unit:NanoGM-PER-L,
        unit:NanoGM-PER-M3,
        unit:NanoGM-PER-MicroL,
        unit:NanoGM-PER-MilliL,
        unit:OZ-PER-GAL_UK,
        unit:OZ-PER-GAL_US,
        unit:OZ-PER-YD3,
        unit:PicoGM-PER-L,
        unit:PicoGM-PER-MilliL,
        unit:TONNE-PER-M3,
        unit:TON_Metric-PER-M3,
        unit:TON_UK-PER-YD3,
        unit:TON_US-PER-YD3 ;
    qudt:exactMatch quantitykind:Density ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{dm}{dV}\\), where \\(m\\) is mass and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The mass density or density of a material is its mass per unit volume." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Density .

quantitykind:MolarAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Molar Absorption Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-MOL ;
    qudt:exactMatch quantitykind:MolarAttenuationCoefficient ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://medical-dictionary.thefreedictionary.com/molar+absorption+coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x = aV_m\\), where \\(a\\) is the linear absorption coefficient and \\(V_m\\) is the molar volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Absorption Coefficient\" is a spectrophotometric unit indicating the light a substance absorbs with respect to length, usually centimeters, and concentration, usually moles per liter." ;
    qudt:symbol "x" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MolarAttenuationCoefficient .

quantitykind:MomentOfForce a qudt:QuantityKind ;
    rdfs:label "Moment of Force"@en ;
    qudt:applicableUnit unit:N-M ;
    qudt:exactMatch quantitykind:Torque ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moment_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = r \\cdot F\\), where \\(r\\) is the position vector and \\(F\\) is the force."^^qudt:LatexString ;
    qudt:plainTextDescription "Moment of force (often just moment) is the tendency of a force to twist or rotate an object." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Torque .

quantitykind:Momentum a qudt:QuantityKind ;
    rdfs:label "Momentum"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Momentum"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:LinearMomentum ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:plainTextDescription "The momentum of a system of particles is given by the sum of the momentums of the individual particles which make up the system or by the product of the total mass of the system and the velocity of the center of gravity of the system. The momentum of a continuous medium is given by the integral of the velocity over the mass of the medium or by the product of the total mass of the medium and the velocity of the center of gravity of the medium." ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearMomentum .

quantitykind:MultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Neutron_multiplication_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Multiplication Factor\" is the ratio of the total number of fission or fission-dependent neutrons produced in a time interval to the total number of neutrons lost by absorption and leakage during the same interval." ;
    qudt:symbol "k" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeelTemperature a qudt:QuantityKind ;
    rdfs:label "Neel Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Néel_temperature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Neel Temperature\" is the critical thermodynamic temperature of an antiferromagnet." ;
    qudt:symbol "T_C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature ;
    skos:closeMatch quantitykind:CurieTemperature,
        quantitykind:SuperconductionTransitionTemperature .

quantitykind:PH a qudt:QuantityKind ;
    rdfs:label "PH"@en ;
    qudt:applicableUnit unit:PH ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Acid"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/PH"^^xsd:anyURI ;
    qudt:plaintextDescription "Chemicals or substances having a pH less than 7 are said to be acidic; more than 7 means basic." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Permeability a qudt:QuantityKind ;
    rdfs:label "Permeability"@en ;
    qudt:applicableUnit unit:H-PER-M,
        unit:H_Stat-PER-CentiM,
        unit:MicroH-PER-M,
        unit:NanoH-PER-M ;
    qudt:exactMatch quantitykind:ElectromagneticPermeability ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    owl:sameAs quantitykind:ElectromagneticPermeability .

quantitykind:PressureRatio a qudt:QuantityKind ;
    rdfs:label "Pressure Ratio"@en ;
    qudt:applicableUnit unit:BAR-PER-BAR,
        unit:HectoPA-PER-BAR,
        unit:KiloPA-PER-BAR,
        unit:MegaPA-PER-BAR,
        unit:MilliBAR-PER-BAR,
        unit:PA-PER-BAR,
        unit:PSI-PER-PSI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Radiance a qudt:QuantityKind ;
    rdfs:label "Radiance"@en ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\frac{dI}{dA}\\frac{1}{cos\\alpha}\\), where \\(dI\\) is the radiant intensity emitted from an element of the surface area \\(dA\\), and angle \\(\\alpha\\) is the angle between the normal to the surface and the given direction."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Radiance\" is a radiometric measure that describes the amount of light that passes through or is emitted from a particular area, and falls within a given solid angle in a specified direction." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerAreaAngle .

quantitykind:Radius a qudt:QuantityKind ;
    rdfs:label "Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Radius"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radius"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r = \\frac{d}{2}\\), where \\(d\\) is the circle diameter."^^qudt:LatexString ;
    qudt:plainTextDescription "In classical geometry, the \"Radius\" of a circle or sphere is any line segment from its center to its perimeter the radius of a circle or sphere is the length of any such segment." ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:RelativeHumidity a qudt:QuantityKind ;
    rdfs:label "Relative Humidity"@en ;
    dcterms:description "\\(\\textit{Relative Humidity}\\) is the ratio of the partial pressure of water vapor in an air-water mixture to the saturated vapor pressure of water at a prescribed temperature. The relative humidity of air depends not only on temperature but also on the pressure of the system of interest. \\(\\textit{Relative Humidity}\\) is also referred to as \\(\\textit{Relative Partial Pressure}\\). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent."^^qudt:LatexString ;
    qudt:applicableUnit unit:PERCENT,
        unit:PERCENT_RH ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_humidity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = p / p_{sat}\\), where \\(p\\) is partial pressure of vapour,  \\(p_{sat}\\) is thermodynamic temperature and \\(V\\) is its partial pressure at saturation (at the same temperature). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent. \\(\\textit{Relative Humidity}\\) is also referred to as \\(\\textit{Relative Partial Pressure}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:AbsoluteHumidity ;
    skos:altLabel "RH" ;
    skos:broader quantitykind:RelativePartialPressure .

quantitykind:RelativePartialPressure a qudt:QuantityKind ;
    rdfs:label "Relative Partial Pressure"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = p / p_{sat}\\), where \\(p\\) is partial pressure of vapour,  \\(p_{sat}\\) is thermodynamic temperature and \\(V\\) is its partial pressure at saturation (at the same temperature). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent. \\(\\textit{Relative Partial Pressure}\\) is also referred to as \\(\\textit{Relative Humidity}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "RH" ;
    skos:broader quantitykind:PressureRatio .

quantitykind:Resistance a qudt:QuantityKind ;
    rdfs:label "Resistance"@en ;
    qudt:applicableUnit unit:GigaOHM,
        unit:KiloOHM,
        unit:MegaOHM,
        unit:MicroOHM,
        unit:MilliOHM,
        unit:OHM,
        unit:OHM_Ab,
        unit:OHM_Stat,
        unit:PlanckImpedance,
        unit:TeraOHM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Resistance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-45"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R = \\frac{u}{i}\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "The electrical resistance of an object is a measure of its opposition to the passage of a steady electric current." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent,
        quantitykind:Impedance,
        quantitykind:InstantaneousPower .

quantitykind:SpecificVolume a qudt:QuantityKind ;
    rdfs:label "Specific Volume"@en ;
    dcterms:description "\"Specific Volume\" (\\(\\nu\\)) is the volume occupied by a unit of mass of a material. It is equal to the inverse of density."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciL-PER-GM,
        unit:L-PER-KiloGM,
        unit:M3-PER-KiloGM,
        unit:MilliL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(sv = \\frac{1}{\\rho}\\), where \\(\\rho\\) is mass density."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Density .

quantitykind:SpectralCrossSection a qudt:QuantityKind ;
    rdfs:label "Spectral Cross-section"@en ;
    dcterms:description "\"Spectral Cross-section\" is the cross-section for a process in which the energy of the ejected or scattered particle is in an interval of energy, divided by the range \\(dE\\) of this interval."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-J ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\sigma_E dE\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_E\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:AngularCrossSection .

quantitykind:SpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Speed of sound"@en ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed_of_sound"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c = \\sqrt{\\frac{K}{\\rho}}\\), where \\(K\\) is the coefficient of stiffness, the bulk modulus (or the modulus of bulk elasticity for gases), and \\(\\rho\\) is the density. Also, \\(c^2 = \\frac{\\partial p}{\\partial \\rho}\\), where \\(p\\) is the pressure and \\(\\rho\\) is the density."^^qudt:LatexString ;
    qudt:plainTextDescription "The speed of sound is the distance travelled during a unit of time by a sound wave propagating through an elastic medium." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Speed .

quantitykind:StaticPressure a qudt:QuantityKind ;
    rdfs:label "Static pressure"@en ;
    dcterms:description "\"Static Pressure\" is the pressure at a nominated point in a fluid. Every point in a steadily flowing fluid, regardless of the fluid speed at that point, has its own static pressure \\(P\\), dynamic pressure \\(q\\), and total pressure \\(P_0\\). The total pressure is the sum of the dynamic and static pressures, that is \\(P_0 = P + q\\)."^^qudt:LatexString ;
    qudt:abbreviation "p" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Static_pressure"^^xsd:anyURI ;
    qudt:symbol "p" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:Stress a qudt:QuantityKind ;
    rdfs:label "Stress"@en ;
    dcterms:description "Stress is a measure of the average amount of force exerted per unit area of a surface within a deformable body on which internal forces act. In other words, it is a measure of the intensity or internal distribution of the total internal forces acting within a deformable body across imaginary surfaces. These internal forces are produced between the particles in the body as a reaction to external forces applied on the body. Stress is defined as \\({\\rm{Stress}} = \\frac{F}{A}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:latexDefinition "\\({\\rm{Stress}} = \\frac{F}{A}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:url "http://www.freestudy.co.uk/mech%20prin%20h2/stress.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

quantitykind:SuperconductionTransitionTemperature a qudt:QuantityKind ;
    rdfs:label "Superconduction Transition Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Superconductivity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Superconduction Transition Temperature\" is the critical thermodynamic temperature of a superconductor." ;
    qudt:symbol "T_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature ;
    skos:closeMatch quantitykind:CurieTemperature,
        quantitykind:NeelTemperature .

quantitykind:ThermalEnergy a qudt:QuantityKind ;
    rdfs:label "Thermal Energy"@en ;
    dcterms:description "\"Thermal Energy} is the portion of the thermodynamic or internal energy of a system that is responsible for the temperature of the system. From a macroscopic thermodynamic description, the thermal energy of a system is given by its constant volume specific heat capacity C(T), a temperature coefficient also called thermal capacity, at any given absolute temperature (T): \\(U_{thermal} = C(T) \\cdot T\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:THM_EEC,
        unit:THM_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:VoltagePhasor a qudt:QuantityKind ;
    rdfs:label "Voltage Phasor"@en ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-26"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "When \\(u = \\hat{U} \\cos{(\\omega t + \\alpha)}\\), where \\(u\\) is the voltage, \\(\\omega\\) is angular frequency, \\(t\\) is time, and \\(\\alpha\\) is initial phase, then \\(\\underline{U} = Ue^{ja}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{U}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Voltage Phasor\" is a representation of voltage as a sinusoidal integral quantity using a complex quantity whose argument is equal to the initial phase and whose modulus is equal to the root-mean-square value. A phasor is a constant complex number, usually expressed in exponential form, representing the complex amplitude (magnitude and phase) of a sinusoidal function of time. Phasors are used by electrical engineers to simplify computations involving sinusoids, where they can often reduce a differential equation problem to an algebraic one." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumePerUnitTime a qudt:QuantityKind ;
    rdfs:label "Volume per Unit Time"@en ;
    qudt:applicableUnit unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_US-PER-DAY,
        unit:GAL_US-PER-MIN,
        unit:IN3-PER-MIN,
        unit:M3-PER-HR,
        unit:M3-PER-SEC,
        unit:YD3-PER-MIN ;
    qudt:exactMatch quantitykind:VolumeFlowRate ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:VolumeFlowRate .

quantitykind:VolumicElectromagneticEnergy a qudt:QuantityKind ;
    rdfs:label "Volumic Electromagnetic Energy"@en ;
    dcterms:description "\\(\\textit{Volumic Electromagnetic Energy}\\), also known as the \\(\\textit{Electromagnetic Energy Density}\\), is the energy associated with an electromagnetic field, per unit volume of the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:exactMatch quantitykind:ElectromagneticEnergyDensity ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-64"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = (1/2) ( \\mathbf{E} \\cdot \\mathbf{D} + \\mathbf{B} \\cdot \\mathbf{H})\\), where \\(\\mathbf{E}\\) is electric field strength, \\(\\mathbf{D}\\) is electric flux density, \\(\\mathbf{M}\\) is magnetic flux density, and \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(w\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricFluxDensity,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity ;
    owl:sameAs quantitykind:ElectromagneticEnergyDensity .

vaem:QUDT a vaem:Party ;
    rdfs:label "QUDT" ;
    dcterms:description "QUDT is a non-profit organization that governs the QUDT ontologies."^^rdf:HTML ;
    vaem:graphName "qudt.org" ;
    vaem:website "http://www.qudt.org"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

skos:broader a rdf:Property ;
    rdfs:label "has broader"@en ;
    owl:inverseOf skos:narrower .

brick:Absolute_Humidity a brick:Quantity ;
    rdfs:label "Absolute Humidity" ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ-PER-GAL,
        unit:OZ-PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3,
        unit:TON_UK-PER-YD3,
        unit:TON_US-PER-YD3 ;
    skos:broader brick:Humidity ;
    brick:hasQUDTReference quantitykind:AbsoluteHumidity .

brick:Adjust_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Adjust Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures user-provided adjustment of some value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Adjust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Adjust,
        tag:Point,
        tag:Sensor .

brick:Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Air .

brick:Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint,
        brick:Demand_Setpoint ;
    skos:definition "Sets the rate of air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Grains Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the mass of water vapor in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Air .

brick:Air_Handler_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Handler Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:AHU,
        brick:Air_Handling_Unit ;
    skos:definition "Assembly consisting of sections containing a fan or fans and other necessary equipment to perform one or more of the following functions: circulating, filtration, heating, cooling, heat recovery, humidifying, dehumidifying, and mixing of air. Is usually connected to an air-distribution system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Handler,
        tag:Unit .

brick:Air_Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Alarm_Sensitivity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm Sensitivity Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter indicates the sensitivity to activate an alarm."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensitivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Parameter,
        tag:Point,
        tag:Sensitivity .

brick:Alternating_Current_Frequency a brick:Quantity ;
    rdfs:label "Alternating_Current_Frequency" ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Frequency,
        brick:Frequency ;
    skos:definition "The frequency of the oscillations of alternating current",
        "The frequency of the oscillations of alternating current"@en ;
    skos:related brick:Electric_Current .

brick:Ammonia_Concentration a brick:Quantity ;
    rdfs:label "AmmoniaConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of Ammonia in a medium" .

brick:Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Angle Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measues the planar angle of some phenomenon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Angle .

brick:Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Boiler" ;
    rdfs:subClassOf brick:HVAC_Equipment,
        brick:Water_Heater ;
    skos:definition "A closed, pressure vessel that uses fuel or electricity for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment .

brick:Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Valve" ;
    rdfs:seeAlso <https://www.petropedia.com/definition/5050/bypass-valve> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A type of valve installed in a bypass pipeline"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Equipment,
        tag:Valve .

brick:CRAC a owl:Class,
        sh:NodeShape ;
    rdfs:label "CRAC" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:Computer_Room_Air_Conditioning ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAC,
        tag:Equipment .

brick:Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Beam" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device with an integrated coil that performs sensible heating of a space via circulation of room air. Chilled Beams are not designed to perform latent cooling; see Induction Units. Despite their name, Chilled Beams may perform heating or cooling of a space depending on their configuration."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Beam,
        tag:Chilled,
        tag:Equipment .

brick:Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Coil" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "Cooling or heating element made of pipe or tube that may or may not be finned and formed into helical or serpentine shape (ASHRAE Dictionary)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment .

brick:Conductivity a brick:Quantity ;
    rdfs:label "Conductivity" ;
    qudt:applicableUnit unit:DeciS-PER-M,
        unit:KiloGM-PER-M2-PA-SEC,
        unit:KiloS-PER-M,
        unit:MegaS-PER-M,
        unit:MicroS-PER-CentiM,
        unit:MicroS-PER-M,
        unit:MilliS-PER-CentiM,
        unit:MilliS-PER-M,
        unit:NanoS-PER-CentiM,
        unit:NanoS-PER-M,
        unit:PicoS-PER-M,
        unit:S-PER-CentiM,
        unit:S-PER-M ;
    brick:hasQUDTReference quantitykind:Conductivity .

brick:Cooling_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Coil" ;
    rdfs:subClassOf brick:Coil ;
    skos:definition "A cooling element made of pipe or tube that removes heat from equipment, machines or airflows. Typically filled with either refrigerant or cold water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Cool,
        tag:Equipment .

brick:Cooling_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of cooling to be delivered (typically as a proportion of total cooling output)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Cool,
        tag:Point .

brick:Cooling_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates whether a system, device or control loop is in a cooling mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Mode,
        tag:Point,
        tag:Status .

brick:Cooling_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Current_Imbalance a brick:Quantity ;
    rdfs:label "CurrentImbalance" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The percent deviation from average current",
        "The percent deviation from average current"@en ;
    skos:related brick:Electric_Current .

brick:Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Senses the amperes of electrical current produced as output by a device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:Point,
        tag:Sensor .

brick:DDAHU a owl:Class,
        sh:NodeShape ;
    rdfs:label "DDAHU" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Dual_Duct_Air_Handling_Unit ;
    skos:definition "See Dual_Duct_Air_Handling_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:DDAHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:DDAHU,
        tag:Equipment .

brick:Differential_CO2_Concentration a brick:Quantity ;
    rdfs:label "ΔCO2Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:isDeltaQuantity true ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:CO2_Concentration ;
    skos:definition "The difference in carbon dioxide concentration between two areas" .

brick:Differential_CO_Concentration a brick:Quantity ;
    rdfs:label "ΔCOConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:isDeltaQuantity true ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:CO_Concentration ;
    skos:definition "The difference in carbon monoxide concentration between two areas" .

brick:Differential_Dynamic_Pressure a brick:Quantity ;
    rdfs:label "Differential Dynamic Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Differential_Pressure,
        brick:Velocity_Pressure ;
    brick:hasQUDTReference quantitykind:DynamicPressure .

brick:Differential_Entering_Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Entering Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between entering and leaving water of water a circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Entering,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Chilled_Water,
        brick:Leaving_Chilled_Water .

brick:Differential_Static_Pressure a brick:Quantity ;
    rdfs:label "Differential Static Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Differential_Pressure,
        brick:Static_Pressure ;
    brick:hasQUDTReference quantitykind:StaticPressure .

brick:Differential_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Temperature Setpoint" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=setpoint> ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    skos:definition "A type of Setpoints that is related to the difference between two temperature measurements"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Discharge_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Heating_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Water_Flow_Setpoint a owl:Class ;
    rdfs:label "Discharge Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Flow_Setpoint .

brick:Distribution_Frame a owl:Class,
        sh:NodeShape ;
    rdfs:label "Distribution Frame" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A class of spaces where the cables carrying signals meet and connect, e.g. a wiring closet or a broadcast downlink room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Domestic_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint,
        brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Dry_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Dry_Bulb_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The temperature of air measured by a thermometer freely exposed to the air, but shielded from radiation and moisture. (https://en.wikipedia.org/wiki/Dry-bulb_temperature)",
        "The temperature of air measured by a thermometer freely exposed to the air, but shielded from radiation and moisture. (https://en.wikipedia.org/wiki/Dry-bulb_temperature)"@en ;
    skos:narrower brick:Differential_Dry_Bulb_Temperature .

brick:Dynamic_Pressure a brick:Quantity ;
    rdfs:label "Dynamic Pressure" ;
    skos:broader brick:Pressure .

brick:Electric_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Power Sensor" ;
    rdfs:subClassOf brick:Power_Sensor ;
    skos:definition "Measures the amount of instantaneous electric power consumed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Electric_Power .

brick:Emergency_Power_Off_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System .

brick:Energy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures energy consumption"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Energy .

brick:Energy_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy System" ;
    rdfs:subClassOf brick:Electrical_System ;
    skos:definition "A collection of devices that generates, stores or transports electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:System .

brick:Entering_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Water .

brick:Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within exhaust regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Failure Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarms that indicate the failure of devices, equipment, systems and control loops"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point .

brick:Fault_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fault Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the presence of a fault in a device, system or control loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fault,
        tag:Point,
        tag:Status .

brick:Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Flow Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow .

brick:Formaldehyde_Concentration a brick:Quantity ;
    rdfs:label "FormaldehydeConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of formaldehyde in a medium" .

brick:Frequency_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frequency Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the frequency of a device's operation (e.g. rotational frequency)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Frequency,
        tag:Point ;
    brick:hasQuantity brick:Frequency .

brick:Fresh_Air_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fresh Air Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Fresh_Air_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fresh,
        tag:Limit,
        tag:Point,
        tag:Setpoint .

brick:Frost a brick:Substance ;
    rdfs:label "Frost" ;
    skos:broader brick:Solid ;
    skos:definition "frost formed on the cold surface (tubes, plates) of a cooling coil."@en .

brick:HVAC_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "a space or group of spaces, within a building with heating, cooling, and ventilating requirements, that are sufficiently similar so that desired conditions (e.g., temperature) can be maintained throughout using a single sensor (e.g., thermostat or temperature sensor)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:HVAC,
        tag:Location,
        tag:Zone .

brick:Hail a brick:Substance ;
    rdfs:label "Hail" ;
    skos:broader brick:Solid ;
    skos:definition "pellets of frozen rain which fall in showers from cumulonimbus clouds."@en .

brick:Heat_Exchanger_Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ice ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tank ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ice,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Tank,
        tag:Temperature,
        tag:Water .

brick:Heating_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Coil" ;
    rdfs:subClassOf brick:Coil ;
    skos:definition "A heating element typically made of pipe, tube or wire that emits heat. Typically filled with hot water, or, in the case of wire, uses electricity."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Heat .

brick:Heating_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of heating to be delivered (typically as a proportion of total heating output)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Heat,
        tag:Point .

brick:Heating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates whether a system, device or control loop is in a heating mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Mode,
        tag:Point,
        tag:Status .

brick:Heating_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Heating_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Hot_Water_Discharge_Temperature_Sensor a owl:Class ;
    rdfs:label "Hot Water Discharge Temperature Sensor" ;
    rdfs:subClassOf brick:Discharge_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water_Temperature_Sensor .

brick:Hot_Water_Return_Temperature_Sensor a owl:Class ;
    rdfs:label "Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Return_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Hot_Water_Temperature_Sensor .

brick:Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Valve" ;
    rdfs:subClassOf brick:Heating_Valve,
        brick:Water_Valve ;
    skos:definition "A valve regulating the flow of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Valve,
        tag:Water .

brick:Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Point .

brick:Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Humidity> ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the concentration of water vapor in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Humidity .

brick:ICT_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "ICT Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Information and Communications Technology (ICT) equipment operates with a processor to process data or logic and create digital signals."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:ICT ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:ICT .

brick:Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Imbalance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "A sensor which measures difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Imbalance,
        tag:Point,
        tag:Sensor .

brick:Integral_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Integral Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:Intercom_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intercom Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Intercom,
        tag:Security .

brick:Interface a owl:Class,
        sh:NodeShape ;
    rdfs:label "Interface" ;
    rdfs:subClassOf brick:Lighting_Equipment ;
    skos:definition "A device that provides an occupant control over a lighting system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface .

brick:Leaving_Chilled_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Chilled Water Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Leaving_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of chilled leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Chilled_Water .

brick:Leaving_Chilled_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Chilled Water Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water that is supplied from a chiller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Leaving_Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint,
        brick:Leaving_Water_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for leaving chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Flow_Sensor,
        brick:Leaving_Water_Flow_Sensor ;
    skos:definition "Measures the flow of the leaving condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Condenser_Water .

brick:Leaving_Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the leaving condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Condenser_Water .

brick:Leaving_Condenser_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Setpoint ;
    skos:definition "The temperature setpoint for the leaving condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_Domestic_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Domestic Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Sensor,
        brick:Leaving_Hot_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of domestic water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Leaving_Domestic_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Domestic Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Setpoint,
        brick:Leaving_Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of leavinging part of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_High_Temperature_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving High Temperature Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of high-temperature hot water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Leaving_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint,
        brick:Leaving_Water_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for leaving hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Leaving_Medium_Temperature_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Medium Temperature Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Leaving_Hot_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of medium-temperature hot water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Medium,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Lighting a owl:Class ;
    rdfs:label "Lighting" ;
    rdfs:subClassOf brick:Lighting_Equipment .

brick:Linear_Speed a brick:Quantity ;
    rdfs:label "Linear_Speed" ;
    qudt:applicableUnit unit:FT-PER-HR,
        unit:FT-PER-SEC,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-SEC,
        unit:MI-PER-HR,
        unit:MI-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Speed,
        brick:Speed ;
    skos:definition "Speed in one dimension (linear)" .

brick:Load_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Parameter,
        tag:Point .

brick:Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lobby" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space just after the entrance to a building or other space of a building, where visitors can wait"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Lobby,
        tag:Location,
        tag:Space .

brick:Low_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the air flow is lower than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Low,
        tag:Point .

brick:Manual_Fire_Alarm_Activation_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Manual Fire Alarm Activation Equipment" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Manual_fire_alarm_activation> ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "A device for manually activating fire alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Activation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Activation,
        tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Safety .

brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Max_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Measurable a owl:Class ;
    rdfs:label "Measurable" ;
    rdfs:subClassOf brick:Class,
        brick:Entity .

brick:Methane_Concentration a brick:Quantity ;
    rdfs:label "MethaneConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of methane in a medium" .

brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Min_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Motor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=motor> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A machine in which power is applied to do work by the conversion of various forms of energy into mechanical force and motion."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Motor .

brick:NO2_Concentration a brick:Quantity ;
    rdfs:label "PM10Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of nitrogen dioxide in a medium" .

brick:Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Boiler" ;
    rdfs:subClassOf brick:Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment,
        tag:Gas,
        tag:Natural .

brick:Occupancy_Count a brick:Quantity ;
    rdfs:label "Occupancy_Count" ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless,
        brick:Occupancy ;
    skos:definition "Number of people in an area",
        "Number of people in an area"@en .

brick:Occupied_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates if a system, device or control loop is in \"Occupied\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Occupied,
        tag:Point,
        tag:Status .

brick:Occupied_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Oil a brick:Substance ;
    rdfs:label "Oil" ;
    skos:broader brick:Liquid ;
    skos:definition "a viscous liquid derived from petroleum, especially for use as a fuel or lubricant."@en ;
    skos:narrower brick:Fuel_Oil .

brick:On_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a control loop, relay or equipment is on"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Point,
        tag:Status .

brick:Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Lockout_Temperature_Differential_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Lockout,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Overridden_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if the expected operating status of an equipment or control loop has been overridden"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Overridden,
        tag:Point,
        tag:Status .

brick:Ozone_Concentration a brick:Quantity ;
    rdfs:label "OzoneConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of ozone in a medium" .

brick:PM10_Concentration a brick:Quantity ;
    rdfs:label "PM10Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 10 microns or less in air" .

brick:PM1_Concentration a brick:Quantity ;
    rdfs:label "PM1Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 1 microns or less in air" .

brick:PM2.5_Concentration a brick:Quantity ;
    rdfs:label "PM2.5Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 2.5 microns or less in air" .

brick:PV_Array a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Array" ;
    rdfs:subClassOf brick:Collection ;
    owl:equivalentClass brick:Photovoltaic_Array ;
    sh:property [ sh:or ( [ sh:class brick:PV_Panel ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Array ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Array,
        tag:Collection,
        tag:PV .

brick:Peak_Power a brick:Quantity ;
    rdfs:label "PeakPower" ;
    qudt:applicableUnit unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Power,
        brick:Power ;
    skos:definition "Tracks the highest (peak) observed power in some interval",
        "Tracks the highest (peak) observed power in some interval"@en .

brick:Phasor a brick:Quantity ;
    rdfs:label "Phasor" ;
    skos:related brick:Phasor_Angle,
        brick:Phasor_Magnitude .

brick:Position_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the position of some object"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Position ;
    brick:hasQuantity brick:Position .

brick:Position_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Point,
        tag:Position .

brick:Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of instantaneous power consumed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Power .

brick:Precipitation a brick:Quantity ;
    rdfs:label "Precipitation" ;
    qudt:applicableUnit unit:CentiM,
        unit:DeciM,
        unit:FT,
        unit:IN,
        unit:KiloM,
        unit:M,
        unit:MicroM,
        unit:MilliM,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Length,
        brick:Level ;
    skos:definition "Amount of atmospheric water vapor fallen including rain, sleet, snow, and hail (https://project-haystack.dev/doc/lib-phScience/precipitation)",
        "Amount of atmospheric water vapor fallen including rain, sleet, snow, and hail (https://project-haystack.dev/doc/lib-phScience/precipitation)"@en .

brick:Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Pressure .

brick:Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Pressure .

brick:Proportional_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Proportional Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Radon_Concentration a brick:Quantity ;
    rdfs:label "RadonConcentration" ;
    qudt:applicableUnit unit:BQ-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:ActivityConcentration,
        brick:Radioactivity_Concentration ;
    skos:definition "The concentration of radioactivity due to Radon in a medium" .

brick:Reactive_Energy a brick:Quantity ;
    rdfs:label "Reactive_Energy" ;
    qudt:applicableUnit unit:KiloV-A_Reactive-HR,
        unit:MegaV-A_Reactive-HR,
        unit:V-A_Reactive-HR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Electric_Energy ;
    skos:definition "The integral of the reactive power over a time interval" .

brick:Reactive_Power a brick:Quantity ;
    rdfs:label "Reactive Power" ;
    qudt:applicableUnit unit:KiloV-A_Reactive,
        unit:MegaV-A_Reactive,
        unit:V-A_Reactive ;
    skos:broader brick:Electric_Power ;
    skos:definition "Reactive Power}, for a linear two-terminal element or two-terminal circuit, under sinusoidal conditions, is the quantity equal to the product of the apparent power (S) and the sine of the displacement angle (\\psi). The absolute value of the reactive power is equal to the non-active power. The ISO (and SI) unit for reactive power is the voltampere. The special name var and symbol \\textit{var are given in IEC 60027 1."@en ;
    brick:hasQUDTReference quantitykind:ReactivePower .

brick:Real_Power a brick:Quantity ;
    rdfs:label "Real Power" ;
    qudt:applicableUnit unit:GigaW,
        unit:KiloW,
        unit:MegaW,
        unit:MicroW,
        unit:MilliW,
        unit:NanoW,
        unit:PicoW,
        unit:TeraW,
        unit:W ;
    owl:sameAs brick:Active_Power ;
    skos:broader brick:Electric_Power ;
    skos:definition "(Active Power) is, under periodic conditions, the mean value, taken over one period (T), of the instantaneous power (p). In complex notation, (P = Re \\; S), where (S) is (complex power)\"."@en ;
    brick:hasQUDTReference quantitykind:ActivePower .

brick:Refrigerant a brick:Substance ;
    rdfs:label "Refrigerant" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Refrigerant> ;
    skos:broader brick:Fluid ;
    skos:definition "A refrigerant is a working fluid used in the refrigeration cycle of air conditioning systems and heat pumps where in most cases they undergo a repeated phase transition from a liquid to a gas and back again."@en .

brick:Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of return air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:Return_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Return Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Water_Temperature_Sensor .

brick:Shading_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shading Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Shade .

brick:Site a owl:Class,
        sh:NodeShape ;
    rdfs:label "Site" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A geographic region containing 0 or more buildings. Typically used as the encapsulating location for a collection of Brick entities through the hasPart/isPartOf relationships"@en ;
    sh:property [ sh:or ( [ sh:class brick:Building ] [ sh:class brick:Region ] [ sh:class brick:Site ] [ sh:class brick:Space ] [ sh:class brick:Room ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Site ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Site .

brick:Smoke_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Detection Alarm" ;
    rdfs:subClassOf brick:Smoke_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Detection,
        tag:Point,
        tag:Smoke .

brick:Soil a brick:Substance ;
    rdfs:label "Soil" ;
    skos:broader brick:Solid .

brick:Solar_Radiance a brick:Quantity ;
    rdfs:label "Solar_Radiance" ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Radiance,
        brick:Radiance ;
    skos:definition "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction",
        "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction"@en .

brick:Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Speed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the operating speed of a device or equipment, e.g. fan"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Speed,
        tag:Status .

brick:Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint,
        brick:Static_Pressure_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure .

brick:Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Time .

brick:Storage_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Storage Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used for storage"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Storage .

brick:Supply_Air_Flow_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply .

brick:Supply_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of supply air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint_Limit ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter limiting a Supply_Air_Temperature_Setpoint"@en,
        "A parameter that places a lower or upper bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables operation of a system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:System .

brick:TVOC_Concentration a brick:Quantity ;
    rdfs:label "TVOCConcentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of total volatile organic compounds in air" .

brick:Temperature_Differential_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Differential Reset Setpoint" ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature .

brick:Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Time Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Time .

brick:Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Time Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Time ;
    brick:hasQuantity brick:Time .

brick:Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tolerance Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "difference between upper and lower limits of size for a given nominal dimension or value."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Tolerance .

brick:Unoccupied_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Point,
        tag:Status,
        tag:Unoccupied .

brick:Unoccupied_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Unoccupied_Discharge_Air_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Variable_Air_Volume_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Air Volume Box" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Variable_air_volume> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:VAV ;
    skos:definition "A device that regulates the volume and temperature of air delivered to a zone by opening or closing a damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Equipment,
        tag:Variable,
        tag:Volume .

brick:Voltage_Imbalance a brick:Quantity ;
    rdfs:label "VoltageImbalance" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The percent deviation from average voltage",
        "The percent deviation from average voltage"@en ;
    skos:related brick:Voltage .

brick:Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Water .

brick:Water_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Heater" ;
    rdfs:seeAlso <https://www.merriam-webster.com/dictionary/waterheater> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "An apparatus for heating and usually storing hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heater,
        tag:Water .

brick:Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Level Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the height/level of water in some container"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Water .

brick:Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm,
        brick:Water_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Temperature,
        tag:Water .

brick:Wind_Direction a brick:Quantity ;
    rdfs:label "Wind_Direction" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Direction ;
    skos:definition "Direction of wind relative to North",
        "Direction of wind relative to North"@en .

brick:deprecatedInVersion a owl:DatatypeProperty .

brick:deprecationMitigationMessage a owl:DatatypeProperty .

brick:hasAssociatedTag a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has associated tag" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isAssociatedWith ;
    skos:definition "The class is associated with the given tag"@en .

brick:hasPoint a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has point" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isPointOf ;
    skos:definition "The subject has a source of telemetry identified by the object. In some systems the source of telemetry may be represented as a digital/analog input/output point"@en .

brick:hasQuantity a owl:AsymmetricProperty,
        owl:IrreflexiveProperty ;
    rdfs:label "Has QUDT reference" ;
    rdfs:subPropertyOf qudt:hasQuantityKind,
        brick:Relationship .

brick:hasSubMeter a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "has sub-meter" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isSubMeterOf ;
    skos:definition "Indicates a submeter of this meter"@en .

brick:hasSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty ;
    rdfs:label "Has QUDT reference" ;
    rdfs:subPropertyOf brick:Relationship .

brick:isAssociatedWith a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is associated with" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:hasAssociatedTag ;
    skos:definition "The tag is associated with the given class"@en .

brick:isLocationOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is location of" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:hasLocation ;
    skos:definition "Subject is the physical location encapsulating the object"@en .

brick:isSubMeterOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "is sub-meter of" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:hasSubMeter ;
    skos:definition "Indicates the parent for which this meter is a submeter"@en .

brick:isTagOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is tag of" ;
    rdfs:subPropertyOf brick:Relationship .

brick:latitude a owl:DatatypeProperty,
        owl:ObjectProperty ;
    rdfs:label "Latitude" ;
    rdfs:subPropertyOf sdo:latitude,
        brick:Relationship .

brick:longitude a owl:DatatypeProperty,
        owl:ObjectProperty ;
    rdfs:label "Longitude" ;
    rdfs:subPropertyOf sdo:longitude,
        brick:Relationship .

brick:thermalTransmittance a brick:EntityProperty ;
    rdfs:label "Thermal transmittance" ;
    rdfs:seeAlso "https://www.iso.org/obp/ui/#iso:std:iso:13789:ed-3:v1:en" ;
    skos:definition "The area-weighted average heat transfer coefficient (commonly referred to as a U-value)" .

brick:timestamp a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "Timestamp" ;
    rdfs:subPropertyOf brick:Relationship .

ref:BACnetReference a owl:Class,
        sh:NodeShape ;
    rdfs:subClassOf ref:ExternalReference ;
    skos:definition "A reference to the BACnet object represented by this entity." ;
    sh:or ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:path bacnet:object-type ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:path bacnet:description ],
                    [ a sh:PropertyShape ;
                        sh:class bacnet:EngineeringUnitsEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 0 ;
                        sh:path bacnet:units ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:minLength 1 ;
                        sh:path bacnet:object-name ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-identifier ],
                    [ a sh:PropertyShape ;
                        sh:datatype bacnet:Property ;
                        sh:defaultValue bacnet:Present_Value ;
                        sh:path ref:read-property ] ] [ sh:property [ a sh:PropertyShape ;
                        skos:definition "Clause Q.8 BACnet URI scheme: bacnet:// <device> / <object> [ / <property> [ / <index> ]]" ;
                        sh:datatype xsd:string ;
                        sh:path ref:BACnetURI ] ] ) ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDevice ;
            sh:minCount 1 ;
            sh:path bacnet:objectOf ] .

ref:IFCReference a owl:Class,
        sh:NodeShape ;
    rdfs:subClassOf ref:ExternalReference ;
    skos:definition "A reference to an entity in an IFC project which may contain additional metadata about this entity." ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "Name of the entity in IFC" ;
            sh:datatype xsd:string ;
            sh:path ref:ifcName ],
        [ a sh:PropertyShape ;
            skos:definition "The global ID of the entity in the IFC project" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path ref:ifcGlobalID ],
        [ a sh:PropertyShape ;
            skos:definition "Reference to an IFC Project object, containing the project ID" ;
            sh:class ref:ifcProject ;
            sh:minCount 1 ;
            sh:path ref:hasIfcProjectReference ] .

bsh:StageShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( 1 2 3 4 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ] .

bsh:ThermalTransmittanceShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:BTU_IT unit:W-PER-M2-K ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:hasPointShape a sh:PropertyShape ;
    sh:class brick:Point ;
    sh:path brick:hasPoint .

bsh:hasSubstanceShape a sh:PropertyShape ;
    sh:class brick:Substance ;
    sh:path brick:hasSubstance .

bsh:hascoordinatesShape a sh:PropertyShape ;
    rdfs:label "has Coordinates property" ;
    sh:node bsh:CoordinateShape ;
    sh:path brick:coordinates .

bsh:haspowerComplexityShape a sh:PropertyShape ;
    rdfs:label "has Power complexity property" ;
    sh:node bsh:PowerComplexityShape ;
    sh:path brick:powerComplexity .

bsh:haspowerFlowShape a sh:PropertyShape ;
    rdfs:label "has Power flow property" ;
    sh:node bsh:PowerFlowShape ;
    sh:path brick:powerFlow .

bsh:hasvolumeShape a sh:PropertyShape ;
    rdfs:label "has Volume property" ;
    sh:node bsh:VolumeShape ;
    sh:path brick:volume .

tag:Ablutions a brick:Tag ;
    rdfs:label "Ablutions" .

tag:Absolute a brick:Tag ;
    rdfs:label "Absolute" .

tag:Absorption a brick:Tag ;
    rdfs:label "Absorption" .

tag:Acceleration a brick:Tag ;
    rdfs:label "Acceleration" .

tag:Activated a brick:Tag ;
    rdfs:label "Activated" .

tag:Activation a brick:Tag ;
    rdfs:label "Activation" .

tag:Active a brick:Tag ;
    rdfs:label "Active" .

tag:Ammonia a brick:Tag ;
    rdfs:label "Ammonia" .

tag:Atrium a brick:Tag ;
    rdfs:label "Atrium" .

tag:Audio a brick:Tag ;
    rdfs:label "Audio" .

tag:Auditorium a brick:Tag ;
    rdfs:label "Auditorium" .

tag:Auto a brick:Tag ;
    rdfs:label "Auto" .

tag:Availability a brick:Tag ;
    rdfs:label "Availability" .

tag:Azimuth a brick:Tag ;
    rdfs:label "Azimuth" .

tag:Basement a brick:Tag ;
    rdfs:label "Basement" .

tag:Bench a brick:Tag ;
    rdfs:label "Bench" .

tag:Booster a brick:Tag ;
    rdfs:label "Booster" .

tag:Booth a brick:Tag ;
    rdfs:label "Booth" .

tag:Break a brick:Tag ;
    rdfs:label "Break" .

tag:Breaker a brick:Tag ;
    rdfs:label "Breaker" .

tag:Breakroom a brick:Tag ;
    rdfs:label "Breakroom" .

tag:Broadcast a brick:Tag ;
    rdfs:label "Broadcast" .

tag:Bus a brick:Tag ;
    rdfs:label "Bus" .

tag:Button a brick:Tag ;
    rdfs:label "Button" .

tag:CAV a brick:Tag ;
    rdfs:label "CAV" .

tag:CRAH a brick:Tag ;
    rdfs:label "CRAH" .

tag:Cafeteria a brick:Tag ;
    rdfs:label "Cafeteria" .

tag:Call a brick:Tag ;
    rdfs:label "Call" .

tag:Capacity a brick:Tag ;
    rdfs:label "Capacity" .

tag:Center a brick:Tag ;
    rdfs:label "Center" .

tag:Centrifugal a brick:Tag ;
    rdfs:label "Centrifugal" .

tag:Change a brick:Tag ;
    rdfs:label "Change" .

tag:Code a brick:Tag ;
    rdfs:label "Code" .

tag:Coldest a brick:Tag ;
    rdfs:label "Coldest" .

tag:Communication a brick:Tag ;
    rdfs:label "Communication" .

tag:Compressor a brick:Tag ;
    rdfs:label "Compressor" .

tag:Concessions a brick:Tag ;
    rdfs:label "Concessions" .

tag:Condensate a brick:Tag ;
    rdfs:label "Condensate" .

tag:Condensing a brick:Tag ;
    rdfs:label "Condensing" .

tag:Conference a brick:Tag ;
    rdfs:label "Conference" .

tag:Constant a brick:Tag ;
    rdfs:label "Constant" .

tag:Contact a brick:Tag ;
    rdfs:label "Contact" .

tag:Cooler a brick:Tag ;
    rdfs:label "Cooler" .

tag:Cooling a brick:Tag ;
    rdfs:label "Cooling" .

tag:Copy a brick:Tag ;
    rdfs:label "Copy" .

tag:Count a brick:Tag ;
    rdfs:label "Count" .

tag:Cubicle a brick:Tag ;
    rdfs:label "Cubicle" .

tag:Curtailment a brick:Tag ;
    rdfs:label "Curtailment" .

tag:Cutout a brick:Tag ;
    rdfs:label "Cutout" .

tag:DDAHU a brick:Tag ;
    rdfs:label "DDAHU" .

tag:DOAS a brick:Tag ;
    rdfs:label "DOAS" .

tag:Dc a brick:Tag ;
    rdfs:label "Dc" .

tag:Deceleration a brick:Tag ;
    rdfs:label "Deceleration" .

tag:Dedicated a brick:Tag ;
    rdfs:label "Dedicated" .

tag:Dehumidification a brick:Tag ;
    rdfs:label "Dehumidification" .

tag:Deionized a brick:Tag ;
    rdfs:label "Deionized" .

tag:Desk a brick:Tag ;
    rdfs:label "Desk" .

tag:Detention a brick:Tag ;
    rdfs:label "Detention" .

tag:Dimmer a brick:Tag ;
    rdfs:label "Dimmer" .

tag:Disconnect a brick:Tag ;
    rdfs:label "Disconnect" .

tag:Displacement a brick:Tag ;
    rdfs:label "Displacement" .

tag:Dock a brick:Tag ;
    rdfs:label "Dock" .

tag:Drench a brick:Tag ;
    rdfs:label "Drench" .

tag:Driver a brick:Tag ;
    rdfs:label "Driver" .

tag:Dry a brick:Tag ;
    rdfs:label "Dry" .

tag:Dual a brick:Tag ;
    rdfs:label "Dual" .

tag:ESS a brick:Tag ;
    rdfs:label "ESS" .

tag:Econcycle a brick:Tag ;
    rdfs:label "Econcycle" .

tag:Employee a brick:Tag ;
    rdfs:label "Employee" .

tag:Environment a brick:Tag ;
    rdfs:label "Environment" .

tag:Evaporative a brick:Tag ;
    rdfs:label "Evaporative" .

tag:Even a brick:Tag ;
    rdfs:label "Even" .

tag:Exercise a brick:Tag ;
    rdfs:label "Exercise" .

tag:Eye a brick:Tag ;
    rdfs:label "Eye" .

tag:FCU a brick:Tag ;
    rdfs:label "FCU" .

tag:Factor a brick:Tag ;
    rdfs:label "Factor" .

tag:Field a brick:Tag ;
    rdfs:label "Field" .

tag:Final a brick:Tag ;
    rdfs:label "Final" .

tag:First a brick:Tag ;
    rdfs:label "First" .

tag:FirstAid a brick:Tag ;
    rdfs:label "FirstAid" .

tag:Fluid a brick:Tag ;
    rdfs:label "Fluid" .

tag:Formaldehyde a brick:Tag ;
    rdfs:label "Formaldehyde" .

tag:Freezer a brick:Tag ;
    rdfs:label "Freezer" .

tag:Frost a brick:Tag ;
    rdfs:label "Frost" .

tag:Gatehouse a brick:Tag ;
    rdfs:label "Gatehouse" .

tag:Glycool a brick:Tag ;
    rdfs:label "Glycool" .

tag:Group a brick:Tag ;
    rdfs:label "Group" .

tag:HX a brick:Tag ;
    rdfs:label "HX" .

tag:Hail a brick:Tag ;
    rdfs:label "Hail" .

tag:Hallway a brick:Tag ;
    rdfs:label "Hallway" .

tag:Handling a brick:Tag ;
    rdfs:label "Handling" .

tag:Hazardous a brick:Tag ;
    rdfs:label "Hazardous" .

tag:Head a brick:Tag ;
    rdfs:label "Head" .

tag:Heat_Sink a brick:Tag ;
    rdfs:label "Heat_Sink" .

tag:Hold a brick:Tag ;
    rdfs:label "Hold" .

tag:Hose a brick:Tag ;
    rdfs:label "Hose" .

tag:Hospitality a brick:Tag ;
    rdfs:label "Hospitality" .

tag:Humidification a brick:Tag ;
    rdfs:label "Humidification" .

tag:Humidify a brick:Tag ;
    rdfs:label "Humidify" .

tag:IDF a brick:Tag ;
    rdfs:label "IDF" .

tag:Induction a brick:Tag ;
    rdfs:label "Induction" .

tag:Information a brick:Tag ;
    rdfs:label "Information" .

tag:Intrusion a brick:Tag ;
    rdfs:label "Intrusion" .

tag:Inverter a brick:Tag ;
    rdfs:label "Inverter" .

tag:Janitor a brick:Tag ;
    rdfs:label "Janitor" .

tag:Jet a brick:Tag ;
    rdfs:label "Jet" .

tag:Kitchen a brick:Tag ;
    rdfs:label "Kitchen" .

tag:Laminar a brick:Tag ;
    rdfs:label "Laminar" .

tag:Last a brick:Tag ;
    rdfs:label "Last" .

tag:Library a brick:Tag ;
    rdfs:label "Library" .

tag:Light a brick:Tag ;
    rdfs:label "Light" .

tag:Loading a brick:Tag ;
    rdfs:label "Loading" .

tag:Locally a brick:Tag ;
    rdfs:label "Locally" .

tag:Lowest a brick:Tag ;
    rdfs:label "Lowest" .

tag:MAU a brick:Tag ;
    rdfs:label "MAU" .

tag:MDF a brick:Tag ;
    rdfs:label "MDF" .

tag:Mail a brick:Tag ;
    rdfs:label "Mail" .

tag:Majlis a brick:Tag ;
    rdfs:label "Majlis" .

tag:Massage a brick:Tag ;
    rdfs:label "Massage" .

tag:Materials a brick:Tag ;
    rdfs:label "Materials" .

tag:Medical a brick:Tag ;
    rdfs:label "Medical" .

tag:Meidcal a brick:Tag ;
    rdfs:label "Meidcal" .

tag:Methane a brick:Tag ;
    rdfs:label "Methane" .

tag:Month a brick:Tag ;
    rdfs:label "Month" .

tag:Motion a brick:Tag ;
    rdfs:label "Motion" .

tag:NO2 a brick:Tag ;
    rdfs:label "NO2" .

tag:Network a brick:Tag ;
    rdfs:label "Network" .

tag:No a brick:Tag ;
    rdfs:label "No" .

tag:Noncondensing a brick:Tag ;
    rdfs:label "Noncondensing" .

tag:Nozzle a brick:Tag ;
    rdfs:label "Nozzle" .

tag:Overload a brick:Tag ;
    rdfs:label "Overload" .

tag:Ozone a brick:Tag ;
    rdfs:label "Ozone" .

tag:PAU a brick:Tag ;
    rdfs:label "PAU" .

tag:PIR a brick:Tag ;
    rdfs:label "PIR" .

tag:Passive a brick:Tag ;
    rdfs:label "Passive" .

tag:Peak a brick:Tag ;
    rdfs:label "Peak" .

tag:Phone a brick:Tag ;
    rdfs:label "Phone" .

tag:Piezoelectric a brick:Tag ;
    rdfs:label "Piezoelectric" .

tag:Play a brick:Tag ;
    rdfs:label "Play" .

tag:PlugStrip a brick:Tag ;
    rdfs:label "PlugStrip" .

tag:Plumbing a brick:Tag ;
    rdfs:label "Plumbing" .

tag:Portfolio a brick:Tag ;
    rdfs:label "Portfolio" .

tag:Prayer a brick:Tag ;
    rdfs:label "Prayer" .

tag:Private a brick:Tag ;
    rdfs:label "Private" .

tag:Production a brick:Tag ;
    rdfs:label "Production" .

tag:Protect a brick:Tag ;
    rdfs:label "Protect" .

tag:Pull a brick:Tag ;
    rdfs:label "Pull" .

tag:Push a brick:Tag ;
    rdfs:label "Push" .

tag:Quality a brick:Tag ;
    rdfs:label "Quality" .

tag:RC a brick:Tag ;
    rdfs:label "RC" .

tag:RTU a brick:Tag ;
    rdfs:label "RTU" .

tag:RVAV a brick:Tag ;
    rdfs:label "RVAV" .

tag:Radiance a brick:Tag ;
    rdfs:label "Radiance" .

tag:Radiation a brick:Tag ;
    rdfs:label "Radiation" .

tag:Radioactivity a brick:Tag ;
    rdfs:label "Radioactivity" .

tag:Radon a brick:Tag ;
    rdfs:label "Radon" .

tag:Rated a brick:Tag ;
    rdfs:label "Rated" .

tag:Reader a brick:Tag ;
    rdfs:label "Reader" .

tag:Ready a brick:Tag ;
    rdfs:label "Ready" .

tag:Real a brick:Tag ;
    rdfs:label "Real" .

tag:Reception a brick:Tag ;
    rdfs:label "Reception" .

tag:Recorder a brick:Tag ;
    rdfs:label "Recorder" .

tag:Recovery a brick:Tag ;
    rdfs:label "Recovery" .

tag:Refrigerant a brick:Tag ;
    rdfs:label "Refrigerant" .

tag:Region a brick:Tag ;
    rdfs:label "Region" .

tag:Remotely a brick:Tag ;
    rdfs:label "Remotely" .

tag:Request a brick:Tag ;
    rdfs:label "Request" .

tag:Required a brick:Tag ;
    rdfs:label "Required" .

tag:Rest a brick:Tag ;
    rdfs:label "Rest" .

tag:Restroom a brick:Tag ;
    rdfs:label "Restroom" .

tag:Retail a brick:Tag ;
    rdfs:label "Retail" .

tag:Sash a brick:Tag ;
    rdfs:label "Sash" .

tag:Schedule a brick:Tag ;
    rdfs:label "Schedule" .

tag:Seismic a brick:Tag ;
    rdfs:label "Seismic" .

tag:Server a brick:Tag ;
    rdfs:label "Server" .

tag:Shaft a brick:Tag ;
    rdfs:label "Shaft" .

tag:Shared a brick:Tag ;
    rdfs:label "Shared" .

tag:Short a brick:Tag ;
    rdfs:label "Short" .

tag:Shutdown a brick:Tag ;
    rdfs:label "Shutdown" .

tag:Shutoff a brick:Tag ;
    rdfs:label "Shutoff" .

tag:Site a brick:Tag ;
    rdfs:label "Site" .

tag:Soil a brick:Tag ;
    rdfs:label "Soil" .

tag:Sports a brick:Tag ;
    rdfs:label "Sports" .

tag:Stages a brick:Tag ;
    rdfs:label "Stages" .

tag:Staircase a brick:Tag ;
    rdfs:label "Staircase" .

tag:Storey a brick:Tag ;
    rdfs:label "Storey" .

tag:Structure a brick:Tag ;
    rdfs:label "Structure" .

tag:Studio a brick:Tag ;
    rdfs:label "Studio" .

tag:Suction a brick:Tag ;
    rdfs:label "Suction" .

tag:Switchgear a brick:Tag ;
    rdfs:label "Switchgear" .

tag:TABS a brick:Tag ;
    rdfs:label "TABS" .

tag:TETRA a brick:Tag ;
    rdfs:label "TETRA" .

tag:Team a brick:Tag ;
    rdfs:label "Team" .

tag:Temporary a brick:Tag ;
    rdfs:label "Temporary" .

tag:Terminal a brick:Tag ;
    rdfs:label "Terminal" .

tag:Thermally a brick:Tag ;
    rdfs:label "Thermally" .

tag:Ticketing a brick:Tag ;
    rdfs:label "Ticketing" .

tag:Timer a brick:Tag ;
    rdfs:label "Timer" .

tag:Touchpanel a brick:Tag ;
    rdfs:label "Touchpanel" .

tag:Trace a brick:Tag ;
    rdfs:label "Trace" .

tag:Transfer a brick:Tag ;
    rdfs:label "Transfer" .

tag:Tunnel a brick:Tag ;
    rdfs:label "Tunnel" .

tag:VAV a brick:Tag ;
    rdfs:label "VAV" .

tag:Vent a brick:Tag ;
    rdfs:label "Vent" .

tag:Visitor a brick:Tag ;
    rdfs:label "Visitor" .

tag:Visual a brick:Tag ;
    rdfs:label "Visual" .

tag:Wardrobe a brick:Tag ;
    rdfs:label "Wardrobe" .

tag:Warm a brick:Tag ;
    rdfs:label "Warm" .

tag:Warmest a brick:Tag ;
    rdfs:label "Warmest" .

tag:Waste a brick:Tag ;
    rdfs:label "Waste" .

tag:Weather a brick:Tag ;
    rdfs:label "Weather" .

tag:Window a brick:Tag ;
    rdfs:label "Window" .

tag:Wing a brick:Tag ;
    rdfs:label "Wing" .

tag:Workshop a brick:Tag ;
    rdfs:label "Workshop" .

tag:Zenith a brick:Tag ;
    rdfs:label "Zenith" .

qudt:Aspect a qudt:AspectClass ;
    rdfs:label "QUDT Aspect" ;
    rdfs:comment "An aspect is an abstract type class that defines properties that can be reused."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf owl:Thing .

qudt:AspectClass a owl:Class ;
    rdfs:label "Aspect Class" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Class .

qudt:FloatingPointEncodingType a owl:Class ;
    rdfs:label "Floating Point Encoding" ;
    dcterms:description "A \"Encoding\" with the following instance(s): \"Double Precision Encoding\", \"Single Precision Real Encoding\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding ;
    owl:oneOf ( qudt:DoublePrecisionEncoding qudt:IEEE754_1985RealEncoding qudt:SinglePrecisionRealEncoding ) .

qudt:IntervalScale a owl:Class ;
    rdfs:label "Interval scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment """<p>The interval type allows for the degree of difference between items, but not the ratio between them. Examples include temperature with the Celsius scale, which has two defined points (the freezing and boiling point of water at specific conditions) and then separated into 100 intervals, date when measured from an arbitrary epoch (such as AD), percentage such as a percentage return on a stock,[16] location in Cartesian coordinates, and direction measured in degrees from true or magnetic north. Ratios are not meaningful since 20 °C cannot be said to be &quot;twice as hot&quot; as 10 °C, nor can multiplication/division be carried out between any two dates directly. However, ratios of differences can be expressed; for example, one difference can be twice another. Interval type variables are sometimes also called &quot;scaled variables&quot;, but the formal mathematical term is an affine space (in this case an affine line).</p>
<p>Characteristics: median, percentile &amp; Monotonic increasing (order (&lt;) &amp; totally ordered set</p>"""^^rdf:HTML,
        "median, percentile &amp; Monotonic increasing (order (&lt;)) &amp; totally ordered set"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:NominalScale,
        qudt:OrdinalScale,
        qudt:RatioScale ;
    rdfs:subClassOf qudt:Scale .

qudt:NominalScale a owl:Class ;
    rdfs:label "Nominal scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "A nominal scale differentiates between items or subjects based only on their names or (meta-)categories and other qualitative classifications they belong to; thus dichotomous data involves the construction of classifications as well as the classification of items. Discovery of an exception to a classification can be viewed as progress. Numbers may be used to represent the variables but the numbers do not have numerical value or relationship: For example, a Globally unique identifier. Examples of these classifications include gender, nationality, ethnicity, language, genre, style, biological species, and form. In a university one could also use hall of affiliation as an example."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:OrdinalScale,
        qudt:RatioScale ;
    rdfs:subClassOf qudt:Scale .

qudt:OrdinalScale a owl:Class ;
    rdfs:label "Ordinal scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "The ordinal type allows for rank order (1st, 2nd, 3rd, etc.) by which data can be sorted, but still does not allow for relative degree of difference between them. Examples include, on one hand, dichotomous data with dichotomous (or dichotomized) values such as 'sick' vs. 'healthy' when measuring health, 'guilty' vs. 'innocent' when making judgments in courts, 'wrong/false' vs. 'right/true' when measuring truth value, and, on the other hand, non-dichotomous data consisting of a spectrum of values, such as 'completely agree', 'mostly agree', 'mostly disagree', 'completely disagree' when measuring opinion."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:NominalScale,
        qudt:RatioScale ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:order ],
        qudt:Scale .

qudt:Prefix a owl:Class ;
    rdfs:label "Prefix" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:UCUMcs-term ;
            owl:onProperty qudt:ucumCode ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:prefixMultiplier ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexSymbol ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:symbol ],
        qudt:Concept,
        qudt:Verifiable .

qudt:QuantityValue a owl:Class ;
    rdfs:label "Quantity value" ;
    rdfs:comment "A <i>Quantity Value</i> expresses the magnitude and kind of a quantity and is given by the product of a numerical value <code>n</code> and a unit of measure <code>U</code>. The number multiplying the unit is referred to as the numerical value of the quantity expressed in that unit. Refer to <a href=\"http://physics.nist.gov/Pubs/SP811/sec07.html\">NIST SP 811 section 7</a> for more on quantity values."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:unit ],
        qudt:Concept,
        qudt:Quantifiable .

qudt:RatioScale a owl:Class ;
    rdfs:label "Ratio scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "The ratio type takes its name from the fact that measurement is the estimation of the ratio between a magnitude of a continuous quantity and a unit magnitude of the same kind (Michell, 1997, 1999). A ratio scale possesses a meaningful (unique and non-arbitrary) zero value. Most measurement in the physical sciences and engineering is done on ratio scales. Examples include mass, length, duration, plane angle, energy and electric charge. In contrast to interval scales, ratios are now meaningful because having a non-arbitrary zero point makes it meaningful to say, for example, that one object has &quot;twice the length&quot; of another (= is &quot;twice as long&quot;). Very informally, many ratio scales can be described as specifying &quot;how much&quot; of something (i.e. an amount or magnitude) or &quot;how many&quot; (a count). The Kelvin temperature scale is a ratio scale because it has a unique, non-arbitrary zero point called absolute zero."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:NominalScale,
        qudt:OrdinalScale ;
    rdfs:subClassOf qudt:Scale .

qudt:StringEncodingType a owl:Class ;
    rdfs:label "String Encoding Type" ;
    dcterms:description "A \"Encoding\" with the following instance(s): \"UTF-16 String\", \"UTF-8 Encoding\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:abbreviation a owl:DatatypeProperty ;
    rdfs:label "abbreviation" ;
    dcterms:description "An abbreviation for a unit is a short ASCII string that is used in place of the full name for the unit in contexts where non-ASCII characters would be problematic, or where using the abbreviation will enhance readability. When a power of abase unit needs to be expressed, such as squares this can be done using abbreviations rather than symbols. For example, <em>sq ft</em> means <em>square foot</em>, and <em>cu ft</em> means <em>cubic foot</em>."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string .

qudt:derivedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the system of units in which it is defined as a derived unit. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isUnitOfSystem ;
    owl:inverseOf qudt:hasDerivedUnit .

qudt:generalization a owl:ObjectProperty ;
    rdfs:label "generalization" ;
    dcterms:description """This property relates a quantity kind to its generalization. A quantity kind, PARENT, is a generalization of the quantity kind CHILD only if:

1. PARENT and CHILD have the same dimensions in every system of quantities;
2. Every unit that is a measure of quantities of kind CHILD is also a valid measure of quantities of kind PARENT."""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:specialization .

qudt:hasBaseQuantityKind a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "has base quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasQuantityKind ;
    owl:inverseOf qudt:isBaseQuantityKindOfSystem .

qudt:hasDimensionVector a owl:ObjectProperty ;
    rdfs:label "has dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector .

qudt:mathMLdefinition a owl:DatatypeProperty ;
    rdfs:label "mathML definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf qudt:mathDefinition .

qudt:normativeReference a owl:DatatypeProperty ;
    rdfs:label "normative reference" ;
    dcterms:description "Provides a way to reference information that is an authorative source providing a standard definition"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range xsd:anyURI .

qudt:qkdvDenominator a owl:ObjectProperty ;
    rdfs:label "denominator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector .

qudt:qkdvNumerator a owl:ObjectProperty ;
    rdfs:label "numerator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKindDimensionVector .

quantitykind:AngularFrequency a qudt:QuantityKind ;
    rdfs:label "Angular Frequency"@en ;
    dcterms:description "\"Angular frequency\", symbol \\(\\omega\\) (also referred to by the terms angular speed, radial frequency, circular frequency, orbital frequency, radian frequency, and pulsatance) is a scalar measure of rotation rate. Angular frequency (or angular speed) is the magnitude of the vector quantity angular velocity."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_frequency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_frequency"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega = 2\\pi f\\), where \\(f\\) is frequency."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularVelocity .

quantitykind:ApparentPower a qudt:QuantityKind ;
    rdfs:label "Apparent Power"@en ;
    dcterms:description "\"Apparent Power\" is the product of the rms voltage \\(U\\) between the terminals of a two-terminal element or two-terminal circuit and the rms electric current I in the element or circuit. Under sinusoidal conditions, the apparent power is the modulus of the complex power."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-41"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\left | \\underline{S} \\right | =  UI\\), where \\(U\\) is rms value of voltage and \\(I\\) is rms value of electric current."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\left | \\underline{S} \\right |\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent,
        quantitykind:Voltage ;
    skos:broader quantitykind:ComplexPower .

quantitykind:AreaPerTime a qudt:QuantityKind ;
    rdfs:label "Area per Time"@en ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:baseImperialUnitDimensions "\\(ft^2/s\\)"^^qudt:LatexString ;
    qudt:baseSIUnitDimensions "\\(m^2/s\\)"^^qudt:LatexString ;
    qudt:baseUSCustomaryUnitDimensions "\\(L^2/T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Conductivity a qudt:QuantityKind ;
    rdfs:label "Conductivity"@en ;
    qudt:applicableUnit unit:DeciS-PER-M,
        unit:KiloS-PER-M,
        unit:MegaS-PER-M,
        unit:MicroS-PER-CentiM,
        unit:MicroS-PER-M,
        unit:MilliS-PER-CentiM,
        unit:MilliS-PER-M,
        unit:NanoS-PER-CentiM,
        unit:NanoS-PER-M,
        unit:PicoS-PER-M,
        unit:S-PER-CentiM,
        unit:S-PER-M ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-03"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{J} = \\sigma \\mathbf{E}\\), where \\(\\mathbf{J}\\) is electric current density, and \\(\\mathbf{E}\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString,
        "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Conductivity\" is a scalar or tensor quantity the product of which by the electric field strength in a medium is equal to the electric current density. For an isotropic medium the conductivity is a scalar quantity; for an anisotropic medium it is a tensor quantity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentDensity,
        quantitykind:ElectricFieldStrength .

quantitykind:CrossSection a qudt:QuantityKind ;
    rdfs:label "Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Cross-section\" is used to express the likelihood of interaction between particles. For a specified target particle and for a specified reaction or process produced by incident charged or uncharged particles of specified type and energy, it is the mean number of such reactions or processes divided by the incident-particle fluence." ;
    qudt:symbol "σ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:ElectricChargeDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Density"@en ;
    qudt:applicableUnit unit:C-PER-M3,
        unit:MegaC-PER-M3,
        unit:MicroC-PER-M3 ;
    qudt:expression "\\(charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.maxwells-equations.com/pho/charge-density.php"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{dQ}{dV}\\), where \\(Q\\) is electric charge and \\(V\\) is Volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeSurfaceDensity .

quantitykind:ElectricCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Electric Current Density"@en ;
    dcterms:description "\"Electric Current Density\" is a measure of the density of flow of electric charge; it is the electric current per unit area of cross section. Electric current density is a vector-valued quantity. Electric current, \\(I\\), through a surface \\(S\\) is defined as \\(I = \\int_S J \\cdot e_n dA\\), where \\(e_ndA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM2,
        unit:A-PER-M2,
        unit:A-PER-MilliM2,
        unit:A_Ab-PER-CentiM2,
        unit:A_Stat-PER-CentiM2,
        unit:KiloA-PER-M2,
        unit:MegaA-PER-M2,
        unit:PlanckCurrentDensity ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Current_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://maxwells-equations.com/density/current.php"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J = \\rho v\\), where \\(\\rho\\) is electric current density and \\(v\\) is volume."^^qudt:LatexString ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricPower a qudt:QuantityKind ;
    rdfs:label "Electric Power"@en ;
    dcterms:description "\"Electric Power\" is the rate at which electrical energy is transferred by an electric circuit. In the simple case of direct current circuits, electric power can be calculated as the product of the potential difference in the circuit (V) and the amount of current flowing in the circuit (I): \\(P = VI\\), where \\(P\\) is the power, \\(V\\) is the potential difference, and \\(I\\) is the current. However, in general electric power is calculated by taking the integral of the vector cross-product of the electrical and magnetic fields over a specified area."^^qudt:LatexString ;
    qudt:applicableSIUnit unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(p = ui\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:symbol "P_E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:ElectromagneticPermeability a qudt:QuantityKind ;
    rdfs:label "Permeability"@en ;
    dcterms:description "\"Permeability} is the degree of magnetization of a material that responds linearly to an applied magnetic field. In general permeability is a tensor-valued quantity. The definition given applies to an isotropic medium. For an anisotropic medium permeability is a second order tensor. In electromagnetism, permeability is the measure of the ability of a material to support the formation of a magnetic field within itself. In other words, it is the degree of magnetization that a material obtains in response to an applied magnetic field. Magnetic permeability is typically represented by the Greek letter \\(\\mu\\). The term was coined in September, 1885 by Oliver Heaviside. The reciprocal of magnetic permeability is \\textit{Magnetic Reluctivity\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:H-PER-M,
        unit:H_Stat-PER-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permeability"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Permeability ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeability_(electromagnetism)"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{B}{H}\\),  where \\(B\\) is magnetic flux density,  and \\(H\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:ElectromagneticPermeabilityOfVacuum,
        constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity ;
    owl:sameAs quantitykind:Permeability .

quantitykind:GibbsEnergy a qudt:QuantityKind ;
    rdfs:label "Gibbs Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Thermodynamics"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = H - T \\cdot S\\), where \\(H\\) is enthalpy, \\(T\\) is thermodynamic temperature and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gibbs Energy} is one of the potentials are used to measure energy changes in systems as they evolve from an initial state to a final state. The potential used depends on the constraints of the system, such as constant temperature or pressure. \\textit{Internal Energy} is the internal energy of the system, \\textit{Enthalpy} is the internal energy of the system plus the energy related to pressure-volume work, and Helmholtz and Gibbs free energy are the energies available in a system to do useful work when the temperature and volume or the pressure and temperature are fixed, respectively. The name \\textit{Gibbs Free Energy\" is also used." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:HelmholtzEnergy,
        quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:HelmholtzEnergy a qudt:QuantityKind ;
    rdfs:label "Helmholtz Energy"@en ;
    dcterms:description "\\(\\textit{Helmholtz Energy}\\) is one of the potentials are used to measure energy changes in systems as they evolve from an initial state to a final state. The potential used depends on the constraints of the system, such as constant temperature or pressure. \\(\\textit{Internal Energy}\\) is the internal energy of the system, \\(\\textit{Enthalpy}\\) is the internal energy of the system plus the energy related to pressure-volume work, and Helmholtz and Gibbs free energy are the energies available in a system to do useful work when the temperature and volume or the pressure and temperature are fixed, respectively. The name \\(\\textit{Helmholz Free Energy}\\) is also used."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Thermodynamics"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = U - T \\cdot S\\), where \\(U\\) is internal energy, \\(T\\) is thermodynamic temperature and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:GibbsEnergy,
        quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:InstantaneousPower a qudt:QuantityKind ;
    rdfs:label "Instantaneous Power"@en ;
    dcterms:description "\"Instantaneous Power}, for a two-terminal element or a two-terminal circuit with terminals A and B, is the product of the voltage \\(u_{AB}\\) between the terminals and the electric current i in the element or circuit: \\(p = \\)u_{AB} \\cdot i\\(, where \\)u_{AB\" is the line integral of the electric field strength from A to B, and where the electric current in the element or circuit is taken positive if its direction is from A to B and negative in the opposite case.  For an n-terminal circuit, it is the sum of the instantaneous powers relative to the n - 1 pairs of terminals when one of the terminals is chosen as a common terminal for the pairs. For a polyphase element, it is the sum of the instantaneous powers in all phase elements of a polyphase element.  For a polyphase line consisting of m line conductors and one neutral conductor, it is the sum of the m instantaneous powers expressed for each line conductor by the product of the polyphase line-to-neutral voltage and the corresponding line current."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Power"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-30"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-31"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=141-02-14"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=141-03-10"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p = ui\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricPower .

quantitykind:MassRatio a qudt:QuantityKind ;
    rdfs:label "Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In aerospace engineering, mass ratio is a measure of the efficiency of a rocket. It describes how much more massive the vehicle is with propellant than without; that is, it is the ratio of the rocket's wet mass (vehicle plus contents plus propellant) to its dry mass (vehicle plus contents)" ;
    qudt:symbol "R or M_{R}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Molar Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-MOL ;
    qudt:exactMatch quantitykind:MolarAbsorptionCoefficient ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_c = -\\frac{\\mu}{c}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(c\\) is the amount-of-substance concentration."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per amount of substance." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MolarAbsorptionCoefficient ;
    skos:closeMatch quantitykind:MassAttenuationCoefficient .

quantitykind:OrbitalAngularMomentumQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Orbital Angular Momentum Quantum Number"@en ;
    dcterms:description "The \"Principal Quantum Number\" describes the electron shell, or energy level, of an atom. The value of \\(n\\) ranges from 1 to the shell containing the outermost electron of that atom."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(l^2 = \\hbar^2 l(l + 1), l = 0, 1, ..., n - 1\\), where \\(l_i\\) refers to a specific particle \\(i\\)."^^qudt:LatexString ;
    qudt:symbol "l" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:PRODUCT-OF-INERTIA a qudt:QuantityKind ;
    rdfs:label "Product of Inertia"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body?s principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificHeatCapacityAtConstantPressure a qudt:QuantityKind ;
    rdfs:label "Specific heat capacity at constant pressure"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:J-PER-KiloGM-K-PA ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat at a constant pressure." ;
    qudt:symbol "c_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:SpecificHeatCapacityAtConstantVolume a qudt:QuantityKind ;
    rdfs:label "Specific heat capacity at constant volume"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:J-PER-KiloGM-K-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    qudt:symbol "c_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:SpecificHeatCapacityAtSaturation a qudt:QuantityKind ;
    rdfs:label "Specific Heat Capacity at Saturation"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    qudt:symbol "c_{sat}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtConstantVolume .

quantitykind:VehicleVelocity a qudt:QuantityKind ;
    rdfs:label "Vehicle Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:Viscosity a qudt:QuantityKind ;
    rdfs:label "Viscosity"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Viscosity"^^xsd:anyURI ;
    qudt:plainTextDescription "Viscosity is a measure of the resistance of a fluid which is being deformed by either shear stress or extensional stress. In general terms it is the resistance of a liquid to flow, or its \"thickness\". Viscosity describes a fluid's internal resistance to flow and may be thought of as a measure of fluid friction. [Wikipedia]. Please note that the general concept of Viscosity is dimensionally ambiguous and thus is not associated with a DimensionVector. Narrower definitions including DynamicViscosity and KinematicViscosity are preferable." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

brick:Active_Power a brick:Quantity ;
    rdfs:label "Active Power" ;
    qudt:applicableUnit unit:GigaW,
        unit:KiloW,
        unit:MegaW,
        unit:MicroW,
        unit:MilliW,
        unit:NanoW,
        unit:PicoW,
        unit:TeraW,
        unit:W ;
    owl:sameAs brick:Real_Power ;
    skos:broader brick:Electric_Power ;
    skos:definition "(Active Power) is, under periodic conditions, the mean value, taken over one period (T), of the instantaneous power (p). In complex notation, (P = Re \\; S), where (S) is (complex power)\"."@en ;
    brick:hasQUDTReference quantitykind:ActivePower .

brick:Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Diffuser" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device that is a component of the air distribution system that controls the delivery of conditioned and/or ventilating air into a room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment .

brick:Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Alarm ;
    skos:definition "An alarm related to air flow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Point .

brick:Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Plenum" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A component of the HVAC the receives air from the air handling unit or room to distribute or exhaust to or from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum .

brick:Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Alarm,
        brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Temperature .

brick:Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Baseboard Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Steam, hydronic, or electric heating device located at or near the floor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Radiator .

brick:Bypass_Air a brick:Substance ;
    rdfs:label "Bypass Air" ;
    skos:broader brick:Air ;
    skos:definition "air in a bypass duct, used to relieve static pressure"@en .

brick:Bypass_Water a brick:Substance ;
    rdfs:label "Bypass Water" ;
    skos:broader brick:Water ;
    skos:definition "Water that circumvents a piece of equipment or system"@en .

brick:Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chiller" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Refrigerating machine used to transfer heat between fluids. Chillers are either direct expansion with a compressor or absorption type."@en ;
    sh:property bsh:hascoolingCapacityShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chiller,
        tag:Equipment .

brick:Collection_Basin_Water a brick:Substance ;
    rdfs:label "Collection Basin Water" ;
    rdfs:seeAlso <https://www.towercomponentsinc.com/cooling-tower-basics-misc-terms-glossary> ;
    skos:broader brick:Water ;
    skos:definition "Water transiently collected and directed to the sump or pump suction line, typically integral with a cooling tower"@en .

brick:Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint .

brick:Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses the amperes of electrical current passing through the sensor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Electric_Current .

brick:Deionized_Water a brick:Substance ;
    rdfs:label "Deionized Water" ;
    skos:broader brick:Water ;
    skos:definition "Water which has been purified by removing its ions (constituting the majority of non-particulate contaminants)"@en .

brick:Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Demand Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of power consumed by the use of some process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status,
        brick:Pressure_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status .

brick:Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    skos:definition "Sets differential pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Discharge_Air_Flow_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    skos:definition "Setpoints used in Reset strategies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Reset,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of discharge air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Point,
        tag:Temperature .

brick:Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:Discharge_Air_Temperature_Reset_Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Reset Differential Setpoint" ;
    rdfs:subClassOf brick:Temperature_Differential_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Discharge Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Flow_Sensor .

brick:Domestic_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Duration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Duration Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the duration of a phenomenon or event"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Duration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Duration,
        tag:Point,
        tag:Sensor .

brick:Electrical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A class of service rooms that house electrical equipment for a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Emergency_Wash_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Wash Station" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Enclosed_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enclosed Office" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "A space for individuals to work with walls and a door"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Energy a brick:Quantity ;
    rdfs:label "Energy" ;
    skos:narrower brick:Electric_Energy,
        brick:Thermal_Energy .

brick:Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Flow Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the rate of flow of some substance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow .

brick:Fluid a brick:Substance ;
    rdfs:label "Fluid" ;
    skos:definition "substance, as a liquid or gas, that is capable of flowing and that changes shape when acted on by a force."@en ;
    skos:narrower brick:Gas,
        brick:Liquid,
        brick:Refrigerant .

brick:Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gain Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:HVAC_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment,
        brick:Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HVAC,
        tag:Valve .

brick:Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint .

brick:Heating_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that controls air temperature by modulating the amount of hot water flowing through a heating coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Valve .

brick:Heating_Ventilation_Air_Conditioning_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Ventilation Air Conditioning System" ;
    rdfs:subClassOf brick:System ;
    owl:equivalentClass brick:HVAC_System ;
    skos:definition "The equipment, distribution systems and terminals that provide, either collectively or individually, the processes of heating, ventilating or air conditioning to a building or portion of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Conditioning ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Conditioning,
        tag:Heat,
        tag:System,
        tag:Ventilation .

brick:High_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates high temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Point,
        tag:Temperature .

brick:Hot_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Supply_Temperature_Sensor a owl:Class ;
    rdfs:label "Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Hot_Water_Temperature_Sensor .

brick:Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Hot_Water .

brick:Humidity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "Parameters relevant to humidity-related systems and points"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Parameter,
        tag:Point .

brick:Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls load shedding behavior provided by a control system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed .

brick:Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Setpoint,
        tag:Shed .

brick:Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a load shedding policy is in effect"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status .

brick:Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Loop" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A collection of connected equipment; part of a System"@en ;
    sh:property [ sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Point ] [ sh:class brick:Location ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:Loop .

brick:Low_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates low temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Temperature .

brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Media_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces related to the creation of media"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Room,
        tag:Space .

brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mode Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the operating mode of a device or controller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Mode,
        tag:Point .

brick:Occupancy a brick:Quantity ;
    rdfs:label "Occupancy" ;
    skos:narrower brick:Occupancy_Count,
        brick:Occupancy_Percentage .

brick:Occupied_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Off Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a control loop, relay or equipment is off"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:Point,
        tag:Status .

brick:Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Office" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of rooms dedicated for work or study"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Outdoor_Area a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outdoor Area" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A class of spaces that exist outside of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Location,
        tag:Outdoor .

brick:PV_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Panel" ;
    rdfs:seeAlso <https://encyclopedia2.thefreedictionary.com/pv+module> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "An integrated assembly of interconnected photovoltaic cells designed to deliver a selected level of working voltage and current at its output terminals packaged for protection against environment degradation and suited for incorporation in photovoltaic power systems."@en ;
    sh:property bsh:hasmeasuredModuleConversionEfficiencyShape,
        bsh:hasratedModuleConversionEfficiencyShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PV,
        tag:Panel,
        tag:Solar .

brick:Phasor_Angle a brick:Quantity ;
    rdfs:label "PhasorAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:PlaneAngle ;
    skos:definition "Angle component of a phasor" ;
    skos:related brick:Phasor .

brick:Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the current position of a component in terms of a fraction of its full range of motion"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measure the amount of force acting on a unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Pressure .

brick:Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Status" ;
    qudt:hasQuality brick:Pressure ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if pressure is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Status .

brick:Radiant_Panel_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of the radiant panel of the radiant heating and cooling HVAC system."@en ;
    sh:property [ sh:or ( [ sh:class brick:Radiant_Panel ] ) ;
            sh:path brick:isPointOf ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Panel,
        tag:Point,
        tag:Radiant,
        tag:Sensor,
        tag:Temperature .

brick:Radiant_Panel_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Panel,
        tag:Point,
        tag:Radiant,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Radioactivity_Concentration a brick:Quantity ;
    rdfs:label "Radioactivity Concentration" ;
    skos:broader brick:Air_Quality ;
    skos:narrower brick:Radon_Concentration .

brick:Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reset Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that reset a flag, property or value to its default"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Reset .

brick:Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "The target temperature for return air, often used as an approximation of zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Return Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Water_Flow_Sensor .

brick:Return_Water_Temperature_Setpoint a owl:Class ;
    rdfs:label "Return Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Entering_Water_Temperature_Setpoint .

brick:Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of room air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Safety_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety System" ;
    rdfs:subClassOf brick:System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Safety,
        tag:System .

brick:Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces related to the operations of building subsystems, e.g. HVAC, electrical, IT, plumbing, etc"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the magnitude of velocity of some form of movement"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Step Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Step .

brick:Supply_Water_Flow_Sensor a owl:Class ;
    rdfs:label "Supply Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Flow_Sensor .

brick:Time a brick:Quantity ;
    rdfs:label "Time" ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    skos:narrower brick:Acceleration_Time,
        brick:Deceleration_Time ;
    brick:hasQUDTReference quantitykind:Time .

brick:Unoccupied_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:VAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "VAV" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "See Variable_Air_Volume_Box"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:VAV .

brick:Valve_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the openness of a valve (typically as a proportion of its full range of motion)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Valve .

brick:Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures the difference between total pressure and static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure .

brick:Video_Surveillance_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Video Surveillance Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Voltage a brick:Quantity ;
    rdfs:label "Voltage" ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    skos:definition "Voltage, also referred to as Electric Tension, is the difference between electrical potentials of two points. For an electric field within a medium, (U_{ab} = - \\int_{r_a}^{r_b} E . {dr}), where (E) is electric field strength. For an irrotational electric field, the voltage is independent of the path between the two points (a) and (b)."@en ;
    skos:related brick:Voltage_Angle,
        brick:Voltage_Imbalance ;
    brick:hasQUDTReference quantitykind:Voltage .

brick:Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the voltage of an electrical device or object"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Voltage ;
    brick:hasQuantity brick:Voltage .

brick:Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates a high or low water level e.g. in a basin"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Point,
        tag:Water .

brick:Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Loop" ;
    rdfs:subClassOf brick:Loop ;
    skos:definition "A collection of equipment that transport and regulate water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Loop,
        tag:Water .

brick:Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter,
        tag:Water ;
    brick:hasSubstance brick:Water .

brick:Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Pump" ;
    rdfs:subClassOf brick:Pump ;
    skos:definition "A pump that performs work on water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:System,
        tag:Water .

brick:Wet_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Wet_Bulb_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The temperature read by a thermometer covered in water-soaked cloth (wet-bulb thermometer) over which air is passed. A wet-bulb thermometer indicates a temperature close to the true (thermodynamic) wet-bulb temperature. The wet-bulb temperature is the lowest temperature that can be reached under current ambient conditions by the evaporation of water only.  DBT is the temperature that is usually thought of as air temperature, and it is the true thermodynamic temperature. It indicates the amount of heat in the air and is directly proportional to the mean kinetic energy of the air molecule. (https://en.wikipedia.org/wiki/Wet-bulb_temperature)",
        "The temperature read by a thermometer covered in water-soaked cloth (wet-bulb thermometer) over which air is passed. A wet-bulb thermometer indicates a temperature close to the true (thermodynamic) wet-bulb temperature. The wet-bulb temperature is the lowest temperature that can be reached under current ambient conditions by the evaporation of water only.  DBT is the temperature that is usually thought of as air temperature, and it is the true thermodynamic temperature. It indicates the amount of heat in the air and is directly proportional to the mean kinetic energy of the air molecule. (https://en.wikipedia.org/wiki/Wet-bulb_temperature)"@en .

brick:ambientTemperatureOfMeasurement a owl:ObjectProperty .

brick:conversionEfficiency a brick:EntityProperty ;
    rdfs:label "Conversion efficiency" ;
    skos:definition "The percent efficiency of the conversion process (usually to power or energy) carried out by the entity" .

brick:deprecation a brick:EntityProperty ;
    rdfs:label "Deprecation Notice" ;
    skos:definition "Marks a concept as deprecated" .

brick:isFedBy a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is fed by" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:feeds .

brick:isMeteredBy a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "is metered by" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:meters ;
    skos:definition "Indicates the meter measuring the consumption/production of some substance by the subject entity"@en .

brick:isPointOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is point of" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:hasPoint ;
    skos:definition "The subject is a source of telemetry related to the object. In some systems the source of telemetry may be represented as a digital/analog input/output point"@en .

brick:lastKnownValue a brick:EntityProperty ;
    rdfs:label "Last known value" ;
    skos:definition "The last known value of the Point entity" .

brick:ratedCurrentInput a brick:EntityProperty ;
    rdfs:label "Rated current input" ;
    skos:definition "The nominal rated current input of the entity" .

brick:ratedCurrentOutput a brick:EntityProperty ;
    rdfs:label "Rated current output" ;
    skos:definition "The nominal rated current output of the entity" .

brick:ratedVoltageInput a brick:EntityProperty ;
    rdfs:label "Measured voltage input" ;
    skos:definition "The nominal rated voltage input of the entity" .

brick:ratedVoltageOutput a brick:EntityProperty ;
    rdfs:label "Rated voltage output" ;
    skos:definition "The nominal rated voltage output of the entity" .

ref:ExternalReference a owl:Class,
        sh:NodeShape ;
    rdfs:label "External reference" ;
    skos:definition "The parent class of all external reference types" .

ref:TimeseriesReference a owl:Class,
        sh:NodeShape ;
    rdfs:subClassOf ref:ExternalReference ;
    skos:definition "A reference to a stream of timeseries data in a database. Contains the data for this entity" ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The identifier for the timeseries data corresponding to this point" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path ref:hasTimeseriesId ],
        [ a sh:PropertyShape ;
            skos:definition "Refers to a database storing the timeseries data for the related point. Properties on this class are *to be determined*; feel free to add arbitrary properties onto Database instances for your particular deployment" ;
            sh:datatype xsd:string ;
            sh:path ref:storedAt ] .

bsh:EfficiencyShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

bsh:TemperatureShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:DEG_C unit:DEG_F unit:K unit:MilliDEG_C unit:PlanckTemperature unit:DEG_R ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:isMeteredByShape a sh:PropertyShape ;
    sh:class brick:Meter ;
    sh:path brick:isMeteredBy .

qudt:BooleanEncodingType a owl:Class ;
    rdfs:label "Boolean encoding type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding ;
    owl:oneOf ( qudt:BooleanEncoding qudt:BitEncoding qudt:OctetEncoding ) .

qudt:CardinalityType a owl:Class ;
    rdfs:label "Cardinality Type" ;
    dcterms:description "In mathematics, the cardinality of a set is a measure of the number of elements of the set.  For example, the set \\(A = {2, 4, 6}\\) contains 3 elements, and therefore \\(A\\) has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers."^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cardinal_number"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Cardinality"^^xsd:anyURI ;
    qudt:plainTextDescription "In mathematics, the cardinality of a set is a measure of the number of elements of the set.  For example, the set 'A = {2, 4, 6}' contains 3 elements, and therefore 'A' has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:CT_COUNTABLY-INFINITE qudt:CT_FINITE ) .

qudt:Datatype a owl:Class ;
    rdfs:label "QUDT Datatype" ;
    dcterms:description "A data type is a definition of a set of values (for example, \"all integers between 0 and 10\"), and the allowable operations on those values; the meaning of the data; and the way values of that type can be stored. Some types are primitive - built-in to the language, with no visible internal structure - e.g. Boolean; others are composite - constructed from one or more other types (of either kind) - e.g. lists, arrays, structures, unions. Object-oriented programming extends this with classes which encapsulate both the structure of a type and the operations that can be performed on it. Some languages provide strong typing, others allow implicit type conversion and/or explicit type conversion." ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_type"^^xsd:anyURI,
        "http://foldoc.org/data+type"^^xsd:anyURI,
        "http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Data_type.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:CardinalityType ;
            owl:onProperty qudt:cardinality ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Datatype ;
            owl:onProperty qudt:basis ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:OrderedType ;
            owl:onProperty qudt:orderedType ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:ansiSQLName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:basis ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bounded ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:cName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:cardinality ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:id ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:javaName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:jsName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:matlabName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:microsoftSQLServerName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:odbcName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:oleDBName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:oracleSQLName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:orderedType ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:protocolBuffersName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:pythonName ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:vbName ],
        [ a owl:Restriction ;
            owl:onProperty qudt:mySQLName ],
        qudt:Concept .

qudt:DimensionlessUnit a owl:Class ;
    rdfs:label "Dimensionless Unit" ;
    rdfs:comment "A Dimensionless Unit is a quantity for which all the exponents of the factors corresponding to the base quantities in its quantity dimension are zero."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Unit .

qudt:Enumeration a owl:Class ;
    rdfs:label "Enumeration" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Enumeration"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Enumerated_type"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
    rdfs:comment """<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of <em>Scalar Datatype</em>. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:EnumeratedValue ;
            owl:onProperty qudt:default ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:EnumeratedValue ;
            owl:onProperty qudt:element ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:abbreviation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:default ],
        [ a owl:Restriction ;
            owl:minCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:element ],
        qudt:Concept,
        dtype:Enumeration .

qudt:OrderedType a owl:Class ;
    rdfs:label "Ordered type" ;
    dcterms:description "Describes how a data or information structure is ordered." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:Unordered qudt:PartiallyOrdered qudt:TotallyOrdered ) .

qudt:QuantityKindDimensionVector_CGS a owl:Class ;
    rdfs:label "CGS Dimension vector" ;
    rdfs:comment "A <em>CGS Dimension Vector</em> is used to specify the dimensions for a C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:coherentUnitOfSystem a qudt:deprecatedProperty,
        owl:ObjectProperty ;
    rdfs:label "is coherent unit of system" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one. A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. For example, the 'newton' and the 'joule'. These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per second per  second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per second per second, and the work done by 1 dyne acting over 1 centimetre. So \\(1 newton = 10^5\\,dyne\\), \\(1 joule = 10^7\\,erg\\), making each of the four compatible in a decimal sense within its respective other system, but not coherent therein."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:SystemOfUnits ;
    rdfs:subPropertyOf qudt:definedUnitOfSystem ;
    owl:inverseOf qudt:hasCoherentUnit .

qudt:hasCoherentUnit a owl:ObjectProperty ;
    rdfs:label "coherent unit" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit ;
    owl:inverseOf qudt:coherentUnitOfSystem .

qudt:hasDerivedUnit a owl:ObjectProperty ;
    rdfs:label "derived unit" ;
    dcterms:description "This property relates a system of units to a unit of measure that is defined within the system in terms of the base units for the system. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:derivedUnitOfSystem .

qudt:hasUnit a owl:ObjectProperty ;
    rdfs:label "has unit" ;
    dcterms:description "This property relates a system of units with a unit of measure that is either a) defined by the system, or b) accepted for use by the system and is convertible to a unit of equivalent dimension that is defined by the system. Systems of units may distinguish between base and derived units. Base units are the units which measure the base quantities for the corresponding system of quantities. The base units are used to define units for all other quantities as products of powers of the base units. Such units are called derived units for the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:isUnitOfSystem .

qudt:isQuantityKindOf a owl:ObjectProperty ;
    rdfs:label "is quantity kind of" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:hasQuantityKind .

qudt:isUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is unit of system" ;
    dcterms:description "This property relates a unit of measure with a system of units that either a) defines the unit or b) allows the unit to be used within the system."^^rdf:HTML ;
    rdfs:domain qudt:Unit ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:SystemOfUnits ;
    owl:inverseOf qudt:hasUnit .

qudt:latexDefinition a owl:DatatypeProperty ;
    rdfs:label "latex definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:LatexString .

qudt:latexSymbol a owl:DatatypeProperty ;
    rdfs:label "latex symbol" ;
    dcterms:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is \\(ohm\\). This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:LatexString .

qudt:symbol a owl:DatatypeProperty ;
    rdfs:label "symbol" ;
    dcterms:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is \\(ohm\\). This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:literal .

qudt:ucumCode a owl:DatatypeProperty ;
    rdfs:label "ucum code" ;
    dcterms:description "<p><em>ucumCode</em> associates a QUDT unit with its UCUM code (case-sensitive). </p><p>In SHACL the values are derived from specific ucum properties using 'sh:values'.</p>"^^rdf:HTML ;
    dcterms:source "https://ucum.org/ucum.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range [ a owl:Class ;
            owl:unionOf ( qudt:UCUMcs qudt:UCUMcs-term ) ] ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subPropertyOf skos:notation .

qudt:unit a owl:ObjectProperty ;
    rdfs:label "unit" ;
    dcterms:description "A reference to the unit of measure of a quantity (variable or constant) of interest."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit ;
    owl:inverseOf qudt:unitFor .

quantitykind:ActivePower a qudt:QuantityKind ;
    rdfs:label "Active Power"@en ;
    dcterms:description "\\(Active Power\\) is, under periodic conditions, the mean value, taken over one period \\(T\\), of the instantaneous power \\(p\\). In complex notation, \\(P = \\mathbf{Re} \\; \\underline{S}\\), where \\(\\underline{S}\\) is \\(\\textit{complex power}\\)\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:GigaW,
        unit:KiloW,
        unit:MegaW,
        unit:MicroW,
        unit:MilliW,
        unit:NanoW,
        unit:PicoW,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-42"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P = \\frac{1}{T}\\int_{0}^{T} pdt\\), where \\(T\\) is the period and \\(p\\) is instantaneous power."^^qudt:LatexString ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ComplexPower,
        quantitykind:InstantaneousPower ;
    skos:broader quantitykind:ComplexPower .

quantitykind:AngularMomentum a qudt:QuantityKind ;
    rdfs:label "Angular Momentum"@en ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_momentum"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:AngularImpulse ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_momentum"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = I\\omega\\), where \\(I\\) is the moment of inertia, and \\(\\omega\\) is the angular velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Angular Momentum of an object rotating about some reference point is the measure of the extent to which the object will continue to rotate about that point unless acted upon by an external torque. In particular, if a point mass rotates about an axis, then the angular momentum with respect to a point on the axis is related to the mass of the object, the velocity and the distance of the mass to the axis. While the motion associated with linear momentum has no absolute frame of reference, the rotation associated with angular momentum is sometimes spoken of as being measured relative to the fixed stars.  \\textit{Angular Momentum}, \\textit{Moment of Momentum}, or \\textit{Rotational Momentum\", is a vector quantity that represents the product of a body's rotational inertia and rotational velocity about a particular axis." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:AngularImpulse .

quantitykind:CoefficientOfHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Coefficient of heat transfer"@en ;
    qudt:applicableSIUnit unit:W-PER-M2-K ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-PER-HR-FT2-DEG_R,
        unit:BTU_IT-PER-SEC-FT2-DEG_R,
        unit:CAL_IT-PER-SEC-CentiM2-K,
        unit:CAL_TH-PER-SEC-CentiM2-K,
        unit:W-PER-M2-K ;
    qudt:expression "\\(heat-xfer-coeff\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_transfer_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition """"Coefficient of Heat Transfer", in thermodynamics and in mechanical and chemical engineering, is used in calculating the heat transfer, typically by convection or phase transition between a fluid and a solid. The heat transfer coefficient is the proportionality coefficient between the heat flux, that is heat flow per unit area, \\(q/A\\), and the thermodynamic driving force for the flow of heat (that is, the temperature difference, \\( \\bigtriangleup T \\)).  Areic heat flow rate divided by thermodynamic temperature difference. In building technology, the \\(\\textit{Coefficient of Heat Transfer}\\), is often called \\(\\textit{thermal transmittance}\\), with the symbol \\(U\\). \\(\\textit{Coefficient of Heat Transfer}\\), has SI units in watts per squared meter kelvin: \\(W/(m^2 \\cdot K)\\) .

\\(K = \\frac{\\varphi}{T}\\), where \\(\\varphi\\) is areic heat flow rate and \\(T\\) is thermodynamic temperature difference."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Coefficient of Heat Transfer\", in thermodynamics and in mechanical and chemical engineering, is used in calculating the heat transfer, typically by convection or phase transition between a fluid and a solid. The heat transfer coefficient is the proportionality coefficient between the heat flux, that is heat flow per unit area, q/A, and the thermodynamic driving force for the flow of heat (that is, the temperature difference, (Delta T).  Areic heat flow rate divided by thermodynamic temperature difference. In building technology, the \"Coefficient of Heat Transfer\", is often called \"thermal transmittance}\" with the symbol \"U\". It has SI units in watts per squared meter kelvin." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargePerArea a qudt:QuantityKind ;
    rdfs:label "Electric charge per area"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyInternal a qudt:QuantityKind ;
    rdfs:label "Internal Energy"@en ;
    dcterms:description "The internal energy is the total energy contained by a thermodynamic system. It is the energy needed to create the system, but excludes the energy to displace the system's surroundings, any energy associated with a move as a whole, or due to external force fields. Internal energy has two major components, kinetic energy and potential energy. The internal energy (U) is the sum of all forms of energy (Ei) intrinsic to a thermodynamic system:  \\(  U = \\sum_i E_i \\)"^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Internal_energy"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:InternalEnergy,
        quantitykind:ThermodynamicEnergy ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Internal_energy"^^xsd:anyURI ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:InternalEnergy,
        quantitykind:ThermodynamicEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:ExpansionRatio a qudt:QuantityKind ;
    rdfs:label "Expansion Ratio"@en ;
    qudt:applicableUnit unit:PER-K,
        unit:PPM-PER-K,
        unit:PPTM-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerArea a qudt:QuantityKind ;
    rdfs:label "Force Per Area"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.thefreedictionary.com/force+per+unit+area"^^xsd:anyURI ;
    qudt:outOfScope true ;
    qudt:plainTextDescription "The force applied to a unit area of surface; measured in pascals (SI unit) or in dynes (cgs unit)" ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Pressure"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Incidence a qudt:QuantityKind ;
    rdfs:label "Incidence" ;
    qudt:applicableUnit unit:CASES-PER-KiloINDIV-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "In epidemiology, incidence is a measure of the probability of occurrence of a given medical condition in a population within a specified period of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Frequency .

quantitykind:MagneticQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Magnetic Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Magnetic Quantum Number\" describes the specific orbital (or \"cloud\") within that subshell, and yields the projection of the orbital angular momentum along a specified axis." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:PlaneAngle a qudt:QuantityKind ;
    rdfs:label "Plane Angle"@en ;
    dcterms:description "The inclination to each other of two intersecting lines, measured by the arc of a circle intercepted between the two lines forming the angle, the center of the circle being the point of intersection.  An acute angle is less than \\(90^\\circ\\), a right angle \\(90^\\circ\\); an obtuse angle, more than \\(90^\\circ\\) but less than \\(180^\\circ\\); a straight angle, \\(180^\\circ\\); a reflex angle, more than \\(180^\\circ\\) but less than \\(360^\\circ\\); a perigon, \\(360^\\circ\\). Any angle not a multiple of \\(90^\\circ\\) is an oblique angle. If the sum of two angles is \\(90^\\circ\\), they are complementary angles; if \\(180^\\circ\\), supplementary angles; if \\(360^\\circ\\), explementary angles."^^qudt:LatexString ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Plane_angle"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Angle ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thefreedictionary.com/plane+angle"^^xsd:anyURI ;
    qudt:plainTextDescription "An angle formed by two straight lines (in the same plane) angle - the space between two lines or planes that intersect; the inclination of one line to another; measured in degrees or radians" ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Angle ;
    skos:broader quantitykind:Angle .

quantitykind:PrincipalQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Principal Quantum Number"@en ;
    dcterms:description "The \"Principal Quantum Number\" describes the electron shell, or energy level, of an atom. The value of \\(n\\) ranges from 1 to the shell containing the outermost electron of that atom."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:SpecificHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Specific Heat Capacity"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB-DEG_F,
        unit:BTU_IT-PER-LB-DEG_R,
        unit:BTU_IT-PER-LB_F-DEG_F,
        unit:BTU_IT-PER-LB_F-DEG_R,
        unit:BTU_TH-PER-LB-DEG_F,
        unit:CAL_IT-PER-GM-DEG_C,
        unit:CAL_IT-PER-GM-K,
        unit:CAL_TH-PER-GM-DEG_C,
        unit:CAL_TH-PER-GM-K,
        unit:J-PER-KiloGM-K,
        unit:KiloCAL-PER-GM-DEG_C ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_heat_capacity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:informativeReference "http://www.taftan.com/thermodynamics/CP.HTM"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Specific Heat Capacity} of a solid or liquid is defined as the heat required to raise unit mass of substance by one degree of temperature. This is \\textit{Heat Capacity} divied by \\textit{Mass\". Note that there are corresponding molar quantities." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:HeatCapacity,
        quantitykind:Mass,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:SpecificImpulse a qudt:QuantityKind ;
    rdfs:label "Specific Impulse"@en ;
    dcterms:description "The impulse produced by a rocket divided by the mass \\(mp\\) of propellant consumed. Specific impulse \\({I_{sp}}\\) is a widely used measure of performance for chemical, nuclear, and electric rockets. It is usually given in seconds for both U.S. Customary and International System (SI) units.  The impulse produced by a rocket is the thrust force \\(F\\) times its duration \\(t\\) in seconds. \\(I_{sp}\\) is the thrust per unit mass flowrate, but with \\(g_o\\), is the thrust per weight flowrate. The specific impulse is given by the equation: \\(I_{sp} = \\frac{F}{\\dot{m}g_o}\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://www.grc.nasa.gov/WWW/K-12/airplane/specimp.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFlowRate .

quantitykind:ThermodynamicEnergy a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:exactMatch quantitykind:EnergyInternal,
        quantitykind:InternalEnergy ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "For a closed thermodynamic system, \\(\\Delta U = Q + W\\), where \\(Q\\) is amount of heat transferred to the system and \\(W\\) is work done on the system provided that no chemical reactions occur."^^qudt:LatexString ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:EnergyInternal,
        quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:Thrust a qudt:QuantityKind ;
    rdfs:label "Thrust"@en ;
    dcterms:description """Thrust is a reaction force described quantitatively by Newton's Second and Third Laws. When a system expels or accelerates mass in one direction the accelerated mass will cause a proportional but opposite force on that system.
The pushing or pulling force developed by an aircraft engine or a rocket engine.
The force exerted in any direction by a fluid jet or by a powered screw, as, the thrust of an antitorque rotor.
Specifically, in rocketry, \\( F\\,= m\\cdot v\\) where m is propellant mass flow and v is exhaust velocity relative to the vehicle. Also called momentum thrust."""^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thrust"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "Thrust is a reaction force described quantitatively by Newton's Second and Third Laws. When a system expels or accelerates mass in one direction the accelerated mass will cause a proportional but opposite force on that system." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:Torque a qudt:QuantityKind ;
    rdfs:label "Torque"@en ;
    dcterms:description """In physics, a torque (\\(\\tau\\)) is a vector that measures the tendency of a force to rotate an object about some axis. The magnitude of a torque is defined as force times its lever arm. Just as a force is a push or a pull, a torque can be thought of as a twist. The SI unit for torque is newton meters (\\(N m\\)). In U.S. customary units, it is measured in foot pounds (ft lbf) (also known as "pounds feet").
Mathematically, the torque on a particle (which has the position r in some reference frame) can be defined as the cross product: \\(τ = r x F\\)
where,
r is the particle's position vector relative to the fulcrum
F is the force acting on the particles,
or, more generally, torque can be defined as the rate of change of angular momentum: \\(τ = dL/dt\\)
where,
L is the angular momentum vector
t stands for time."""^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:KiloGM_F-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torque"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:MomentOfForce ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Torque"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = M \\cdot e_Q\\), where \\(M\\) is the momentof force and \\(e_Q\\) is a unit vector directed along a \\(Q-axis\\) with respect to which the torque is considered."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:url "http://en.wikipedia.org/wiki/Torque"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MomentOfForce .

quantitykind:Volume a qudt:QuantityKind ;
    rdfs:label "Volume"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:FemtoL,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:NanoL,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PicoL,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Volume"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:plainTextDescription "The volume of a solid object is the three-dimensional concept of how much space it occupies, often quantified numerically. One-dimensional figures (such as lines) and two-dimensional shapes (such as squares) are assigned zero volume in the three-dimensional space." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumeFlowRate a qudt:QuantityKind ;
    rdfs:label "Volume Flow Rate"@en ;
    qudt:applicableUnit unit:BBL_UK_PET-PER-DAY,
        unit:BBL_UK_PET-PER-HR,
        unit:BBL_UK_PET-PER-MIN,
        unit:BBL_UK_PET-PER-SEC,
        unit:BBL_US-PER-DAY,
        unit:BBL_US-PER-MIN,
        unit:BBL_US_PET-PER-HR,
        unit:BBL_US_PET-PER-SEC,
        unit:BU_UK-PER-DAY,
        unit:BU_UK-PER-HR,
        unit:BU_UK-PER-MIN,
        unit:BU_UK-PER-SEC,
        unit:BU_US_DRY-PER-DAY,
        unit:BU_US_DRY-PER-HR,
        unit:BU_US_DRY-PER-MIN,
        unit:BU_US_DRY-PER-SEC,
        unit:CentiM3-PER-DAY,
        unit:CentiM3-PER-HR,
        unit:CentiM3-PER-MIN,
        unit:CentiM3-PER-SEC,
        unit:DeciM3-PER-DAY,
        unit:DeciM3-PER-HR,
        unit:DeciM3-PER-MIN,
        unit:DeciM3-PER-SEC,
        unit:FT3-PER-DAY,
        unit:FT3-PER-HR,
        unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_UK-PER-DAY,
        unit:GAL_UK-PER-HR,
        unit:GAL_UK-PER-MIN,
        unit:GAL_UK-PER-SEC,
        unit:GAL_US-PER-HR,
        unit:GAL_US-PER-SEC,
        unit:GI_UK-PER-DAY,
        unit:GI_UK-PER-HR,
        unit:GI_UK-PER-MIN,
        unit:GI_UK-PER-SEC,
        unit:GI_US-PER-DAY,
        unit:GI_US-PER-HR,
        unit:GI_US-PER-MIN,
        unit:GI_US-PER-SEC,
        unit:IN3-PER-HR,
        unit:IN3-PER-MIN,
        unit:IN3-PER-SEC,
        unit:KiloL-PER-HR,
        unit:L-PER-DAY,
        unit:L-PER-HR,
        unit:L-PER-MIN,
        unit:L-PER-SEC,
        unit:M3-PER-DAY,
        unit:M3-PER-HR,
        unit:M3-PER-MIN,
        unit:M3-PER-SEC,
        unit:MilliL-PER-DAY,
        unit:MilliL-PER-HR,
        unit:MilliL-PER-MIN,
        unit:MilliL-PER-SEC,
        unit:OZ_VOL_UK-PER-DAY,
        unit:OZ_VOL_UK-PER-HR,
        unit:OZ_VOL_UK-PER-MIN,
        unit:OZ_VOL_UK-PER-SEC,
        unit:OZ_VOL_US-PER-DAY,
        unit:OZ_VOL_US-PER-HR,
        unit:OZ_VOL_US-PER-MIN,
        unit:OZ_VOL_US-PER-SEC,
        unit:PINT_UK-PER-DAY,
        unit:PINT_UK-PER-HR,
        unit:PINT_UK-PER-MIN,
        unit:PINT_UK-PER-SEC,
        unit:PINT_US-PER-DAY,
        unit:PINT_US-PER-HR,
        unit:PINT_US-PER-MIN,
        unit:PINT_US-PER-SEC,
        unit:PK_UK-PER-DAY,
        unit:PK_UK-PER-HR,
        unit:PK_UK-PER-MIN,
        unit:PK_UK-PER-SEC,
        unit:PK_US_DRY-PER-DAY,
        unit:PK_US_DRY-PER-HR,
        unit:PK_US_DRY-PER-MIN,
        unit:PK_US_DRY-PER-SEC,
        unit:QT_UK-PER-DAY,
        unit:QT_UK-PER-HR,
        unit:QT_UK-PER-MIN,
        unit:QT_UK-PER-SEC,
        unit:QT_US-PER-DAY,
        unit:QT_US-PER-HR,
        unit:QT_US-PER-MIN,
        unit:QT_US-PER-SEC,
        unit:YD3-PER-DAY,
        unit:YD3-PER-HR,
        unit:YD3-PER-MIN,
        unit:YD3-PER-SEC ;
    qudt:exactMatch quantitykind:VolumePerUnitTime ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volumetric_flow_rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_V = \\frac{dV}{dt}\\), where \\(V\\) is volume and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "Volumetric Flow Rate, (also known as volume flow rate, rate of fluid flow or volume velocity) is the volume of fluid which passes through a given surface per unit time." ;
    qudt:symbol "q_V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:VolumePerUnitTime .

brick:Air_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point .

brick:Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between two regions of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Air .

brick:Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Air .

brick:Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:Building a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "An independent unit of the built environment with a characteristic spatial structure, intended to serve at least one function or user activity [ISO 12006-2:2013]"@en ;
    sh:property [ sh:or ( [ sh:class brick:Floor ] [ sh:class brick:Room ] [ sh:class brick:Space ] [ sh:class brick:Zone ] [ sh:class brick:Wing ] ) ;
            sh:path brick:hasPart ],
        bsh:hasAddressShape,
        bsh:hasbuildingPrimaryFunctionShape,
        bsh:hasbuildingThermalTransmittanceShape,
        bsh:hasyearBuiltShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Location .

brick:Building_Air a brick:Substance ;
    rdfs:label "Building Air" ;
    skos:broader brick:Air ;
    skos:definition "air contained within a building"@en .

brick:CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures properties of CO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures properties of CO"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Air .

brick:Chilled_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Chilled_Water .

brick:Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the flow of the condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Condenser_Water .

brick:Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deadband Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the size of a deadband"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Setpoint .

brick:Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Demand Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the rate required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Setpoint .

brick:Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time .

brick:Differential_Pressure_Proportional_Band a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Proportional Band" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:PID,
        tag:Point,
        tag:Pressure,
        tag:Proportional .

brick:Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures the difference between two applied pressures"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint .

brick:Direction a brick:Quantity ;
    rdfs:label "Direction" ;
    skos:narrower brick:Wind_Direction .

brick:Entering_Condenser_Water a brick:Substance ;
    rdfs:label "Entering Condenser Water" ;
    skos:broader brick:Condenser_Water ;
    skos:definition "In a condenser water loop, this is water being brought away from the condenser side of a heat-rejection device (e.g. chiller). It is the 'warm' side."@en .

brick:Entering_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of water entering a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Water .

brick:Frequency a brick:Quantity ;
    rdfs:label "Frequency" ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    skos:definition "Frequency is the number of occurrences of a repeating event per unit time. The repetition of the events may be periodic (that is. the length of time between event repetitions is fixed) or aperiodic (i.e. the length of time between event repetitions varies). Therefore, we distinguish between periodic and aperiodic frequencies. In the SI system, periodic frequency is measured in hertz (Hz) or multiples of hertz, while aperiodic frequency is measured in becquerel (Bq).  In spectroscopy, ( u) is mostly used. Light passing through different media keeps its frequency, but not its wavelength or wavenumber."@en ;
    skos:narrower brick:Alternating_Current_Frequency ;
    brick:hasQUDTReference quantitykind:Frequency .

brick:GrainsOfMoisture a brick:Quantity ;
    rdfs:label "GrainsOfMoisture" ;
    qudt:applicableUnit unit:GRAIN ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Mass,
        brick:Mass ;
    skos:definition "Mass of moisture per pround of air, measured in grains of water" .

brick:Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:HX ;
    skos:definition "A heat exchanger is a piece of equipment built for efficient heat transfer from one medium to another. The media may be separated by a solid wall to prevent mixing or they may be in direct contact (BEDES)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Exchanger,
        tag:Heat .

brick:Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water System" ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of hot water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:System,
        tag:Water .

brick:Laboratory a owl:Class,
        sh:NodeShape ;
    rdfs:label "Laboratory" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "facility acceptable to the local, national, or international recognized authority having jurisdiction and which provides uniform testing and examination procedures and standards for meeting design, manufacturing, and factory testing requirements."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Leaving_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Water .

brick:Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water leaving a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Water .

brick:Lighting_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:property [ sh:or ( [ sh:class brick:Lighting_Equipment ] [ sh:class brick:Electrical_Equipment ] ) ;
            sh:path brick:hasPart ],
        [ sh:or ( [ sh:class brick:Lighting_Equipment ] [ sh:class brick:Location ] ) ;
            sh:path brick:feeds ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Lighting .

brick:Luminance a brick:Quantity ;
    rdfs:label "Luminance" ;
    qudt:applicableUnit unit:CD,
        unit:CD-PER-IN2,
        unit:CD-PER-M2,
        unit:CP,
        unit:FT-LA,
        unit:LA,
        unit:LM,
        unit:STILB ;
    skos:narrower brick:Luminous_Flux,
        brick:Luminous_Intensity ;
    brick:hasQUDTReference quantitykind:Luminance .

brick:Outside_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:PID_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "PID Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:PID,
        tag:Parameter,
        tag:Point .

brick:Particulate_Matter_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Particulate Matter Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Detects pollutants in the ambient air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Air_Quality ;
    brick:hasSubstance brick:Air .

brick:Power a brick:Quantity ;
    rdfs:label "Power" ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloV-A,
        unit:KiloV-A_Reactive,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaV-A,
        unit:MegaV-A_Reactive,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:V-A,
        unit:V-A_Reactive,
        unit:W ;
    skos:definition "Power is the rate at which work is performed or energy is transmitted, or the amount of energy required or expended for a given unit of time. As a rate of change of work done or the energy of a subsystem, power is: (P = W/t), where (P) is power, (W) is work and {t} is time."@en ;
    skos:narrower brick:Electric_Power,
        brick:Peak_Power,
        brick:Thermal_Power ;
    brick:hasQUDTReference quantitykind:Power .

brick:Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiator" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "Heat exchangers designed to transfer thermal energy from one medium to another"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Radiator .

brick:Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reset Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Setpoints used in reset strategies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Safety_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Safety .

brick:Security_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Security Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Security .

brick:Solid a brick:Substance ;
    rdfs:label "Solid" ;
    skos:definition "one of the three states or phases of matter characterized by stability of dimensions, relative incompressibility, and molecular motion held to limited oscillation."@en ;
    skos:narrower brick:Frost,
        brick:Hail,
        brick:Ice,
        brick:Soil .

brick:Supply_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates properties of the activity of a system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:System .

brick:Telecom_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Telecom Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used to support telecommuncations and IT equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Temperature .

brick:Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Usage Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of some substance that is consumed or used, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Usage .

brick:VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "VFD" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=vfd&submit=Search> ;
    rdfs:subClassOf brick:Motor ;
    skos:definition "Electronic device that varies its output frequency to vary the rotating speed of a motor, given a fixed input frequency. Used with fans or pumps to vary the flow in the system as a function of a maintained pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:VFD .

brick:Vertical_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Vertical Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A class of spaces used to connect multiple floors or levels.."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Vertical .

brick:Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the difference in water temperature between an upstream and downstream point in a pipe or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Water .

brick:area a brick:EntityProperty ;
    rdfs:label "Area" ;
    skos:definition "Entity has 2-dimensional area" .

brick:hasLocation a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has location" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isLocationOf ;
    skos:definition "Subject is physically located in the location given by the object"@en .

brick:isPartOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is part of" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:hasPart .

brick:meters a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "meters" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isMeteredBy ;
    skos:definition "Indicates the entity whose consumption/production of some substance is measured by this meter"@en .

bsh:AreaShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:FT2 unit:M2 ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

bsh:PowerQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the power input was measured" ;
            sh:class bsh:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ],
        [ a sh:PropertyShape ;
            sh:in ( unit:MegaV-A unit:KiloV-A unit:BTU_IT-PER-SEC unit:MegaJ-PER-SEC unit:FT-LB_F-PER-MIN unit:PlanckPower unit:TeraW unit:HP unit:GigaW unit:J-PER-HR unit:MegaBTU_IT-PER-HR unit:PicoW unit:BAR-M3-PER-SEC unit:V-A unit:MegaV-A_Reactive unit:HP_Metric unit:PSI-IN3-PER-SEC unit:BTU_IT-PER-HR unit:KiloCAL-PER-MIN unit:KiloCAL-PER-SEC unit:MicroW unit:J-PER-SEC unit:MegaPA-M3-PER-SEC unit:PA-M3-PER-SEC unit:BAR-L-PER-SEC unit:MegaPA-L-PER-SEC unit:PSI-YD3-PER-SEC unit:W unit:HP_Electric unit:THM_US-PER-HR unit:FT-LB_F-PER-HR unit:V-A_Reactive unit:KiloV-A_Reactive unit:HP_Boiler unit:HP_Brake unit:PSI-M3-PER-SEC unit:FT-LB_F-PER-SEC unit:PA-L-PER-SEC unit:KiloW unit:ERG-PER-SEC unit:MilliW unit:NanoW unit:TON_FG unit:KiloBTU_IT-PER-HR unit:MilliBAR-L-PER-SEC unit:MegaW unit:MilliBAR-M3-PER-SEC unit:BTU_IT ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

tag:AED a brick:Tag ;
    rdfs:label "AED" .

tag:Access a brick:Tag ;
    rdfs:label "Access" .

tag:Aid a brick:Tag ;
    rdfs:label "Aid" .

tag:Array a brick:Tag ;
    rdfs:label "Array" .

tag:Automatic a brick:Tag ;
    rdfs:label "Automatic" .

tag:Blind a brick:Tag ;
    rdfs:label "Blind" .

tag:Bulb a brick:Tag ;
    rdfs:label "Bulb" .

tag:CRAC a brick:Tag ;
    rdfs:label "CRAC" .

tag:Camera a brick:Tag ;
    rdfs:label "Camera" .

tag:Ceiling a brick:Tag ;
    rdfs:label "Ceiling" .

tag:Close a brick:Tag ;
    rdfs:label "Close" .

tag:Cold a brick:Tag ;
    rdfs:label "Cold" .

tag:Collector a brick:Tag ;
    rdfs:label "Collector" .

tag:Computer a brick:Tag ;
    rdfs:label "Computer" .

tag:Concentration a brick:Tag ;
    rdfs:label "Concentration" .

tag:Conductivity a brick:Tag ;
    rdfs:label "Conductivity" .

tag:Core a brick:Tag ;
    rdfs:label "Core" .

tag:Cycle a brick:Tag ;
    rdfs:label "Cycle" .

tag:Deck a brick:Tag ;
    rdfs:label "Deck" .

tag:Defibrillator a brick:Tag ;
    rdfs:label "Defibrillator" .

tag:Deionised a brick:Tag ;
    rdfs:label "Deionised" .

tag:Delay a brick:Tag ;
    rdfs:label "Delay" .

tag:Derivative a brick:Tag ;
    rdfs:label "Derivative" .

tag:Detector a brick:Tag ;
    rdfs:label "Detector" .

tag:Direct a brick:Tag ;
    rdfs:label "Direct" .

tag:Drive a brick:Tag ;
    rdfs:label "Drive" .

tag:Duct a brick:Tag ;
    rdfs:label "Duct" .

tag:Duration a brick:Tag ;
    rdfs:label "Duration" .

tag:Economizer a brick:Tag ;
    rdfs:label "Economizer" .

tag:Entrance a brick:Tag ;
    rdfs:label "Entrance" .

tag:Expansion a brick:Tag ;
    rdfs:label "Expansion" .

tag:Food a brick:Tag ;
    rdfs:label "Food" .

tag:Freeze a brick:Tag ;
    rdfs:label "Freeze" .

tag:Fume a brick:Tag ;
    rdfs:label "Fume" .

tag:Furniture a brick:Tag ;
    rdfs:label "Furniture" .

tag:Handler a brick:Tag ;
    rdfs:label "Handler" .

tag:Heating a brick:Tag ;
    rdfs:label "Heating" .

tag:Hood a brick:Tag ;
    rdfs:label "Hood" .

tag:Humidifier a brick:Tag ;
    rdfs:label "Humidifier" .

tag:Ice a brick:Tag ;
    rdfs:label "Ice" .

tag:Inside a brick:Tag ;
    rdfs:label "Inside" .

tag:Intake a brick:Tag ;
    rdfs:label "Intake" .

tag:Isolation a brick:Tag ;
    rdfs:label "Isolation" .

tag:Lag a brick:Tag ;
    rdfs:label "Lag" .

tag:Liquid a brick:Tag ;
    rdfs:label "Liquid" .

tag:Lounge a brick:Tag ;
    rdfs:label "Lounge" .

tag:Luminaire a brick:Tag ;
    rdfs:label "Luminaire" .

tag:Maintenance a brick:Tag ;
    rdfs:label "Maintenance" .

tag:Makeup a brick:Tag ;
    rdfs:label "Makeup" .

tag:Mechanical a brick:Tag ;
    rdfs:label "Mechanical" .

tag:NVR a brick:Tag ;
    rdfs:label "NVR" .

tag:Operating a brick:Tag ;
    rdfs:label "Operating" .

tag:Override a brick:Tag ;
    rdfs:label "Override" .

tag:PM1 a brick:Tag ;
    rdfs:label "PM1" .

tag:PM10 a brick:Tag ;
    rdfs:label "PM10" .

tag:PM2.5 a brick:Tag ;
    rdfs:label "PM2.5" .

tag:Pre a brick:Tag ;
    rdfs:label "Pre" .

tag:Rain a brick:Tag ;
    rdfs:label "Rain" .

tag:Reactive a brick:Tag ;
    rdfs:label "Reactive" .

tag:Relay a brick:Tag ;
    rdfs:label "Relay" .

tag:Relief a brick:Tag ;
    rdfs:label "Relief" .

tag:Rooftop a brick:Tag ;
    rdfs:label "Rooftop" .

tag:Shower a brick:Tag ;
    rdfs:label "Shower" .

tag:Stage a brick:Tag ;
    rdfs:label "Stage" .

tag:TVOC a brick:Tag ;
    rdfs:label "TVOC" .

tag:Thermostat a brick:Tag ;
    rdfs:label "Thermostat" .

tag:Torque a brick:Tag ;
    rdfs:label "Torque" .

tag:Tower a brick:Tag ;
    rdfs:label "Tower" .

tag:Transformer a brick:Tag ;
    rdfs:label "Transformer" .

tag:Wet a brick:Tag ;
    rdfs:label "Wet" .

tag:Wheel a brick:Tag ;
    rdfs:label "Wheel" .

tag:Wind a brick:Tag ;
    rdfs:label "Wind" .

qudt:EndianType a owl:Class ;
    rdfs:label "Endian Type" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Endianness"^^xsd:anyURI ;
    qudt:plainTextDescription "In computing, endianness is the ordering used to represent some kind of data as a sequence of smaller units. Typical cases are the order in which integer values are stored as bytes in computer memory (relative to a given memory addressing scheme) and the transmission order over a network or other medium. When specifically talking about bytes, endianness is also referred to simply as byte order.  Most computer processors simply store integers as sequences of bytes, so that, conceptually, the encoded value can be obtained by simple concatenation. For an 'n-byte' integer value this allows 'n!' (n factorial) possible representations (one for each byte permutation). The two most common of them are: increasing numeric significance with increasing memory addresses, known as little-endian, and its opposite, called big-endian." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt.type:LittleEndian qudt.type:BigEndian ) .

qudt:IntegerEncodingType a owl:Class ;
    rdfs:label "Integer Encoding" ;
    dcterms:description "The encoding scheme for integer types" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding ;
    owl:oneOf ( qudt:LongUnsignedIntegerEncoding qudt:ShortUnsignedIntegerEncoding qudt:ShortUnsignedIntegerEncoding qudt:SignedIntegerEncoding qudt:UnsignedIntegerEncoding ) .

qudt:Scale a owl:Class ;
    rdfs:label "Scale" ;
    rdfs:comment "Scales (also called &quot;scales of measurement&quot; or &quot;levels of measurement&quot;)  are expressions that typically refer to the theory of scale types."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:MathsFunctionType ;
            owl:onProperty qudt:permissibleMaths ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:ScaleType ;
            owl:onProperty qudt:scaleType ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:TransformType ;
            owl:onProperty qudt:permissibleTransformation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dataStructure ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:scaleType ],
        qudt:Concept .

qudt:SystemOfUnits a owl:Class ;
    rdfs:label "System of Units" ;
    qudt:informativeReference "http://dbpedia.org/resource/Category:Systems_of_units"^^xsd:anyURI,
        "http://www.ieeeghn.org/wiki/index.php/System_of_Measurement_Units"^^xsd:anyURI ;
    rdfs:comment "A system of units is a set of units which are chosen as the reference scales for some set of quantity kinds together with the definitions of each unit. Units may be defined by experimental observation or by proportion to another unit not included in the system. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:PhysicalConstant ;
            owl:onProperty qudt:applicablePhysicalConstant ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasAllowedUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasBaseUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasCoherentUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasDefinedUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasDerivedCoherentUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasDerivedUnit ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:Unit ;
            owl:onProperty qudt:hasUnit ],
        qudt:Concept .

qudt:Verifiable a qudt:AspectClass ;
    rdfs:label "Verifiable" ;
    rdfs:comment "An aspect class that holds properties that provide external knowledge and specifications of a given resource." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dbpediaMatch ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:informativeReference ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:isoNormativeReference ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:isoNormativeReference ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:normativeReference ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:normativeReference ],
        qudt:Aspect .

qudt:hasDefinedUnit a owl:ObjectProperty ;
    rdfs:label "defined unit" ;
    dcterms:description "This property relates a unit system with a unit of measure that is defined by the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnit .

quantitykind:Acceleration a qudt:QuantityKind ;
    rdfs:label "Acceleration"@en ;
    dcterms:description "Acceleration is the (instantaneous) rate of change of velocity. Acceleration may be either linear acceleration, or angular acceleration. It is a vector quantity with dimension \\(length/time^{2}\\) for linear acceleration, or in the case of angular acceleration, with dimension \\(angle/time^{2}\\). In SI units, linear acceleration is measured in \\(meters/second^{2}\\) (\\(m \\cdot s^{-2}\\)) and angular acceleration is measured in \\(radians/second^{2}\\). In physics, any increase or decrease in speed is referred to as acceleration and similarly, motion in a circle at constant speed is also an acceleration, since the direction component of the velocity is changing."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Acceleration"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:LinearAcceleration ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acceleration"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearAcceleration .

quantitykind:Density a qudt:QuantityKind ;
    rdfs:label "Density"@en ;
    dcterms:description "The mass density or density of a material is defined as its mass per unit volume. The symbol most often used for density is \\(\\rho\\).  Mathematically, density is defined as mass divided by volume: \\(\\rho = m/V\\), where \\(\\rho\\) is the density, \\(m\\) is the mass, and \\(V\\) is the volume. In some cases, density is also defined as its weight per unit volume, although this quantity is more properly called specific weight."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ-PER-GAL,
        unit:OZ-PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Density"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:MassDensity ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = m/V\\), where \\(\\rho\\) is the density, \\(m\\) is the mass, and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MassDensity .

quantitykind:ElectricFieldStrength a qudt:QuantityKind ;
    rdfs:label "Electric Field Strength"@en ;
    dcterms:description "\\(\\textbf{Electric Field Strength}\\) is the magnitude and direction of an electric field, expressed by the value of \\(E\\), also referred to as \\(\\color{indigo} {\\textit{electric field intensity}}\\) or simply the electric field."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-PER-M,
        unit:MegaV-PER-M,
        unit:MicroV-PER-M,
        unit:MilliV-PER-M,
        unit:V-PER-CentiM,
        unit:V-PER-IN,
        unit:V-PER-M,
        unit:V-PER-MilliM,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{E} = \\mathbf{F}/q\\), where \\(\\mathbf{F}\\) is force and \\(q\\) is electric charge, of a test particle at rest."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{E} \\)"^^qudt:LatexString ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseLength a qudt:QuantityKind ;
    rdfs:label "Inverse Length"@en ;
    dcterms:description "Reciprocal length or inverse length is a measurement used in several branches of science and mathematics. As the reciprocal of length, common units used for this measurement include the reciprocal metre or inverse metre (\\(m^{-1}\\)), the reciprocal centimetre or inverse centimetre (\\(cm^{-1}\\)), and, in optics, the dioptre."^^qudt:LatexString ;
    qudt:applicableUnit unit:DPI,
        unit:KY,
        unit:MESH,
        unit:PER-ANGSTROM,
        unit:PER-CentiM,
        unit:PER-KiloM,
        unit:PER-M,
        unit:PER-MicroM,
        unit:PER-MilliM,
        unit:PER-NanoM,
        unit:PER-PicoM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reciprocal_length"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MomentOfInertia a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moment_of_inertia"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_Q = \\int r^2_Q dm\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" .

quantitykind:SpinQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Spin Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(s^2 = \\hbar^2 s(s + 1)\\), where \\(s\\) is the spin quantum number and \\(\\hbar\\) is the Planck constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Spin Quantum Number\"  describes the spin (intrinsic angular momentum) of the electron within that orbital, and gives the projection of the spin angular momentum S along the specified axis" ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:PrincipalQuantumNumber .

quantitykind:Strain a qudt:QuantityKind ;
    rdfs:label "Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Strain"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:LinearStrain ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\epsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In any branch of science dealing with materials and their behaviour, strain is the geometrical expression of deformation caused by the action of stress on a physical body. Strain is calculated by first assuming a change between two body states: the beginning state and the final state. Then the difference in placement of two points in this body in those two states expresses the numerical value of strain. Strain therefore expresses itself as a change in size and/or shape. [Wikipedia]" ;
    qudt:url "http://www.freestudy.co.uk/mech%20prin%20h2/stress.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearStrain ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThermodynamicTemperature a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Temperature"@en ;
    qudt:applicableUnit unit:DEG_R,
        unit:K,
        unit:PlanckTemperature ;
    qudt:dbpediaMatch "http://dbpedia.org/page/Thermodynamic_temperature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:latexSymbol "\\(\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription """Thermodynamic temperature is the absolute measure of temperature and is one of the principal parameters of thermodynamics.
Temperature is a physical property of matter that quantitatively expresses the common notions of hot and cold.
In thermodynamics, in a system of which the entropy is considered as an independent externally controlled variable, absolute, or thermodynamic temperature is defined as the derivative of the internal energy with respect to the entropy. This is a base quantity in the International System of Quantities, ISQ, on which the International System of Units, SI, is based.""" ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Temperature ;
    skos:broader quantitykind:Temperature .

brick:CO_Concentration a brick:Quantity ;
    rdfs:label "COConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of carbon monoxide in a medium" ;
    skos:narrower brick:Differential_CO_Concentration .

brick:Chilled_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow in a chilled water circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Chilled_Water .

brick:Class a owl:Class .

brick:Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Condenser_Water .

brick:Disable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that disable functionality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Point .

brick:Discharge_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Discharge Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Temperature_Sensor .

brick:Electric_Current a brick:Quantity ;
    rdfs:label "Electric Current" ;
    qudt:applicableUnit unit:A,
        unit:A_Ab,
        unit:A_Stat,
        unit:BIOT,
        unit:KiloA,
        unit:MegaA,
        unit:MicroA,
        unit:MilliA,
        unit:NanoA,
        unit:PicoA,
        unit:PlanckCurrent ;
    skos:related brick:Alternating_Current_Frequency,
        brick:Current_Angle,
        brick:Current_Imbalance,
        brick:Current_Total_Harmonic_Distortion ;
    brick:hasQUDTReference quantitykind:ElectricCurrent .

brick:Electric_Energy a brick:Quantity ;
    rdfs:label "ElectricEnergy" ;
    qudt:applicableUnit unit:J,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Energy,
        brick:Energy ;
    skos:definition "A form of energy resulting from the flow of electrical charge" ;
    skos:narrower brick:Active_Energy,
        brick:Apparent_Energy,
        brick:Reactive_Energy .

brick:Entering_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water enteringed to a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Hot_Water .

brick:Entering_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Water .

brick:Enthalpy a brick:Quantity ;
    rdfs:label "Enthalpy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:N-M,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    skos:definition "(also known as heat content), thermodynamic quantity equal to the sum of the internal energy of a system plus the product of the pressure volume work done on the system. H = E + pv, where H = enthalpy or total heat content, E = internal energy of the system, p = pressure, and v = volume. (Compare to [[specific enthalpy]].)",
        "(also known as heat content), thermodynamic quantity equal to the sum of the internal energy of a system plus the product of the pressure volume work done on the system. H = E + pv, where H = enthalpy or total heat content, E = internal energy of the system, p = pressure, and v = volume. (Compare to [[specific enthalpy]].)"@en ;
    brick:hasQUDTReference quantitykind:Enthalpy .

brick:Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Device to remove gases from a mixture of gases or to remove solid material from a fluid"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter .

brick:Hot_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow in a hot water circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Hot_Water .

brick:Leaving_Condenser_Water a brick:Substance ;
    rdfs:label "Leaving Condenser Water" ;
    skos:broader brick:Condenser_Water ;
    skos:definition "In a condenser water loop, this is water being brought to the condenser side of a heat-rejection device (e.g. chiller). It is the 'cold' side."@en .

brick:Leaving_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of water that is leaving a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Water .

brick:Level a brick:Quantity ;
    rdfs:label "Level" ;
    qudt:applicableUnit unit:CentiM,
        unit:DeciM,
        unit:FT,
        unit:IN,
        unit:KiloM,
        unit:M,
        unit:MicroM,
        unit:MilliM,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Length ;
    skos:definition "Amount of substance in a container; typically measured in height" ;
    skos:narrower brick:Precipitation .

brick:Max_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Natural_Gas a brick:Substance ;
    rdfs:label "Natural Gas" ;
    skos:broader brick:Gas ;
    skos:definition "Fossil fuel energy source consisting largely of methane and other hydrocarbons"@en .

brick:On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Off Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "An On/Off Command controls or reports the binary status of a control loop, relay or equipment activity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:On,
        tag:Point .

brick:Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Speed a brick:Quantity ;
    rdfs:label "Speed" ;
    qudt:applicableUnit unit:BFT,
        unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-SEC,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-SEC,
        unit:MI-PER-HR,
        unit:MI-PER-SEC,
        unit:MegaHZ-M,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC ;
    skos:narrower brick:Linear_Speed,
        brick:Rotational_Speed ;
    brick:hasQUDTReference quantitykind:Speed .

brick:Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures resistance to airflow in a heating and cooling system's components and duct work"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarm that indicates an undesirable event with a pipe, container, or equipment carrying water e.g. water leak"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Water .

brick:Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Valve" ;
    rdfs:subClassOf brick:Valve ;
    skos:definition "A valve that modulates the flow of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Zone_Air .

brick:feeds a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Feeds" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isFedBy ;
    skos:definition "The subject is upstream of the object in the context of some sequential process; some media is passed between them"@en .

ref:hasExternalReference a owl:ObjectProperty ;
    rdfs:label "hasExternalReference" ;
    skos:definition "Points to the external reference for this entity, which contains additional metadata/data not included in this graph." .

dcterms:description a owl:AnnotationProperty ;
    rdfs:label "description" .

quantitykind:ComplexPower a qudt:QuantityKind ;
    rdfs:label "Complex Power"@en ;
    dcterms:description "\"Complex Power\", under sinusoidal conditions, is the product of the phasor \\(U\\) representing the voltage between the terminals of a linear two-terminal element or two-terminal circuit and the complex conjugate of the phasor \\(I\\) representing the electric current in the element or circuit."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    qudt:expression "\\(complex-power\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-39"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\underline{S} = \\underline{U}\\underline{I^*}\\), where \\(\\underline{U}\\) is voltage phasor and \\(\\underline{I^*}\\) is the complex conjugate of the current phasor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{S}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentPhasor,
        quantitykind:VoltagePhasor ;
    skos:broader quantitykind:ElectricPower .

quantitykind:Count a qudt:QuantityKind ;
    rdfs:label "Count"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "\"Count\" is the value of a count of items." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:ElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Electric Current"@en ;
    qudt:applicableUnit unit:A,
        unit:A_Ab,
        unit:A_Stat,
        unit:BIOT,
        unit:KiloA,
        unit:MegaA,
        unit:MicroA,
        unit:MilliA,
        unit:NanoA,
        unit:PicoA,
        unit:PlanckCurrent ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_current"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electric Current\" is the flow (movement) of electric charge. The amount of electric current through some surface, for example, a section through a copper conductor, is defined as the amount of electric charge flowing through that surface over time. Current is a scalar-valued quantity. Electric current is one of the base quantities in the International System of Quantities, ISQ, on which the International System of Units, SI, is based. " ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricPotential a qudt:QuantityKind ;
    rdfs:label "Electric Potential"@en ;
    dcterms:description "The Electric Potential is a scalar valued quantity associated with an electric field. The electric potential \\(\\phi(x)\\) at a point, \\(x\\), is formally defined as the line integral of the electric field taken along a path from x to the point at infinity. If the electric field is static, that is time independent, then the choice of the path is arbitrary; however if the electric field is time dependent, taking the integral a different paths will produce different results."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:exactMatch quantitykind:ElectricPotentialDifference,
        quantitykind:EnergyPerElectricCharge,
        quantitykind:Voltage ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(-\\textbf{grad} \\; V = E + \\frac{\\partial A}{\\partial t}\\), where \\(E\\) is electric field strength, \\(A\\) is magentic vector potential and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricPotentialDifference,
        quantitykind:EnergyPerElectricCharge,
        quantitykind:Voltage ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:ElectricPotentialDifference a qudt:QuantityKind ;
    rdfs:label "Electric Potential Difference"@en ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:exactMatch quantitykind:ElectricPotential,
        quantitykind:EnergyPerElectricCharge,
        quantitykind:Voltage ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V_{ab} = \\int_{r_a(C)}^{r_b} (E +\\frac{\\partial A}{\\partial t}) \\), where \\(E\\) is electric field strength, \\(A\\) is magentic vector potential,  \\(t\\) is time, and \\(r\\) is position vector along a curve C from a point \\(a\\) to \\(b\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Potential Difference\" is a scalar valued quantity associated with an electric field." ;
    qudt:symbol "V_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricPotential,
        quantitykind:EnergyPerElectricCharge,
        quantitykind:Voltage ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:Frequency a qudt:QuantityKind ;
    rdfs:label "Frequency"@en ;
    dcterms:description "\"Frequency\" is the number of occurrences of a repeating event per unit time. The repetition of the events may be periodic (that is. the length of time between event repetitions is fixed) or aperiodic (i.e. the length of time between event repetitions varies). Therefore, we distinguish between periodic and aperiodic frequencies. In the SI system, periodic frequency is measured in hertz (Hz) or multiples of hertz, while aperiodic frequency is measured in becquerel (Bq).  In spectroscopy, \\(\\nu\\) is mostly used. Light passing through different media keeps its frequency, but not its wavelength or wavenumber."^^qudt:LatexString ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Frequency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:latexDefinition """\\(f = 1/T\\), where \\(T\\) is a period.

Alternatively,

\\(\\nu = 1/T\\)"""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\nu, f\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseTime .

quantitykind:Impedance a qudt:QuantityKind ;
    rdfs:label "Impedance"@en ;
    qudt:applicableUnit unit:OHM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electrical_impedance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electrical_impedance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-43"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\underline{Z} = \\underline{U} / \\underline{I}\\), where \\(\\underline{U}\\) is the voltage phasor and \\(\\underline{I}\\) is the electric current phasor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{Z}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Impedance\" is the measure of the opposition that a circuit presents to the passage of a current when a voltage is applied. In quantitative terms, it is the complex ratio of the voltage to the current in an alternating current (AC) circuit. Impedance extends the concept of resistance to AC circuits, and possesses both magnitude and phase, unlike resistance, which has only magnitude. When a circuit is driven with direct current (DC), there is no distinction between impedance and resistance; the latter can be thought of as impedance with zero phase angle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentPhasor,
        quantitykind:VoltagePhasor .

quantitykind:MassieuFunction a qudt:QuantityKind ;
    rdfs:label "Massieu Function"@en ;
    dcterms:description "The Massieu function, \\(\\Psi\\), is defined as: \\(\\Psi = \\Psi (X_1, \\dots , X_i, Y_{i+1}, \\dots , Y_r  )\\),  where for every system with degree of freedom \\(r\\) one may choose \\(r\\) variables, e.g. , to define a coordinate system, where \\(X\\) and \\(Y\\) are extensive and intensive variables, respectively, and where at least one extensive variable must be within this set in order to define the size of the system. The \\((r + 1)^{th}\\) variable,\\(\\Psi\\) , is then called the Massieu function."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Massieu_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J = -A/T\\), where \\(A\\) is Helmholtz energy and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:PlanckFunction a qudt:QuantityKind ;
    rdfs:label "Planck Function"@en ;
    dcterms:description "The \\(\\textit{Planck function}\\) is used to compute the radiance emitted from objects that radiate like a perfect \"Black Body\". The inverse of the \\(\\textit{Planck Function}\\) is used to find the \\(\\textit{Brightness Temperature}\\) of an object. The precise formula for the Planck Function depends on whether the radiance is determined on a \\(\\textit{per unit wavelength}\\) or a \\(\\textit{per unit frequency}\\). In the ISO System of Quantities, \\(\\textit{Planck Function}\\) is defined by the formula: \\(Y = -G/T\\), where \\(G\\) is Gibbs Energy and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:expression "\\(B_{\\nu}(T)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19680008986_1968008986.pdf"^^xsd:anyURI,
        "http://pds-atmospheres.nmsu.edu/education_and_outreach/encyclopedia/planck_function.htm"^^xsd:anyURI,
        "http://www.star.nesdis.noaa.gov/smcd/spb/calibration/planck.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """The Planck function, \\(B_{\\tilde{\\nu}}(T)\\), is given by:
\\(B_{\\nu}(T) = \\frac{2h c^2\\tilde{\\nu}^3}{e^{hc / k \\tilde{\\nu} T}-1}\\)
where, \\(\\tilde{\\nu}\\) is wavelength, \\(h\\) is Planck's Constant, \\(k\\) is Boltzman's Constant, \\(c\\) is the speed of light in a vacuum, \\(T\\) is thermodynamic temperature."""^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:QuantumNumber a qudt:QuantityKind ;
    rdfs:label "Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Quantum Number\" describes values of conserved quantities in the dynamics of the quantum system. Perhaps the most peculiar aspect of quantum mechanics is the quantization of observable quantities, since quantum numbers are discrete sets of integers or half-integers." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:SpecificEnthalpy a qudt:QuantityKind ;
    rdfs:label "Specific Enthalpy"@en ;
    dcterms:description "\\(\\textit{Specific Enthalpy}\\) is enthalpy per mass of substance involved. Specific enthalpy is denoted by a lower case h, with dimension of energy per mass (SI unit: joule/kg). In thermodynamics, \\(\\textit{enthalpy}\\) is the sum of the internal energy U and the product of pressure p and volume V of a system: \\(H = U + pV\\).  The internal energy U and the work term pV have dimension of energy, in SI units this is joule; the extensive (linear in size) quantity H has the same dimension."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(h = H/m\\), where \\(H\\) is enthalpy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificGibbsEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Gibbs Energy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = G/m\\), where \\(G\\) is Gibbs energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is \"Specific Gibbs Energy}, which is \\textit{Gibbs Energy} per mass of substance involved. \\textit{Specific Gibbs Energy\" is denoted by a lower case g, with dimension of energy per mass (SI unit: joule/kg)." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificHelmholtzEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Helmholtz Energy"@en ;
    dcterms:description "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is \\(\\textit{Specific Helmholtz Energy}\\), which is \\(\\textit{Helmholz Energy}\\) per mass of substance involved.\\( \\textit{Specific Helmholz Energy}\\) is denoted by a lower case u, with dimension of energy per mass (SI unit: joule/kg)."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = A/m\\), where \\(A\\) is Helmholtz energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificInternalEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Internal Energy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = U/m\\), where \\(U\\) is thermodynamic energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is specific internal energy, which is energy per mass of substance involved. Specific internal energy is denoted by a lower case u, with dimension of energy per mass (SI unit: joule/kg)." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InternalEnergy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy .

quantitykind:Speed a qudt:QuantityKind ;
    rdfs:label "Speed"@en ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Speed is the magnitude of velocity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

rdfs:Resource sh:property bsh:valueShape .

brick:Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Setpoint" ;
    rdfs:subClassOf brick:Flow_Setpoint ;
    skos:definition "Sets air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Building_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures usage or consumption of some media for a whole building"@en ;
    sh:property [ sh:or ( [ sh:class brick:Building ] ) ;
            sh:path brick:meters ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Meter .

brick:Common_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Common Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A class of spaces that are used by multiple people at the same time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Space .

brick:Condenser_Water a brick:Substance ;
    rdfs:label "Condenser Water" ;
    skos:broader brick:Water ;
    skos:definition "Water used used to remove heat through condensation"@en ;
    skos:narrower brick:Entering_Condenser_Water,
        brick:Leaving_Condenser_Water .

brick:Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Element inserted into an air-distribution system or element of an air-distribution system permitting modification of the air resistance of the system and consequently changing the airflow rate or shutting off the airflow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment .

brick:Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dewpoint Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Dew_point> ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses the dewpoint temperature . Dew point is the temperature to which air must be cooled to become saturated with water vapor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dewpoint,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint .

brick:Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Setpoint" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=setpoint> ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "A type of Setpoints that is related to the difference between two measurements"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint .

brick:Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Entering_Chilled_Water a brick:Substance ;
    rdfs:label "Entering Chilled Water" ;
    skos:broader brick:Chilled_Water,
        brick:Entering_Water .

brick:Entering_Hot_Water a brick:Substance ;
    rdfs:label "Entering Hot Water" ;
    skos:broader brick:Entering_Water,
        brick:Hot_Water .

brick:Fire_Safety_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Safety Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fire,
        tag:Safety .

brick:Floor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Floor" ;
    rdfs:subClassOf brick:Location ;
    owl:equivalentClass brick:Storey ;
    skos:definition "A level, typically representing a horizontal aggregation of spaces that are vertically bound. (referring to IFC)"@en ;
    sh:property [ sh:or ( [ sh:class brick:Room ] [ sh:class brick:Space ] [ sh:class brick:Zone ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Location .

brick:Gas a brick:Substance ;
    rdfs:label "Gas" ;
    skos:broader brick:Fluid ;
    skos:definition "state of matter in which substances exist in the form of nonaggregated molecules and which, within acceptable limits of accuracy, satisfy the ideal gas laws; usually a highly superheated vapor. See [[state]]."@en ;
    skos:narrower brick:Air,
        brick:CO,
        brick:CO2,
        brick:Natural_Gas,
        brick:Steam .

brick:Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Integral Time Parameter" ;
    rdfs:subClassOf brick:Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Leaving_Chilled_Water a brick:Substance ;
    rdfs:label "Leaving Chilled Water" ;
    skos:broader brick:Chilled_Water,
        brick:Leaving_Water .

brick:Leaving_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Hot Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Hot_Water .

brick:Leaving_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Water .

brick:Liquid a brick:Substance ;
    rdfs:label "Liquid" ;
    skos:broader brick:Fluid ;
    skos:definition "state of matter intermediate between crystalline substances and gases in which the volume of a substance, but not the shape, remains relatively constant."@en ;
    skos:narrower brick:Gasoline,
        brick:Glycol,
        brick:Liquid_CO2,
        brick:Oil,
        brick:Water .

brick:Mixed_Air a brick:Substance ;
    rdfs:label "Mixed Air" ;
    skos:broader brick:Air ;
    skos:definition "(1) air that contains two or more streams of air. (2) combined outdoor air and recirculated air."@en .

brick:Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Start Stop Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    skos:definition "Indicates the active/inactive status of a control loop (but not equipment activities or relays -- use On/Off for this purpose)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Water_Temperature_Sensor a owl:Class ;
    rdfs:label "Supply Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    owl:deprecated true ;
    brick:deprecatedInVersion "1.3.0" ;
    brick:deprecationMitigationMessage "Swapped supply/return for entering/leaving with water-related points" ;
    brick:isReplacedBy brick:Leaving_Water_Temperature_Sensor .

brick:Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Valve> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that regulates, directs or controls the flow of a fluid by opening, closing or partially obstructing various passageways"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Valve .

brick:Velocity_Pressure a brick:Quantity ;
    rdfs:label "Velocity Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    skos:definition "Dynamic Pressure (indicated with q, or Q, and sometimes called velocity pressure) is the quantity defined by: (q = 1/2 * ρ v^{2}), where (using SI units),  (q) is dynamic pressure in (pascals), (ρ) is fluid density in (kg/m^{3}) (for example, density of air) and (v ) is fluid velocity in (m/s)."@en ;
    skos:narrower brick:Differential_Dynamic_Pressure ;
    brick:hasQUDTReference quantitykind:DynamicPressure,
        brick:Dynamic_Pressure .

brick:Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "(1) a separately controlled heated or cooled space. (2) one occupied space or several occupied spaces with similar occupancy category, occupant density, zone air distribution effectiveness, and zone primary airflow per unit area. (3) space or group of spaces within a building for which the heating, cooling, or lighting requirements are sufficiently similar that desired conditions can be maintained throughout by a single controlling device."@en ;
    sh:property [ sh:or ( [ sh:class brick:Room ] [ sh:class brick:Space ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Zone .

brick:Zone_Air a brick:Substance ;
    rdfs:label "Zone Air" ;
    skos:broader brick:Air ;
    skos:definition "air inside a defined zone (e.g., corridors)."@en .

brick:Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "A physical or virtual sensor which represents the temperature of an HVAC Zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Zone_Air .

bsh:Electric_CurrentQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloA unit:BIOT unit:NanoA unit:A_Stat unit:MilliA unit:PicoA unit:PlanckCurrent unit:A unit:A_Ab unit:MicroA unit:MegaA ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the current input was measured" ;
            sh:class bsh:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ] .

bsh:VoltageQuantityShape a owl:Class,
        sh:NodeShape,
        brick:EntityPropertyValue ;
    rdfs:subClassOf bsh:ValueShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:KiloV unit:MilliV unit:MicroV unit:MegaV unit:PlanckVolt unit:V_Ab unit:V_Stat unit:V ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the voltage was measured" ;
            sh:class bsh:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ] .

tag:AHU a brick:Tag ;
    rdfs:label "AHU" .

tag:Adjust a brick:Tag ;
    rdfs:label "Adjust" .

tag:Angle a brick:Tag ;
    rdfs:label "Angle" .

tag:Beam a brick:Tag ;
    rdfs:label "Beam" .

tag:Chiller a brick:Tag ;
    rdfs:label "Chiller" .

tag:Conditioning a brick:Tag ;
    rdfs:label "Conditioning" .

tag:Elevator a brick:Tag ;
    rdfs:label "Elevator" .

tag:Embedded a brick:Tag ;
    rdfs:label "Embedded" .

tag:Failure a brick:Tag ;
    rdfs:label "Failure" .

tag:Frame a brick:Tag ;
    rdfs:label "Frame" .

tag:Fresh a brick:Tag ;
    rdfs:label "Fresh" .

tag:Generator a brick:Tag ;
    rdfs:label "Generator" .

tag:Grains a brick:Tag ;
    rdfs:label "Grains" .

tag:Heater a brick:Tag ;
    rdfs:label "Heater" .

tag:ICT a brick:Tag ;
    rdfs:label "ICT" .

tag:Illuminance a brick:Tag ;
    rdfs:label "Illuminance" .

tag:Imbalance a brick:Tag ;
    rdfs:label "Imbalance" .

tag:Intercom a brick:Tag ;
    rdfs:label "Intercom" .

tag:Lead a brick:Tag ;
    rdfs:label "Lead" .

tag:Leak a brick:Tag ;
    rdfs:label "Leak" .

tag:Lighting a brick:Tag ;
    rdfs:label "Lighting" .

tag:Lobby a brick:Tag ;
    rdfs:label "Lobby" .

tag:Open a brick:Tag ;
    rdfs:label "Open" .

tag:Overridden a brick:Tag ;
    rdfs:label "Overridden" .

tag:Parking a brick:Tag ;
    rdfs:label "Parking" .

tag:Photovoltaic a brick:Tag ;
    rdfs:label "Photovoltaic" .

tag:Ratio a brick:Tag ;
    rdfs:label "Ratio" .

tag:Reheat a brick:Tag ;
    rdfs:label "Reheat" .

tag:Riser a brick:Tag ;
    rdfs:label "Riser" .

tag:Sensitivity a brick:Tag ;
    rdfs:label "Sensitivity" .

tag:Surveillance a brick:Tag ;
    rdfs:label "Surveillance" .

tag:Tank a brick:Tag ;
    rdfs:label "Tank" .

tag:Tint a brick:Tag ;
    rdfs:label "Tint" .

tag:Tolerance a brick:Tag ;
    rdfs:label "Tolerance" .

tag:Variable a brick:Tag ;
    rdfs:label "Variable" .

tag:Ventilation a brick:Tag ;
    rdfs:label "Ventilation" .

tag:Volume a brick:Tag ;
    rdfs:label "Volume" .

qudt:applicableUnit a owl:ObjectProperty ;
    rdfs:label "applicable unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:Unit .

quantitykind:ElectricFluxDensity a qudt:QuantityKind ;
    rdfs:label "Electric Flux Density"@en ;
    dcterms:description "\\(\\textbf{Electric Flux Density}\\), also referred to as \\(\\textit{Electric Displacement}\\), is related to electric charge density by the following equation: \\(\\text{div} \\; D = \\rho\\), where \\(\\text{div}\\) denotes the divergence."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:ElectricDisplacement ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{D}  = \\epsilon_0 E + P\\), where \\(\\epsilon_0\\) is the electric constant, \\(\\mathbf{E} \\) is electric field strength, and \\(P\\) is electric polarization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{D}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricDisplacement ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:Enthalpy a qudt:QuantityKind ;
    rdfs:label "Enthalpy"@en ;
    dcterms:description "In thermodynamics, \\(\\textit{enthalpy}\\) is the sum of the internal energy \\(U\\) and the product of pressure \\(p\\) and volume \\(V\\) of a system. The characteristic function (also known as thermodynamic potential) \\(\\textit{enthalpy}\\) used to be called \\(\\textit{heat content}\\), which is why it is conventionally indicated by \\(H\\). The specific enthalpy of a working mass is a property of that mass used in thermodynamics, defined as \\(h=u+p \\cdot v\\),  where \\(u\\) is the specific internal energy, \\(p\\) is the pressure, and \\(v\\) is specific volume. In other words, \\(h = H / m\\) where \\(m\\) is the mass of the system. The SI unit for \\(\\textit{Specific Enthalpy}\\) is \\(\\textit{joules per kilogram}\\)"^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Enthalpy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = U + pV\\), where \\(U\\) is internal energy, \\(p\\) is pressure and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:MagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Magnetic flux density"@en ;
    dcterms:description "\"Magnetic Flux Density\" is a vector quantity and is the magnetic flux per unit area of a magnetic field at right angles to the magnetic force. It can be defined in terms of the effects the field has, for example by \\(B = F/q v \\sin \\theta\\), where \\(F\\) is the force a moving charge \\(q\\) would experience if it was travelling at a velocity \\(v\\) in a direction making an angle θ with that of the field. The magnetic field strength is also a vector quantity and is related to \\(B\\) by: \\(H = B/\\mu\\), where \\(\\mu\\) is the permeability of the medium."^^qudt:LatexString ;
    qudt:applicableUnit unit:GAUSS,
        unit:Gamma,
        unit:Gs,
        unit:KiloGAUSS,
        unit:MicroT,
        unit:MilliT,
        unit:NanoT,
        unit:T,
        unit:T_Ab ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1798"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{F}  = qv \\times B\\), where \\(F\\) is force and \\(v\\) is velocity of any test particle with electric charge \\(q\\)."^^qudt:LatexString ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticField .

brick:Chilled_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Chilled_Water .

brick:Dewpoint a brick:Quantity ;
    rdfs:label "Dewpoint" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    brick:hasQUDTReference quantitykind:DewPointTemperature .

brick:Differential_Temperature a brick:Quantity ;
    rdfs:label "Differential Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Temperature ;
    brick:hasQUDTReference quantitykind:Temperature .

brick:Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Effective_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Electric_Power a brick:Quantity ;
    rdfs:label "Electric Power" ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloV-A,
        unit:KiloV-A_Reactive,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaV-A,
        unit:MegaV-A_Reactive,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:V-A,
        unit:V-A_Reactive,
        unit:W ;
    skos:broader brick:Power ;
    skos:definition "Electric Power is the rate at which electrical energy is transferred by an electric circuit. In the simple case of direct current circuits, electric power can be calculated as the product of the potential difference in the circuit (V) and the amount of current flowing in the circuit (I): (P = VI), where (P) is the power, (V) is the potential difference, and (I) is the current. However, in general electric power is calculated by taking the integral of the vector cross-product of the electrical and magnetic fields over a specified area."@en ;
    skos:narrower brick:Active_Power,
        brick:Apparent_Power,
        brick:Complex_Power,
        brick:Reactive_Power,
        brick:Real_Power ;
    brick:hasQUDTReference quantitykind:ElectricPower .

brick:Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mode Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which mode a system, device or control loop is currently in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Point,
        tag:Status .

brick:Occupied_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Off Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:On_Status,
        brick:Status ;
    skos:definition "Indicates the on/off status of a control loop, relay or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Proportional Band Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Radiant_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Radiant_heating_and_cooling> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A temperature-controlled surface that provides fifty percent (50%) or more of the design heat transfer by thermal radiation."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:Radiant .

brick:Relative_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relative Humidity Sensor" ;
    rdfs:subClassOf brick:Humidity_Sensor ;
    skos:definition "Measures the present state of absolute humidity relative to a maximum humidity given the same temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Air .

brick:Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Unoccupied_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

qudt:Encoding a owl:Class ;
    rdfs:label "Encoding" ;
    dcterms:description "An encoding is a rule or algorithm that is used to convert data from a native, or unspecified form into a specific form that satisfies the encoding rules. Examples of encodings include character encodings, such as UTF-8." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bits ],
        [ a owl:Restriction ;
            owl:maxCardinality 1 ;
            owl:onProperty qudt:bytes ],
        qudt:Concept .

quantitykind:Force a qudt:QuantityKind ;
    rdfs:label "Force"@en ;
    dcterms:description "\"Force\" is an influence that causes mass to accelerate. It may be experienced as a lift, a push, or a pull. Force is defined by Newton's Second Law as \\(F = m \\times a \\), where \\(F\\) is force, \\(m\\) is mass and \\(a\\) is acceleration. Net force is mathematically equal to the time rate of change of the momentum of the body on which it acts. Since momentum is a vector quantity (has both a magnitude and direction), force also is a vector quantity."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiN,
        unit:DYN,
        unit:DeciN,
        unit:GM_F,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloLB_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Force"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F = \\frac{dp}{dt}\\), where \\(F\\) is the resultant force acting on a body, \\(p\\) is momentum of a body, and \\(t\\) is time."^^qudt:LatexString ;
    qudt:symbol "F" ;
    qudt:url "http://en.wikipedia.org/wiki/Force"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NumberDensity a qudt:QuantityKind ;
    rdfs:label "Number Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Number_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Number_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{N}{V}\\), where \\(N\\) is the number of particles and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "In physics, astronomy, and chemistry, number density (symbol: n) is a kind of quantity used to describe the degree of concentration of countable objects (atoms, molecules, dust particles, galaxies, etc.) in the three-dimensional physical space." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseVolume .

brick:Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Sensor" ;
    rdfs:subClassOf brick:Flow_Sensor ;
    skos:definition "Measures the rate of flow of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:CO2_Concentration a brick:Quantity ;
    rdfs:label "CO2Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of carbon dioxide in a medium" ;
    skos:narrower brick:Differential_CO2_Concentration .

brick:Leaving_Hot_Water a brick:Substance ;
    rdfs:label "Leaving Hot Water" ;
    skos:broader brick:Hot_Water,
        brick:Leaving_Water .

brick:Pressure a brick:Quantity ;
    rdfs:label "Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    skos:narrower brick:Atmospheric_Pressure,
        brick:Differential_Pressure,
        brick:Dynamic_Pressure,
        brick:Static_Pressure,
        brick:Velocity_Pressure ;
    brick:hasQUDTReference quantitykind:Pressure .

brick:Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Pressure_Setpoint ;
    skos:definition "Sets static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure .

brick:Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint,
        brick:Temperature_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures temperature: the physical property of matter that quantitatively expresses the common notions of hot and cold"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Flow Setpoint" ;
    rdfs:subClassOf brick:Flow_Setpoint ;
    skos:definition "Sets the target flow rate of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Water .

brick:Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

tag:Area a brick:Tag ;
    rdfs:label "Area" .

tag:Baseboard a brick:Tag ;
    rdfs:label "Baseboard" .

tag:Basin a brick:Tag ;
    rdfs:label "Basin" .

tag:Diffuser a brick:Tag ;
    rdfs:label "Diffuser" .

tag:Enclosed a brick:Tag ;
    rdfs:label "Enclosed" .

tag:Exchanger a brick:Tag ;
    rdfs:label "Exchanger" .

tag:Face a brick:Tag ;
    rdfs:label "Face" .

tag:Fault a brick:Tag ;
    rdfs:label "Fault" .

tag:Fixed a brick:Tag ;
    rdfs:label "Fixed" .

tag:Floor a brick:Tag ;
    rdfs:label "Floor" .

tag:Generation a brick:Tag ;
    rdfs:label "Generation" .

tag:Interface a brick:Tag ;
    rdfs:label "Interface" .

tag:Loss a brick:Tag ;
    rdfs:label "Loss" .

tag:Luminance a brick:Tag ;
    rdfs:label "Luminance" .

tag:Manual a brick:Tag ;
    rdfs:label "Manual" .

tag:PV a brick:Tag ;
    rdfs:label "PV" .

tag:Radiant a brick:Tag ;
    rdfs:label "Radiant" .

tag:Run a brick:Tag ;
    rdfs:label "Run" .

tag:Underfloor a brick:Tag ;
    rdfs:label "Underfloor" .

tag:Wash a brick:Tag ;
    rdfs:label "Wash" .

quantitykind:InternalEnergy a qudt:QuantityKind ;
    rdfs:label "Internal Energy"@en ;
    qudt:abbreviation "int-energy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Internal_energy"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:EnergyInternal,
        quantitykind:ThermodynamicEnergy ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Internal_energy"^^xsd:anyURI ;
    qudt:latexDefinition "For a closed thermodynamic system, \\(\\Delta U = Q + W\\), where \\(Q\\) is amount of heat transferred to the system and \\(W\\) is work done on the system provided that no chemical reactions occur."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Internal Energy\" is simply its energy. \"internal\" refers to the fact that some energy contributions are not considered. For instance, when the total system is in uniform motion, it has kinetic energy. This overall kinetic energy is never seen as part of the internal energy; one could call it external energy. Or, if the system is at constant non-zero height above the surface the Earth, it has constant potential energy in the gravitational field of the Earth. Gravitational energy is only taken into account when it plays a role in the phenomenon of interest, for instance in a colloidal suspension, where the gravitation influences the up- downward motion of the small particles comprising the colloid. In all other cases, gravitational energy is assumed not to contribute to the internal energy; one may call it again external energy." ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:GibbsEnergy,
        quantitykind:HelmholtzEnergy ;
    owl:sameAs quantitykind:EnergyInternal,
        quantitykind:ThermodynamicEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:Power a qudt:QuantityKind ;
    rdfs:label "Power"@en ;
    dcterms:description "Power is the rate at which work is performed or energy is transmitted, or the amount of energy required or expended for a given unit of time. As a rate of change of work done or the energy of a subsystem, power is: \\(P = W/t\\), where \\(P\\) is power, \\(W\\) is work and {t} is time."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloBTU_IT-PER-HR,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaBTU_IT-PER-HR,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:THM_US-PER-HR,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Power"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Power"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P = F \\cdot v\\), where \\(F\\) is force and \\(v\\) is velocity."^^qudt:LatexString ;
    qudt:symbol "P",
        "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Power_%28physics%29"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

brick:Air_Quality_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Quality Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "A sensor which provides a measure of air quality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Quality ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Quality,
        tag:Sensor .

brick:Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Position a brick:Quantity ;
    rdfs:label "Position" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The fraction of the full range of motion",
        "The fraction of the full range of motion"@en .

brick:Relative_Humidity a brick:Quantity ;
    rdfs:label "Relative Humidity" ;
    qudt:applicableUnit unit:PERCENT,
        unit:PERCENT_RH ;
    skos:broader brick:Humidity ;
    skos:definition "Relative Humidity} is the ratio of the partial pressure of water vapor in an air-water mixture to the saturated vapor pressure of water at a prescribed temperature. The relative humidity of air depends not only on temperature but also on the pressure of the system of interest. Relative Humidity is also referred to as \\text{Relative Partial Pressure. Relative partial pressure is often referred to as (RH) and expressed in percent."@en ;
    brick:hasQUDTReference quantitykind:RelativeHumidity .

brick:Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Flow Sensor" ;
    rdfs:subClassOf brick:Flow_Sensor ;
    skos:definition "Measures the rate of flow of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Water .

quantitykind:EnergyPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Energy per electric charge"@en ;
    dcterms:description "Voltage is a representation of the electric potential energy per unit charge. If a unit of electrical charge were placed in a location, the voltage indicates the potential energy of it at that point. In other words, it is a measurement of the energy contained within an electric field, or an electric circuit, at a given point. Voltage is a scalar quantity. The SI unit of voltage is the volt, such that \\(1 volt = 1 joule/coulomb\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:exactMatch quantitykind:ElectricPotential,
        quantitykind:ElectricPotentialDifference,
        quantitykind:Voltage ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://physics.about.com/od/glossary/g/voltage.htm"^^xsd:anyURI ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricPotential,
        quantitykind:ElectricPotentialDifference,
        quantitykind:Voltage .

quantitykind:MagneticFieldStrength_H a qudt:QuantityKind ;
    rdfs:label "Magnetic Field Strength"@en ;
    dcterms:description "\\(\\textbf{Magnetic Field Strength}\\) is a vector quantity obtained at a given point by subtracting the magnetization \\(M\\) from the magnetic flux density \\(B\\) divided by the magnetic constant \\(\\mu_0\\). The magnetic field strength is related to the total current density \\(J_{tot}\\) via: \\(\\text{rot} H = J_{tot}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:AT-PER-IN,
        unit:AT-PER-M,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM,
        unit:OERSTED ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-56"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{H} = \\frac{\\mathbf{B} }{\\mu_0} - M\\), where \\(\\mathbf{B} \\) is magnetic flux density, \\(\\mu_0\\) is the magnetic constant and \\(M\\) is magnetization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{H} \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCurrentPerUnitLength .

quantitykind:PowerPerArea a qudt:QuantityKind ;
    rdfs:label "Power Per Area"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:url "http://www.physicsforums.com/library.php?do=view_item&itemid=406"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Energy"@en ;
    dcterms:description "\\(\\textbf{Specific Energy}\\) is defined as the energy per unit mass. Common metric units are \\(J/kg\\). It is an intensive property. Contrast this with energy, which is an extensive property. There are two main types of specific energy: potential energy and specific kinetic energy. Others are the \\(\\textbf{gray}\\) and \\(\\textbf{sievert}\\), which are measures for the absorption of radiation. The concept of specific energy applies to a particular or theoretical way of extracting useful energy from the material considered that is usually implied by context. These intensive properties are each symbolized by using the lower case letter of the symbol for the corresponding extensive property, which is symbolized by a capital letter. For example, the extensive thermodynamic property enthalpy is symbolized by \\(H\\); specific enthalpy is symbolized by \\(h\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-LB,
        unit:BTU_TH-PER-LB,
        unit:CAL_IT-PER-GM,
        unit:CAL_TH-PER-GM,
        unit:ERG-PER-G,
        unit:ERG-PER-GM,
        unit:J-PER-GM,
        unit:J-PER-KiloGM,
        unit:KiloCAL-PER-GM,
        unit:KiloJ-PER-KiloGM,
        unit:KiloLB_F-FT-PER-LB,
        unit:MegaJ-PER-KiloGM,
        unit:N-M-PER-KiloGM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Specific_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(e = E/m\\), where \\(E\\) is energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy,
        unit:GRAY,
        unit:SV .

quantitykind:Voltage a qudt:QuantityKind ;
    rdfs:label "Voltage"@en ;
    dcterms:description """\\(\\textit{Voltage}\\), also referred to as \\(\\textit{Electric Tension}\\), is the difference between electrical potentials of two points. For an electric field within a medium, \\(U_{ab} = - \\int_{r_a}^{r_b} E . {dr}\\), where \\(E\\) is electric field strength.
For an irrotational electric field, the voltage is independent of the path between the two points \\(a\\) and \\(b\\)."""^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:exactMatch quantitykind:ElectricPotential,
        quantitykind:ElectricPotentialDifference,
        quantitykind:EnergyPerElectricCharge ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_{ab} = V_a - V_b\\), where \\(V_a\\) and \\(V_b\\) are electric potentials at points \\(a\\) and \\(b\\), respectively."^^qudt:LatexString ;
    qudt:latexSymbol "\\(U_{ab}\\)"^^qudt:LatexString ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricPotential,
        quantitykind:ElectricPotentialDifference,
        quantitykind:EnergyPerElectricCharge ;
    skos:broader quantitykind:EnergyPerElectricCharge .

brick:Electrical_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Equipment .

brick:Entering_Water a brick:Substance ;
    rdfs:label "Entering Water" ;
    skos:broader brick:Water ;
    skos:definition "Water that is entering a piece of equipment or system"@en .

brick:Max_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point .

brick:Min_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point .

brick:System a owl:Class,
        sh:NodeShape ;
    rdfs:label "System" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A System is a combination of equipment and auxiliary devices (e.g., controls, accessories, interconnecting means, and termi­nal elements) by which energy is transformed so it performs a specific function such as HVAC, service water heating, or lighting. (ASHRAE Dictionary)."@en ;
    sh:property [ sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Point ] [ sh:class brick:Loop ] [ sh:class brick:System ] [ sh:class brick:Location ] [ sh:class brick:PV_Array ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:System .

tag:Battery a brick:Tag ;
    rdfs:label "Battery" .

tag:CO a brick:Tag ;
    rdfs:label "CO" .

tag:Direction a brick:Tag ;
    rdfs:label "Direction" .

tag:HVAC a brick:Tag ;
    rdfs:label "HVAC" .

tag:Laboratory a brick:Tag ;
    rdfs:label "Laboratory" .

tag:Media a brick:Tag ;
    rdfs:label "Media" .

tag:Occupancy a brick:Tag ;
    rdfs:label "Occupancy" .

tag:Outdoor a brick:Tag ;
    rdfs:label "Outdoor" .

tag:Output a brick:Tag ;
    rdfs:label "Output" .

tag:Shade a brick:Tag ;
    rdfs:label "Shade" .

tag:Smoke a brick:Tag ;
    rdfs:label "Smoke" .

tag:Stack a brick:Tag ;
    rdfs:label "Stack" .

tag:Surface a brick:Tag ;
    rdfs:label "Surface" .

tag:Switch a brick:Tag ;
    rdfs:label "Switch" .

tag:VFD a brick:Tag ;
    rdfs:label "VFD" .

tag:Velocity a brick:Tag ;
    rdfs:label "Velocity" .

tag:Vertical a brick:Tag ;
    rdfs:label "Vertical" .

tag:Video a brick:Tag ;
    rdfs:label "Video" .

qudt:hasQuantityKind a owl:ObjectProperty ;
    rdfs:label "has quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:range qudt:QuantityKind ;
    owl:inverseOf qudt:isQuantityKindOf .

quantitykind:Area a qudt:QuantityKind ;
    rdfs:label "Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:baseCGSUnitDimensions "cm^2" ;
    qudt:baseSIUnitDimensions "\\(m^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Area"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:plainTextDescription "Area is a quantity expressing the two-dimensional size of a defined part of a surface, typically a region bounded by a closed curve." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Velocity a qudt:QuantityKind ;
    rdfs:label "Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-DAY,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI-PER-SEC,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Velocity"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:LinearVelocity ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Velocity"^^xsd:anyURI ;
    qudt:plainTextDescription "In kinematics, velocity is the speed of an object and a specification of its direction of motion. Speed describes only how fast an object is moving, whereas velocity gives both how fast and in what direction the object is moving. " ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearVelocity .

brick:AHU a owl:Class,
        sh:NodeShape ;
    rdfs:label "AHU" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Assembly consisting of sections containing a fan or fans and other necessary equipment to perform one or more of the following functions: circulating, filtration, heating, cooling, heat recovery, humidifying, dehumidifying, and mixing of air. Is usually connected to an air-distribution system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AHU,
        tag:Equipment .

brick:Collection a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection" ;
    rdfs:subClassOf brick:Class,
        brick:Entity ;
    sh:node [ sh:and ( [ sh:message "Collection is an exclusive top class." ;
                        sh:not [ sh:class brick:Equipment ] ] [ sh:message "Collection is an exclusive top class." ;
                        sh:not [ sh:class brick:Location ] ] [ sh:message "Collection is an exclusive top class." ;
                        sh:not [ sh:class brick:Substance ] ] [ sh:message "Collection is an exclusive top class." ;
                        sh:not [ sh:class brick:Quantity ] ] [ sh:message "Collection is an exclusive top class." ;
                        sh:not [ sh:class brick:Point ] ] ) ;
            sh:message "Collection is an exclusive top class." ] ;
    sh:property [ sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
            sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] [ sh:class brick:Point ] [ sh:class brick:Collection ] ) ;
            sh:path brick:hasPart ],
        bsh:isMeteredByShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection .

brick:Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that enable functionality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point .

brick:Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets humidity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity .

brick:Leaving_Water a brick:Substance ;
    rdfs:label "Leaving Water" ;
    skos:broader brick:Water ;
    skos:definition "Water that is leaving a piece of equipment or system"@en .

brick:Terminal_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Terminal Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A device that regulates the volumetric flow rate and/or the temperature of the controlled medium."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Terminal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Terminal,
        tag:Unit .

qudt:EnumeratedValue a owl:Class ;
    rdfs:label "Enumerated Value" ;
    dcterms:description """<p>This class is for all enumerated and/or coded values.  For example, it contains the dimension objects that are the basis elements in some abstract vector space associated with a quantity kind system. Another use is for the base dimensions for quantity systems. Each quantity kind system that defines a base set has a corresponding ordered enumeration whose elements are the dimension objects for the base quantity kinds. The order of the dimensions in the enumeration determines the canonical order of the basis elements in the corresponding abstract vector space.</p>

<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of Scalar Datatype. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty dcterms:description ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:abbreviation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:symbol ],
        qudt:Concept,
        dtype:EnumeratedValue .

quantitykind:Angle a qudt:QuantityKind ;
    rdfs:label "Angle"@en ;
    dcterms:description "The abstract notion of angle. Narrow concepts include plane angle and solid angle. While both plane angle and solid angle are dimensionless, they are actually length/length and area/area respectively."^^qudt:LatexString ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angle"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:PlaneAngle ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:PlaneAngle ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Time a qudt:QuantityKind ;
    rdfs:label "Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:KiloYR,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Time"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "Time is a basic component of the measuring system used to sequence events, to compare the durations of events and the intervals between them, and to quantify the motions of objects." ;
    qudt:symbol "t" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

brick:Exhaust_Air a brick:Substance ;
    rdfs:label "Exhaust Air" ;
    skos:broader brick:Air ;
    skos:definition "air that must be removed from a space due to contaminants, regardless of pressurization"@en .

brick:Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Any device with two or more blades or vanes attached to a rotating shaft used to produce an airflow for the purpose of comfort, ventilation, exhaust, heating, cooling, or any other gaseous transport."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan .

brick:Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Hot_Water a brick:Substance ;
    rdfs:label "Hot Water" ;
    skos:broader brick:Water ;
    skos:definition "Hot water used for HVAC heating or supply to hot taps"@en ;
    skos:narrower brick:Entering_Hot_Water,
        brick:Leaving_Hot_Water .

brick:Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Limit" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter that places an upper or lower bound on the range of permitted values of another point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point .

tag:Average a brick:Tag ;
    rdfs:label "Average" .

tag:Boiler a brick:Tag ;
    rdfs:label "Boiler" .

tag:Control a brick:Tag ;
    rdfs:label "Control" .

tag:Detection a brick:Tag ;
    rdfs:label "Detection" .

tag:Distribution a brick:Tag ;
    rdfs:label "Distribution" .

tag:Lockout a brick:Tag ;
    rdfs:label "Lockout" .

tag:Loop a brick:Tag ;
    rdfs:label "Loop" .

tag:Motor a brick:Tag ;
    rdfs:label "Motor" .

tag:Preheat a brick:Tag ;
    rdfs:label "Preheat" .

tag:Solar a brick:Tag ;
    rdfs:label "Solar" .

tag:Standby a brick:Tag ;
    rdfs:label "Standby" .

tag:Thermal a brick:Tag ;
    rdfs:label "Thermal" .

tag:Usage a brick:Tag ;
    rdfs:label "Usage" .

brick:Air_Quality a brick:Quantity ;
    rdfs:label "Air Quality" ;
    skos:narrower brick:Ammonia_Concentration,
        brick:CO2_Concentration,
        brick:CO_Concentration,
        brick:Formaldehyde_Concentration,
        brick:Methane_Concentration,
        brick:NO2_Concentration,
        brick:Ozone_Concentration,
        brick:PM10_Concentration,
        brick:PM1_Concentration,
        brick:PM2.5_Concentration,
        brick:Radioactivity_Concentration,
        brick:TVOC_Concentration .

brick:Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parameter" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "Parameter points are configuration settings used to guide the operation of equipment and control systems; for example they may provide bounds on valid setpoint values"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point .

brick:Point a owl:Class,
        sh:NodeShape ;
    rdfs:label "Point" ;
    rdfs:subClassOf brick:Class,
        brick:Entity ;
    sh:node [ sh:and ( [ sh:message "Point is an exclusive top class." ;
                        sh:not [ sh:class brick:Equipment ] ] [ sh:message "Point is an exclusive top class." ;
                        sh:not [ sh:class brick:Location ] ] [ sh:message "Point is an exclusive top class." ;
                        sh:not [ sh:class brick:Substance ] ] [ sh:message "Point is an exclusive top class." ;
                        sh:not [ sh:class brick:Quantity ] ] [ sh:message "Point is an exclusive top class." ;
                        sh:not [ sh:class brick:Collection ] ] ) ;
            sh:message "Point is an exclusive top class." ] ;
    sh:property [ sh:maxCount 0 ;
            sh:message "Points cannot have locations; use 'isPointOf' instead" ;
            sh:path brick:hasLocation ],
        bsh:hasQuantityShape,
        bsh:hasSubstanceShape,
        bsh:hasUnitShape,
        bsh:hasaggregateShape,
        bsh:haslastKnownValueShape,
        bsh:haspowerComplexityShape,
        bsh:haspowerFlowShape,
        bsh:isPointOfShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point .

brick:Chilled_Water a brick:Substance ;
    rdfs:label "Chilled Water" ;
    skos:broader brick:Water ;
    skos:definition "water used as a cooling medium (particularly in air-conditioning systems or in processes) at below ambient temperature."@en ;
    skos:narrower brick:Entering_Chilled_Water,
        brick:Leaving_Chilled_Water .

brick:Entity a owl:Class ;
    sh:property bsh:hasLocationShape,
        bsh:hasdeprecationShape,
        bsh:isReplacedByShape,
        bsh:latitudeShape,
        bsh:longitudeShape,
        bsh:timestampShape .

brick:Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Meter" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that measure usage or consumption of some media --- typically a form energy or power."@en ;
    sh:property bsh:hasSubMeterShape,
        bsh:hasSubstanceShape,
        bsh:hasisVirtualMeterShape,
        bsh:isSubMeterOfShape,
        bsh:metersShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter .

brick:Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Space" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A part of the physical world or a virtual world whose 3D spatial extent is bounded actually or theoretically, and provides for certain functions within the zone it is contained in."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space .

brick:Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

tag:Disable a brick:Tag ;
    rdfs:label "Disable" .

tag:Frequency a brick:Tag ;
    rdfs:label "Frequency" .

tag:Natural a brick:Tag ;
    rdfs:label "Natural" .

tag:Plenum a brick:Tag ;
    rdfs:label "Plenum" .

tag:Start a brick:Tag ;
    rdfs:label "Start" .

tag:Station a brick:Tag ;
    rdfs:label "Station" .

tag:Steam a brick:Tag ;
    rdfs:label "Steam" .

tag:Stop a brick:Tag ;
    rdfs:label "Stop" .

tag:Storage a brick:Tag ;
    rdfs:label "Storage" .

tag:Telecom a brick:Tag ;
    rdfs:label "Telecom" .

qudt:QuantityKindDimensionVector a owl:Class ;
    rdfs:label "Quantity Kind Dimension Vector" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI,
        "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A  <em>Quantity Kind Dimension Vector</em> describes the dimensionality of a quantity kind in the context of a system of units. In the SI system of units, the dimensions of a quantity kind are expressed as a product of the basic physical dimensions mass (\\(M\\)), length (\\(L\\)), time (\\(T\\)) current (\\(I\\)), amount of substance (\\(N\\)), luminous intensity (\\(J\\)) and absolute temperature (\\(\\theta\\)) as \\(dim \\, Q = L^{\\alpha} \\, M^{\\beta} \\, T^{\\gamma} \\, I ^{\\delta} \\, \\theta ^{\\epsilon} \\, N^{\\eta} \\, J ^{\\nu}\\).</p>

<p class="lm-para">The rational powers of the dimensional exponents, \\(\\alpha, \\, \\beta, \\, \\gamma, \\, \\delta, \\, \\epsilon, \\, \\eta, \\, \\nu\\), are positive, negative, or zero.</p>

<p class="lm-para">For example, the dimension of the physical quantity kind \\(\\it{speed}\\) is \\(\\boxed{length/time}\\), \\(L/T\\) or \\(LT^{-1}\\), and the dimension of the physical quantity kind force is \\(\\boxed{mass \\times acceleration}\\) or \\(\\boxed{mass \\times (length/time)/time}\\), \\(ML/T^2\\) or \\(MLT^{-2}\\) respectively.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForAmountOfSubstance ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForElectricCurrent ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForLength ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForLuminousIntensity ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForMass ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForThermodynamicTemperature ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionExponentForTime ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionlessExponent ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexDefinition ],
        qudt:Concept .

brick:Humidity a brick:Quantity ;
    rdfs:label "Humidity" ;
    skos:narrower brick:Absolute_Humidity,
        brick:Relative_Humidity .

brick:Outside_Air a brick:Substance ;
    rdfs:label "Outside Air" ;
    skos:broader brick:Air ;
    skos:definition "air external to a defined zone (e.g., corridors)."@en .

brick:Return_Air a brick:Substance ;
    rdfs:label "Return Air" ;
    skos:broader brick:Air ;
    skos:definition "air removed from a space to be recirculated or exhausted. Air extracted from a space and totally or partially returned to an air conditioner, furnace, or other heating, cooling, or ventilating system."@en .

quantitykind:Temperature a qudt:QuantityKind ;
    rdfs:label "Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Temperature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:plainTextDescription "Temperature is a physical property of matter that quantitatively expresses the common notions of hot and cold. Objects of low temperature are cold, while various degrees of higher temperatures are referred to as warm or hot. Heat spontaneously flows from bodies of a higher temperature to bodies of lower temperature, at a rate that increases with the temperature difference and the thermal conductivity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ThermodynamicTemperature .

brick:Static_Pressure a brick:Quantity ;
    rdfs:label "Static Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    skos:narrower brick:Differential_Static_Pressure ;
    brick:hasQUDTReference quantitykind:StaticPressure .

brick:Temperature_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "Parameters relevant to temperature-related systems and points"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Temperature .

tag:Box a brick:Tag ;
    rdfs:label "Box" .

tag:Bypass a brick:Tag ;
    rdfs:label "Bypass" .

tag:Coil a brick:Tag ;
    rdfs:label "Coil" .

tag:Dewpoint a brick:Tag ;
    rdfs:label "Dewpoint" .

tag:Effective a brick:Tag ;
    rdfs:label "Effective" .

tag:Electrical a brick:Tag ;
    rdfs:label "Electrical" .

tag:Gain a brick:Tag ;
    rdfs:label "Gain" .

tag:Mixed a brick:Tag ;
    rdfs:label "Mixed" .

tag:Office a brick:Tag ;
    rdfs:label "Office" .

tag:Radiator a brick:Tag ;
    rdfs:label "Radiator" .

tag:Relative a brick:Tag ;
    rdfs:label "Relative" .

tag:Voltage a brick:Tag ;
    rdfs:label "Voltage" .

quantitykind:Pressure a qudt:QuantityKind ;
    rdfs:label "Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PicoPA,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pressure"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p = \\frac{dF}{dA}\\), where \\(dF\\) is the force component perpendicular to the surface element of area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Pressure is an effect which occurs when a force is applied on a surface. Pressure is the amount of force acting on a unit area. Pressure is distinct from stress, as the former is the ratio of the component of force normal to a surface to the surface area. Stress is a tensor that relates the vector force to the vector area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

<https://brickschema.org/schema/1.3/Brick> a owl:Ontology ;
    rdfs:label "Brick" ;
    dcterms:creator ( [ a sdo:Person ;
                sdo:email "gtfierro@mines.edu" ;
                sdo:name "Gabe Fierro" ] [ a sdo:Person ;
                sdo:email "jbkoh@eng.ucsd.edu" ;
                sdo:name "Jason Koh" ] ) ;
    dcterms:issued "2016-11-16" ;
    dcterms:license <https://github.com/BrickSchema/brick/blob/master/LICENSE> ;
    dcterms:modified "2023-04-25" ;
    dcterms:publisher [ a sdo:Consortium ;
            sdo:legalName "Brick Consortium, Inc" ;
            sdo:sameAs <https://brickschema.org/consortium/> ] ;
    rdfs:isDefinedBy <https://brickschema.org/schema/1.3/Brick> ;
    rdfs:seeAlso <https://brickschema.org> ;
    owl:imports <http://data.ashrae.org/bacnet/2020>,
        <http://qudt.org/2.1/schema/facade/qudt>,
        <http://qudt.org/2.1/schema/shacl/overlay/qudt>,
        <http://qudt.org/2.1/schema/shacl/qudt>,
        <http://qudt.org/2.1/vocab/currency>,
        <http://qudt.org/2.1/vocab/dimensionvector>,
        <http://qudt.org/2.1/vocab/quantitykind>,
        <http://qudt.org/2.1/vocab/sou>,
        <http://qudt.org/2.1/vocab/unit>,
        <http://www.w3.org/ns/shacl> ;
    owl:versionInfo "1.3.0" ;
    sh:declare [ sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
            sh:prefix "sh" ],
        [ sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
            sh:prefix "rdf" ],
        [ sh:namespace "https://brickschema.org/schema/Brick#"^^xsd:anyURI ;
            sh:prefix "brick" ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs" ],
        [ sh:namespace "http://www.w3.org/2002/07/owl#"^^xsd:anyURI ;
            sh:prefix "owl" ] .

brick:hasPart a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has part" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isPartOf ;
    skos:definition "The subject is composed in part of the entity given by the object"@en .

tag:Current a brick:Tag ;
    rdfs:label "Current" .

tag:Enthalpy a brick:Tag ;
    rdfs:label "Enthalpy" .

tag:Matter a brick:Tag ;
    rdfs:label "Matter" .

tag:Particulate a brick:Tag ;
    rdfs:label "Particulate" .

tag:Unit a brick:Tag ;
    rdfs:label "Unit" .

brick:Discharge_Air a brick:Substance ;
    rdfs:label "Discharge Air" ;
    owl:sameAs brick:Supply_Air ;
    skos:broader brick:Air ;
    skos:definition "the air exiting the registers (vents)."@en .

brick:Supply_Air a brick:Substance ;
    rdfs:label "Supply Air" ;
    owl:sameAs brick:Discharge_Air ;
    skos:broader brick:Air ;
    skos:definition "(1) air delivered by mechanical or natural ventilation to a space, composed of any combination of outdoor air, recirculated air, or transfer air. (2) air entering a space from an air-conditioning, heating, or ventilating apparatus for the purpose of comfort conditioning. Supply air is generally filtered, fan forced, and either heated, cooled, humidified, or dehumidified as necessary to maintain specified conditions. Only the quantity of outdoor air within the supply airflow may be used as replacement air."@en .

tag:Collection a brick:Tag ;
    rdfs:label "Collection" .

tag:Common a brick:Tag ;
    rdfs:label "Common" .

tag:Domestic a brick:Tag ;
    rdfs:label "Domestic" .

tag:Pump a brick:Tag ;
    rdfs:label "Pump" .

tag:CO2 a brick:Tag ;
    rdfs:label "CO2" .

tag:Electric a brick:Tag ;
    rdfs:label "Electric" .

tag:Filter a brick:Tag ;
    rdfs:label "Filter" .

tag:Step a brick:Tag ;
    rdfs:label "Step" .

qudt:Unit a owl:Class ;
    rdfs:label "Unit" ;
    dcterms:description "A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension). For example, the meter is a quantity of length that has been rigorously defined and standardized by the BIPM (International Board of Weights and Measures). Any measurement of the length can be expressed as a number multiplied by the unit meter. More formally, the value of a physical quantity Q with respect to a unit (U) is expressed as the scalar multiple of a real number (n) and U, as  \\(Q = nU\\)."^^qudt:LatexString ;
    qudt:informativeReference "http://dbpedia.org/resource/Category:Units_of_measure"^^xsd:anyURI,
        "http://www.allmeasures.com/Fullconversion.asp"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:hasQuantityKind ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:hasDimensionVector ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:qkdvDenominator ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:qkdvNumerator ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:SystemOfUnits ;
            owl:onProperty qudt:applicableSystem ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:UCUMcs ;
            owl:onProperty qudt:ucumCode ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:string ;
            owl:onProperty qudt:iec61360Code ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:string ;
            owl:onProperty qudt:udunitsCode ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:string ;
            owl:onProperty qudt:uneceCommonCode ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:conversionMultiplier ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:conversionOffset ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:hasDimensionVector ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:mathMLdefinition ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:qkdvDenominator ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:qkdvNumerator ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:expression ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexDefinition ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexSymbol ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:siUnitsExpression ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:symbol ],
        qudt:Concept,
        qudt:Verifiable .

quantitykind:Dimensionless a qudt:QuantityKind ;
    rdfs:label "Dimensionless"@en ;
    dcterms:description "In dimensional analysis, a dimensionless quantity or quantity of dimension one is a quantity without an associated physical dimension. It is thus a \"pure\" number, and as such always has a dimension of 1. Dimensionless quantities are widely used in mathematics, physics, engineering, economics, and in everyday life (such as in counting). Numerous well-known quantities, such as \\(\\pi\\), \\(\\epsilon\\), and \\(\\psi\\), are dimensionless. By contrast, non-dimensionless quantities are measured in units of length, area, time, etc. Dimensionless quantities are often defined as products or ratios of quantities that are not dimensionless, but whose dimensions cancel out when their powers are multiplied."^^qudt:LatexString ;
    qudt:applicableUnit unit:DECADE,
        unit:Flight,
        unit:GigaBasePair,
        unit:HeartBeat,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:RPK,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dimensionless_quantity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensionless_quantity"^^xsd:anyURI ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

brick:Differential_Pressure a brick:Quantity ;
    rdfs:label "Differential Pressure" ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Pressure ;
    skos:narrower brick:Differential_Dynamic_Pressure,
        brick:Differential_Static_Pressure .

tag:Building a brick:Tag ;
    rdfs:label "Building" .

tag:Damper a brick:Tag ;
    rdfs:label "Damper" .

tag:Energy a brick:Tag ;
    rdfs:label "Energy" .

tag:Fire a brick:Tag ;
    rdfs:label "Fire" .

tag:Security a brick:Tag ;
    rdfs:label "Security" .

tag:Service a brick:Tag ;
    rdfs:label "Service" .

brick:Location a owl:Class,
        sh:NodeShape ;
    rdfs:label "Location" ;
    rdfs:subClassOf brick:Class,
        brick:Entity ;
    sh:node [ sh:and ( [ sh:message "Location is an exclusive top class." ;
                        sh:not [ sh:class brick:Point ] ] [ sh:message "Location is an exclusive top class." ;
                        sh:not [ sh:class brick:Equipment ] ] [ sh:message "Location is an exclusive top class." ;
                        sh:not [ sh:class brick:Substance ] ] [ sh:message "Location is an exclusive top class." ;
                        sh:not [ sh:class brick:Quantity ] ] [ sh:message "Location is an exclusive top class." ;
                        sh:not [ sh:class brick:Collection ] ] ) ;
            sh:message "Location is an exclusive top class." ] ;
    sh:property [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Equipment ;
            sh:message "Locations can be fed only by other Equipment." ;
            sh:path brick:isFedBy ],
        bsh:hasPointShape,
        bsh:hasareaShape,
        bsh:hascoordinatesShape,
        bsh:hasgrossAreaShape,
        bsh:hasnetAreaShape,
        bsh:hasthermalTransmittanceShape,
        bsh:hasvolumeShape,
        bsh:isLocationOfShape,
        bsh:isMeteredByShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location .

brick:Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Setpoint" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=setpoint>,
        "https://xp20.ashrae.org/terminology/index.php?term=setpoint" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Status ;
    skos:definition "A Setpoint is an input value at which the desired property is set"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint .

brick:Water a brick:Substance ;
    rdfs:label "Water" ;
    skos:broader brick:Liquid ;
    skos:definition "transparent, odorless, tasteless liquid; a compound of hydrogen and oxygen (H2O), containing 11.188% hydrogen and 88.812% oxygen by mass; freezing at 32°F (0°C); boiling near 212°F (100°C)."@en ;
    skos:narrower brick:Blowdown_Water,
        brick:Bypass_Water,
        brick:Chilled_Water,
        brick:Collection_Basin_Water,
        brick:Condenser_Water,
        brick:Deionized_Water,
        brick:Domestic_Water,
        brick:Entering_Water,
        brick:Hot_Water,
        brick:Leaving_Water,
        brick:Makeup_Water,
        brick:Potable_Water .

brick:Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=alarm> ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "Alarm points are signals (either audible or visual) that alert an operator to an off-normal condition which requires some form of corrective action"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point .

tag:Demand a brick:Tag ;
    rdfs:label "Demand" .

tag:Gas a brick:Tag ;
    rdfs:label "Gas" .

tag:Meter a brick:Tag ;
    rdfs:label "Meter" .

tag:Panel a brick:Tag ;
    rdfs:label "Panel" .

tag:Position a brick:Tag ;
    rdfs:label "Position" .

qudt:Concept a owl:Class ;
    rdfs:label "QUDT Concept" ;
    rdfs:comment "The root class for all QUDT concepts."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:Rule ;
            owl:onProperty qudt:hasRule ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty dcterms:description ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty dcterms:isReplacedBy ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:abbreviation ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:deprecated ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:id ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:plainTextDescription ],
        owl:Thing .

brick:Relationship a owl:ObjectProperty ;
    rdfs:label "Relationship" ;
    skos:definition "Super-property of all Brick relationships between entities (Equipment, Location, Point)" .

tag:Emergency a brick:Tag ;
    rdfs:label "Emergency" .

tag:Medium a brick:Tag ;
    rdfs:label "Medium" .

tag:On a brick:Tag ;
    rdfs:label "On" .

tag:Power a brick:Tag ;
    rdfs:label "Power" .

tag:Speed a brick:Tag ;
    rdfs:label "Speed" .

quantitykind:Mass a qudt:QuantityKind ;
    rdfs:label "Mass"@en ;
    dcterms:description "In physics, mass, more specifically inertial mass, can be defined as a quantitative measure of an object's resistance to acceleration. The SI unit of mass is the kilogram (\\(kg\\))"^^qudt:LatexString ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:FemtoGM,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass"^^xsd:anyURI ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

tag:Condenser a brick:Tag ;
    rdfs:label "Condenser" .

quantitykind:Energy a qudt:QuantityKind ;
    rdfs:label "Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloBTU_IT,
        unit:KiloBTU_TH,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy is the quantity characterizing the ability of a system to do work." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:Entropy,
        quantitykind:GibbsEnergy,
        quantitykind:HelmholtzEnergy,
        quantitykind:InternalEnergy,
        quantitykind:Work .

brick:Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Equipment" ;
    rdfs:subClassOf brick:Class,
        brick:Entity ;
    skos:definition "devices that serve all or part of the building and may include electric power, lighting, transportation, or service water heating, including, but not limited to, furnaces, boilers, air conditioners, heat pumps, chillers, water heaters, lamps, luminaires, ballasts, elevators, escalators, or other devices or installations."@en ;
    sh:node [ sh:and ( [ sh:message "Equipment is an exclusive top class." ;
                        sh:not [ sh:class brick:Point ] ] [ sh:message "Equipment is an exclusive top class." ;
                        sh:not [ sh:class brick:Location ] ] [ sh:message "Equipment is an exclusive top class." ;
                        sh:not [ sh:class brick:Substance ] ] [ sh:message "Equipment is an exclusive top class." ;
                        sh:not [ sh:class brick:Quantity ] ] [ sh:message "Equipment is an exclusive top class." ;
                        sh:not [ sh:class brick:Collection ] ] ) ;
            sh:message "Equipment is an exclusive top class." ] ;
    sh:property [ sh:class brick:Equipment ;
            sh:message "A piece of Equipment's parts should be always other Equipment." ;
            sh:path brick:hasPart ],
        [ sh:message "Equipment can be part of a Collection, System or other Equipment." ;
            sh:or ( [ sh:class brick:System ] [ sh:class brick:Equipment ] [ sh:class brick:Collection ] ) ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Location ;
            sh:message "A piece of Equipment can be located only at a Location" ;
            sh:path brick:hasLocation ],
        [ sh:message "A piece of Equipment can feed a Equipment or Location." ;
            sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] ) ;
            sh:path brick:feeds ],
        bsh:hasInputSubstanceShape,
        bsh:hasOutputSubstanceShape,
        bsh:hasPointShape,
        bsh:hasazimuthShape,
        bsh:hasconversionEfficiencyShape,
        bsh:hascoordinatesShape,
        bsh:hascurrentFlowTypeShape,
        bsh:haselectricalPhaseCountShape,
        bsh:haselectricalPhasesShape,
        bsh:hasmeasuredPowerInputShape,
        bsh:hasmeasuredPowerOutputShape,
        bsh:hasoperationalStageCountShape,
        bsh:hasoperationalStageShape,
        bsh:haspanelAreaShape,
        bsh:haspowerComplexityShape,
        bsh:haspowerFlowShape,
        bsh:hasratedCurrentInputShape,
        bsh:hasratedCurrentOutputShape,
        bsh:hasratedMaximumCurrentInputShape,
        bsh:hasratedMaximumCurrentOutputShape,
        bsh:hasratedMaximumVoltageInputShape,
        bsh:hasratedMaximumVoltageOutputShape,
        bsh:hasratedMinimumCurrentInputShape,
        bsh:hasratedMinimumCurrentOutputShape,
        bsh:hasratedMinimumVoltageInputShape,
        bsh:hasratedMinimumVoltageOutputShape,
        bsh:hasratedPowerInputShape,
        bsh:hasratedPowerOutputShape,
        bsh:hasratedVoltageInputShape,
        bsh:hasratedVoltageOutputShape,
        bsh:hastemperatureCoefficientofPmaxShape,
        bsh:hastiltShape,
        bsh:hasvolumeShape,
        bsh:isMeteredByShape ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment .

tag:Mode a brick:Tag ;
    rdfs:label "Mode" .

brick:HVAC_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "See Heating_Ventilation_Air_Conditioning_System"@en ;
    sh:property [ sh:or ( [ sh:class brick:HVAC_Equipment ] [ sh:class brick:Valve ] [ sh:class brick:Location ] ) ;
            sh:path brick:feeds ],
        [ sh:or ( [ sh:class brick:HVAC_Equipment ] [ sh:class brick:Valve ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HVAC .

tag:Fan a brick:Tag ;
    rdfs:label "Fan" .

tag:Off a brick:Tag ;
    rdfs:label "Off" .

brick:Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Command" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "A Command is an output point that directly determines the behavior of equipment and/or affects relevant operational points."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point .

tag:Safety a brick:Tag ;
    rdfs:label "Safety" .

brick:Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Room" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "Base class for all more specific room types."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room .

brick:Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Status" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint ;
    skos:definition "A Status is input point that reports the current operating mode, state, position, or condition of an item. Statuses are observations and should be considered 'read-only'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status .

tag:Band a brick:Tag ;
    rdfs:label "Band" .

tag:Enable a brick:Tag ;
    rdfs:label "Enable" .

tag:Level a brick:Tag ;
    rdfs:label "Level" .

tag:Integral a brick:Tag ;
    rdfs:label "Integral" .

brick:EntityProperty a owl:Class ;
    rdfs:subClassOf owl:ObjectProperty .

brick:Air a brick:Substance ;
    rdfs:label "Air" ;
    skos:broader brick:Gas ;
    skos:definition "the invisible gaseous substance surrounding the earth, a mixture mainly of oxygen and nitrogen."@en ;
    skos:narrower brick:Building_Air,
        brick:Bypass_Air,
        brick:Discharge_Air,
        brick:Exhaust_Air,
        brick:Mixed_Air,
        brick:Outside_Air,
        brick:Return_Air,
        brick:Supply_Air,
        brick:Zone_Air .

brick:Flow a brick:Quantity ;
    rdfs:label "Flow" ;
    qudt:applicableUnit unit:BBL_UK_PET-PER-DAY,
        unit:BBL_UK_PET-PER-HR,
        unit:BBL_UK_PET-PER-MIN,
        unit:BBL_UK_PET-PER-SEC,
        unit:BBL_US-PER-DAY,
        unit:BBL_US-PER-MIN,
        unit:BBL_US_PET-PER-HR,
        unit:BBL_US_PET-PER-SEC,
        unit:BU_UK-PER-DAY,
        unit:BU_UK-PER-HR,
        unit:BU_UK-PER-MIN,
        unit:BU_UK-PER-SEC,
        unit:BU_US_DRY-PER-DAY,
        unit:BU_US_DRY-PER-HR,
        unit:BU_US_DRY-PER-MIN,
        unit:BU_US_DRY-PER-SEC,
        unit:CentiM3-PER-DAY,
        unit:CentiM3-PER-HR,
        unit:CentiM3-PER-MIN,
        unit:CentiM3-PER-SEC,
        unit:DeciM3-PER-DAY,
        unit:DeciM3-PER-HR,
        unit:DeciM3-PER-MIN,
        unit:DeciM3-PER-SEC,
        unit:FT3-PER-DAY,
        unit:FT3-PER-HR,
        unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_UK-PER-DAY,
        unit:GAL_UK-PER-HR,
        unit:GAL_UK-PER-MIN,
        unit:GAL_UK-PER-SEC,
        unit:GAL_US-PER-DAY,
        unit:GAL_US-PER-HR,
        unit:GAL_US-PER-MIN,
        unit:GAL_US-PER-SEC,
        unit:GI_UK-PER-DAY,
        unit:GI_UK-PER-HR,
        unit:GI_UK-PER-MIN,
        unit:GI_UK-PER-SEC,
        unit:GI_US-PER-DAY,
        unit:GI_US-PER-HR,
        unit:GI_US-PER-MIN,
        unit:GI_US-PER-SEC,
        unit:IN3-PER-HR,
        unit:IN3-PER-MIN,
        unit:IN3-PER-SEC,
        unit:KiloL-PER-HR,
        unit:L-PER-DAY,
        unit:L-PER-HR,
        unit:L-PER-MIN,
        unit:L-PER-SEC,
        unit:M3-PER-DAY,
        unit:M3-PER-HR,
        unit:M3-PER-MIN,
        unit:M3-PER-SEC,
        unit:MilliL-PER-DAY,
        unit:MilliL-PER-HR,
        unit:MilliL-PER-MIN,
        unit:MilliL-PER-SEC,
        unit:OZ_VOL_UK-PER-DAY,
        unit:OZ_VOL_UK-PER-HR,
        unit:OZ_VOL_UK-PER-MIN,
        unit:OZ_VOL_UK-PER-SEC,
        unit:OZ_VOL_US-PER-DAY,
        unit:OZ_VOL_US-PER-HR,
        unit:OZ_VOL_US-PER-MIN,
        unit:OZ_VOL_US-PER-SEC,
        unit:PINT_UK-PER-DAY,
        unit:PINT_UK-PER-HR,
        unit:PINT_UK-PER-MIN,
        unit:PINT_UK-PER-SEC,
        unit:PINT_US-PER-DAY,
        unit:PINT_US-PER-HR,
        unit:PINT_US-PER-MIN,
        unit:PINT_US-PER-SEC,
        unit:PK_UK-PER-DAY,
        unit:PK_UK-PER-HR,
        unit:PK_UK-PER-MIN,
        unit:PK_UK-PER-SEC,
        unit:PK_US_DRY-PER-DAY,
        unit:PK_US_DRY-PER-HR,
        unit:PK_US_DRY-PER-MIN,
        unit:PK_US_DRY-PER-SEC,
        unit:QT_UK-PER-DAY,
        unit:QT_UK-PER-HR,
        unit:QT_UK-PER-MIN,
        unit:QT_UK-PER-SEC,
        unit:QT_US-PER-DAY,
        unit:QT_US-PER-HR,
        unit:QT_US-PER-MIN,
        unit:QT_US-PER-SEC,
        unit:YD3-PER-DAY,
        unit:YD3-PER-HR,
        unit:YD3-PER-MIN,
        unit:YD3-PER-SEC ;
    skos:narrower brick:Flow_Loss ;
    brick:hasQUDTReference quantitykind:VolumeFlowRate .

tag:Exhaust a brick:Tag ;
    rdfs:label "Exhaust" .

tag:Proportional a brick:Tag ;
    rdfs:label "Proportional" .

tag:Zone a brick:Tag ;
    rdfs:label "Zone" .

brick:Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sensor" ;
    rdfs:seeAlso "https://xp20.ashrae.org/terminology/index.php?term=Sensor" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Setpoint,
        brick:Status ;
    skos:definition "A Sensor is an input point that represents the value of a device or instrument designed to detect and measure a variable (ASHRAE Dictionary)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor .

tag:Time a brick:Tag ;
    rdfs:label "Time" .

tag:Deadband a brick:Tag ;
    rdfs:label "Deadband" .

tag:Shed a brick:Tag ;
    rdfs:label "Shed" .

quantitykind:DimensionlessRatio a qudt:QuantityKind ;
    rdfs:label "Dimensionless Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:FRACTION,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PERMITTIVITY_REL,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTM,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:Length a qudt:QuantityKind ;
    rdfs:label "Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Length"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Length"^^xsd:anyURI ;
    qudt:plainTextDescription "In geometric measurements, length most commonly refers to the est dimension of an object. In some contexts, the term \"length\" is reserved for a certain dimension of an object along which the length is measured." ;
    qudt:symbol "l" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

tag:High a brick:Tag ;
    rdfs:label "High" .

tag:Return a brick:Tag ;
    rdfs:label "Return" .

brick:Substance a owl:Class ;
    rdfs:label "Substance" ;
    rdfs:subClassOf sosa:FeatureOfInterest,
        brick:Measurable .

tag:Low a brick:Tag ;
    rdfs:label "Low" .

tag:Valve a brick:Tag ;
    rdfs:label "Valve" .

tag:Humidity a brick:Tag ;
    rdfs:label "Humidity" .

tag:Load a brick:Tag ;
    rdfs:label "Load" .

tag:Max a brick:Tag ;
    rdfs:label "Max" .

tag:Min a brick:Tag ;
    rdfs:label "Min" .

tag:Occupied a brick:Tag ;
    rdfs:label "Occupied" .

tag:Unoccupied a brick:Tag ;
    rdfs:label "Unoccupied" .

tag:Outside a brick:Tag ;
    rdfs:label "Outside" .

tag:Entering a brick:Tag ;
    rdfs:label "Entering" .

brick:Temperature a brick:Quantity ;
    rdfs:label "Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    skos:narrower brick:Differential_Temperature,
        brick:Dry_Bulb_Temperature,
        brick:Operative_Temperature,
        brick:Radiant_Temperature,
        brick:Wet_Bulb_Temperature ;
    brick:hasQUDTReference quantitykind:Temperature .

tag:Reset a brick:Tag ;
    rdfs:label "Reset" .

tag:Leaving a brick:Tag ;
    rdfs:label "Leaving" .

tag:Chilled a brick:Tag ;
    rdfs:label "Chilled" .

tag:Static a brick:Tag ;
    rdfs:label "Static" .

brick:hasUnit a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has unit" ;
    rdfs:subPropertyOf brick:Relationship ;
    skos:definition "The QUDT unit associated with this Brick entity (usually a Brick Point instance or Entity Property)"@en .

bsh:NumericValue a rdf:List ;
    rdf:first [ sh:datatype xsd:float ] ;
    rdf:rest ( [ sh:datatype xsd:decimal ] [ sh:datatype xsd:integer ] [ sh:datatype xsd:double ] ) .

tag:System a brick:Tag ;
    rdfs:label "System" .

owl:DatatypeProperty rdfs:subClassOf rdf:Property .

tag:PID a brick:Tag ;
    rdfs:label "PID" .

brick:value a rdf:Property ;
    rdfs:label "Value" ;
    rdfs:subPropertyOf s223:hasValue,
        qudt:value,
        brick:Relationship ;
    skos:definition "The basic value of an entity property" .

tag:Cool a brick:Tag ;
    rdfs:label "Cool" .

brick:Quantity a owl:Class ;
    rdfs:label "Quantity" ;
    rdfs:subClassOf qudt:QuantityKind,
        skos:Concept,
        sosa:ObservableProperty,
        brick:Measurable ;
    sh:property bsh:hasQUDTReferenceShape .

brick:EntityPropertyValue a owl:Class .

bsh:ValueShape a owl:Class .

tag:Limit a brick:Tag ;
    rdfs:label "Limit" .

tag:Command a brick:Tag ;
    rdfs:label "Command" .

tag:Room a brick:Tag ;
    rdfs:label "Room" .

tag:Hot a brick:Tag ;
    rdfs:label "Hot" .

tag:Discharge a brick:Tag ;
    rdfs:label "Discharge" .

tag:Supply a brick:Tag ;
    rdfs:label "Supply" .

tag:Heat a brick:Tag ;
    rdfs:label "Heat" .

tag:Alarm a brick:Tag ;
    rdfs:label "Alarm" .

tag:Differential a brick:Tag ;
    rdfs:label "Differential" .

tag:Space a brick:Tag ;
    rdfs:label "Space" .

tag:Status a brick:Tag ;
    rdfs:label "Status" .

tag:Pressure a brick:Tag ;
    rdfs:label "Pressure" .

tag:Location a brick:Tag ;
    rdfs:label "Location" .

tag:Flow a brick:Tag ;
    rdfs:label "Flow" .

tag:Parameter a brick:Tag ;
    rdfs:label "Parameter" .

<http://qudt.org/2.1/schema/qudt> a owl:Ontology ;
    rdfs:label "QUDT Schema - Version 2.1.26" ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-SCHEMA ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:imports <http://www.linkedmodel.org/schema/dtype>,
        <http://www.linkedmodel.org/schema/vaem>,
        <http://www.w3.org/2004/02/skos/core> ;
    owl:versionIRI <http://qudt.org/2.1/schema/qudt> .

tag:Water a brick:Tag ;
    rdfs:label "Water" .

tag:Equipment a brick:Tag ;
    rdfs:label "Equipment" .

tag:Temperature a brick:Tag ;
    rdfs:label "Temperature" .

brick:Tag a owl:Class ;
    sh:property bsh:isAssociatedWithShape,
        bsh:isTagOfShape .

tag:Sensor a brick:Tag ;
    rdfs:label "Sensor" .

tag:Setpoint a brick:Tag ;
    rdfs:label "Setpoint" .

tag:Air a brick:Tag ;
    rdfs:label "Air" .

<http://qudt.org/2.1/vocab/quantitykind> a owl:Ontology ;
    rdfs:label "QUDT VOCAB Quantity Kinds  Release 2.1.26" ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-QUANTITY-KINDS-ALL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:imports <http://qudt.org/2.1/schema/facade/qudt>,
        <http://qudt.org/2.1/vocab/dimensionvector> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/quantitykind> .

qudt:QuantityKind a owl:Class ;
    rdfs:label "Quantity Kind" ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=112-01-04"^^xsd:anyURI ;
    rdfs:comment "A <b>Quantity Kind</b> is any observable property that can be  measured and quantified numerically. Familiar examples include physical properties such as length, mass, time, force, energy, power, electric charge, etc. Less familiar examples include currency, interest rate, price to earning ratio, and information capacity."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKind ;
            owl:onProperty qudt:generalization ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:hasDimensionVector ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:QuantityKindDimensionVector_SI ;
            owl:onProperty qudt:dimensionVectorForSI ],
        [ a owl:Restriction ;
            owl:allValuesFrom qudt:SystemOfQuantityKinds ;
            owl:onProperty qudt:isQuantityKindOf ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:int ;
            owl:onProperty qudt:generalization ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:baseCGSUnitDimensions ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:baseISOUnitDimensions ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:baseImperialUnitDimensions ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:baseSIUnitDimensions ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:baseUSCustomaryUnitDimensions ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:dimensionVectorForSI ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:latexDefinition ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:mathMLdefinition ],
        [ a owl:Restriction ;
            owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onClass qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:qkdvDenominator ],
        [ a owl:Restriction ;
            owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onClass qudt:QuantityKindDimensionVector ;
            owl:onProperty qudt:qkdvNumerator ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableCGSUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableISOUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableImperialUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableSIUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableUSCustomaryUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:applicableUnit ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty qudt:expression ],
        qudt:AbstractQuantityKind,
        qudt:Verifiable .

owl:Class rdfs:subClassOf rdfs:Class ;
    sh:property bsh:hasAssociatedTagShape,
        bsh:hasTagShape .

tag:Point a brick:Tag ;
    rdfs:label "Point" .

brick:hasTag a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has tag" ;
    rdfs:subPropertyOf brick:Relationship ;
    owl:inverseOf brick:isTagOf ;
    skos:definition "The subject has the given tag"@en .

